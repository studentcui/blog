(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,o,s=e[0],c=e[1],l=e[2],d=0,p=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&p.push(i[o][0]),i[o]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);for(u&&u(e);p.length;)p.shift()();return a.push.apply(a,l||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var c=t[s];0!==i[c]&&(r=!1)}r&&(a.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},i={1:0},a=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=i[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=i[n]=[e,r]}));e.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"4c12ff0f",3:"2597196a",4:"75113ec8",5:"4f5f39f1",6:"1f38cb1a",7:"ed189e22",8:"cedb2b44",9:"76f8eaeb",10:"719e5deb",11:"b731d460",12:"77ca5aef",13:"01b4aad4",14:"48bf68b7",15:"04e894d9",16:"8e0a1bb9",17:"1c3b8e20",18:"ebcc8ed4",19:"17bda1f2",20:"ed6d5996",21:"52340ddf",22:"bee2ac61",23:"9102f4a1",24:"a2c65d50",25:"2c625440",26:"e7c63c07",27:"f2283bc9",28:"5dad5fef",29:"ee47ee19",30:"2d2f917a",31:"812067b3",32:"e2b4f01b",33:"335155cf",34:"338e413e",35:"aec2d5dd",36:"ac0cecac",37:"a01f6fd0",38:"e9781df2",39:"429495fa",40:"2d2ad14b",41:"5da26cbc",42:"63a93eb3",43:"a704d6c7",44:"3055dece",45:"9b58e66e",46:"d2674f32",47:"799e812e",48:"c013731e",49:"3e81fe4a",50:"ec5ca604",51:"168eeb95",52:"33e32b59",53:"97144401",54:"cb54a49f",55:"2e169c63",56:"485964d5",57:"f9951222",58:"75b6dfe2",59:"36983e5b",60:"5991414e",61:"d62c3633",62:"ca72829d",63:"2c7081bc"}[n]+".js"}(n);var c=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(l);var t=i[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;c.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",c.name="ChunkLoadError",c.type=r,c.request=a,t[1](c)}i[n]=void 0}};var l=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/blog/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var u=c;a.push([242,0]),t()}([function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e,t){var r=t(0),i=t(38).f,a=t(24),o=t(14),s=t(114),c=t(119),l=t(106);n.exports=function(n,e){var t,u,d,p,h,m=n.target,g=n.global,f=n.stat;if(t=g?r:f?r[m]||s(m,{}):(r[m]||{}).prototype)for(u in e){if(p=e[u],d=n.noTargetGet?(h=i(t,u))&&h.value:t[u],!l(g?u:m+(f?".":"#")+u,n.forced)&&void 0!==d){if(typeof p==typeof d)continue;c(p,d)}(n.sham||d&&d.sham)&&a(p,"sham",!0),o(t,u,p,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(63),i=Function.prototype,a=i.bind,o=i.call,s=r&&a.bind(o,o);n.exports=r?function(n){return n&&s(n)}:function(n){return n&&function(){return o.apply(n,arguments)}}},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var r=t(0),i=t(49),a=t(9),o=t(83),s=t(50),c=t(156),l=i("wks"),u=r.Symbol,d=u&&u.for,p=c?u:u&&u.withoutSetter||o;n.exports=function(n){if(!a(l,n)||!s&&"string"!=typeof l[n]){var e="Symbol."+n;s&&a(u,n)?l[n]=u[n]:l[n]=c&&d?d(e):p(e)}return l[n]}},function(n,e,t){var r=t(122),i=t(14),a=t(262);r||i(Object.prototype,"toString",a,{unsafe:!0})},function(n,e,t){var r=t(63),i=Function.prototype.call;n.exports=r?i.bind(i):function(){return i.apply(i,arguments)}},function(n,e,t){var r=t(2);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(3),i=t(17),a=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return a(i(n),e)}},function(n,e,t){var r=t(0),i=t(11),a=r.String,o=r.TypeError;n.exports=function(n){if(i(n))return n;throw o(a(n)+" is not an object")}},function(n,e,t){var r=t(4);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(0),i=t(80),a=r.String;n.exports=function(n){if("Symbol"===i(n))throw TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,t){var r=t(0),i=t(8),a=t(158),o=t(157),s=t(10),c=t(85),l=r.TypeError,u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=i?o?function(n,e,t){if(s(n),e=c(e),s(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=d(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return u(n,e,t)}:u:function(n,e,t){if(s(n),e=c(e),s(t),a)try{return u(n,e,t)}catch(n){}if("get"in t||"set"in t)throw l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(0),i=t(4),a=t(24),o=t(163),s=t(114);n.exports=function(n,e,t,c){var l=!!c&&!!c.unsafe,u=!!c&&!!c.enumerable,d=!!c&&!!c.noTargetGet,p=c&&void 0!==c.name?c.name:e;return i(t)&&o(t,p,c),n===r?(u?n[e]=t:s(e,t),n):(l?!d&&n[e]&&(u=!0):delete n[e],u?n[e]=t:a(n,e,t),n)}},function(n,e,t){var r=t(0),i=t(4),a=function(n){return i(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n]):r[n]&&r[n][e]}},function(n,e){n.exports=!1},function(n,e,t){var r=t(0),i=t(19),a=r.Object;n.exports=function(n){return a(i(n))}},function(n,e,t){"use strict";var r=t(1),i=t(95);r({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},function(n,e,t){var r=t(0).TypeError;n.exports=function(n){if(null==n)throw r("Can't call method on "+n);return n}},function(n,e,t){var r=t(62),i=t(19);n.exports=function(n){return r(i(n))}},function(n,e,t){var r=t(0),i=t(4),a=t(65),o=r.TypeError;n.exports=function(n){if(i(n))return n;throw o(a(n)+" is not a function")}},function(n,e,t){var r=t(52);n.exports=function(n){return r(n.length)}},function(n,e,t){var r=t(3),i=r({}.toString),a=r("".slice);n.exports=function(n){return a(i(n),8,-1)}},function(n,e,t){var r=t(8),i=t(13),a=t(47);n.exports=r?function(n,e,t){return i.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";var r=t(176).charAt,i=t(12),a=t(35),o=t(162),s=a.set,c=a.getterFor("String Iterator");o(String,"String",(function(n){s(this,{type:"String Iterator",string:i(n),index:0})}),(function(){var n,e=c(this),t=e.string,i=e.index;return i>=t.length?{value:void 0,done:!0}:(n=r(t,i),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var r=t(14),i=t(283),a=Error.prototype;a.toString!==i&&r(a,"toString",i)},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(15);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(193),i="object"==typeof self&&self&&self.Object===Object&&self,a=r||i||Function("return this")();n.exports=a},function(n,e,t){"use strict";function r(n,e,t,r,i,a,o,s){var c,l="function"==typeof n?n.options:n;if(e&&(l.render=e,l.staticRenderFns=t,l._compiled=!0),r&&(l.functional=!0),a&&(l._scopeId="data-v-"+a),o?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),i&&i.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},l._ssrRegister=c):i&&(c=s?function(){i.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:i),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(n,e){return c.call(e),u(n,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,c):[c]}return{exports:n,options:l}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(1),i=t(57).filter;r({target:"Array",proto:!0,forced:!t(93)("filter")},{filter:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(0),i=t(177),a=t(178),o=t(144),s=t(24),c=t(5),l=c("iterator"),u=c("toStringTag"),d=o.values,p=function(n,e){if(n){if(n[l]!==d)try{s(n,l,d)}catch(e){n[l]=d}if(n[u]||s(n,u,e),i[e])for(var t in o)if(n[t]!==o[t])try{s(n,t,o[t])}catch(e){n[t]=o[t]}}};for(var h in i)p(r[h]&&r[h].prototype,h);p(a,"DOMTokenList")},function(n,e,t){var r,i=t(10),a=t(145),o=t(117),s=t(66),c=t(161),l=t(84),u=t(87),d=u("IE_PROTO"),p=function(){},h=function(n){return"<script>"+n+"<\/script>"},m=function(n){n.write(h("")),n.close();var e=n.parentWindow.Object;return n=null,e},g=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;g="undefined"!=typeof document?document.domain&&r?m(r):((e=l("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(h("document.F=Object")),n.close(),n.F):m(r);for(var t=o.length;t--;)delete g.prototype[o[t]];return g()};s[d]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=i(n),t=new p,p.prototype=null,t[d]=n):t=g(),void 0===e?t:a.f(t,e)}},function(n,e,t){var r=t(3);n.exports=r({}.isPrototypeOf)},function(n,e,t){var r,i,a,o=t(244),s=t(0),c=t(3),l=t(11),u=t(24),d=t(9),p=t(113),h=t(87),m=t(66),g=s.TypeError,f=s.WeakMap;if(o||p.state){var v=p.state||(p.state=new f),b=c(v.get),y=c(v.has),x=c(v.set);r=function(n,e){if(y(v,n))throw new g("Object already initialized");return e.facade=n,x(v,n,e),e},i=function(n){return b(v,n)||{}},a=function(n){return y(v,n)}}else{var k=h("state");m[k]=!0,r=function(n,e){if(d(n,k))throw new g("Object already initialized");return e.facade=n,u(n,k,e),e},i=function(n){return d(n,k)?n[k]:{}},a=function(n){return d(n,k)}}n.exports={set:r,get:i,has:a,enforce:function(n){return a(n)?i(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=i(e)).type!==n)throw g("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(1),i=t(182);r({target:"Array",proto:!0,forced:[].forEach!=i},{forEach:i})},function(n,e,t){var r=t(0),i=t(177),a=t(178),o=t(182),s=t(24),c=function(n){if(n&&n.forEach!==o)try{s(n,"forEach",o)}catch(e){n.forEach=o}};for(var l in i)i[l]&&c(r[l]&&r[l].prototype);c(a)},function(n,e,t){var r=t(8),i=t(7),a=t(118),o=t(47),s=t(20),c=t(85),l=t(9),u=t(158),d=Object.getOwnPropertyDescriptor;e.f=r?d:function(n,e){if(n=s(n),e=c(e),u)try{return d(n,e)}catch(n){}if(l(n,e))return o(!i(a.f,n,e),n[e])}},function(n,e,t){var r=t(63),i=Function.prototype,a=i.apply,o=i.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(a):function(){return o.apply(a,arguments)})},function(n,e,t){var r=t(1),i=t(0),a=t(39),o=t(279),s=i.WebAssembly,c=7!==Error("e",{cause:7}).cause,l=function(n,e){var t={};t[n]=o(n,e,c),r({global:!0,constructor:!0,arity:1,forced:c},t)},u=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,c),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},t)}};l("Error",(function(n){return function(e){return a(n,this,arguments)}})),l("EvalError",(function(n){return function(e){return a(n,this,arguments)}})),l("RangeError",(function(n){return function(e){return a(n,this,arguments)}})),l("ReferenceError",(function(n){return function(e){return a(n,this,arguments)}})),l("SyntaxError",(function(n){return function(e){return a(n,this,arguments)}})),l("TypeError",(function(n){return function(e){return a(n,this,arguments)}})),l("URIError",(function(n){return function(e){return a(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return a(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return a(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return a(n,this,arguments)}}))},function(n,e,t){var r=t(303),i=t(306);n.exports=function(n,e){var t=i(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return a})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return c})),t.d(e,"h",(function(){return l})),t.d(e,"i",(function(){return u})),t.d(e,"c",(function(){return d})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return h})),t.d(e,"m",(function(){return m})),t.d(e,"d",(function(){return f})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));t(18),t(44),t(139),t(79),t(104),t(112),t(43),t(36),t(6),t(37),t(31),t(82),t(103),t(155),t(77),t(214),t(26),t(143);var r=/#.*$/,i=/\.(md|html)$/,a=/\/$/,o=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(i,"")}function c(n){return o.test(n)}function l(n){return/^mailto:/.test(n)}function u(n){return/^tel:/.test(n)}function d(n){if(c(n))return n;if(!n)return"404";var e=n.match(r),t=e?e[0]:"",i=s(n);return a.test(i)?n:i+".html"+t}function p(n,e){var t=n.hash,i=function(n){var e=n&&n.match(r);if(e)return e[0]}(e);return(!i||t===i)&&s(n.path)===s(e)}function h(n,e,t){if(c(e))return{type:"external",path:e};t&&(e=function(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var i=e.split("/");t&&i[i.length-1]||i.pop();for(var a=n.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?i.pop():"."!==s&&i.push(s)}""!==i[0]&&i.unshift("");return i.join("/")}(e,t));for(var r=s(e),i=0;i<n.length;i++)if(s(n[i].regularPath)===r)return Object.assign({},n[i],{type:"page",path:d(n[i].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function m(n,e,t,r){var i=t.pages,a=t.themeConfig,o=r&&a.locales&&a.locales[r]||a;if("auto"===(n.frontmatter.sidebar||o.sidebar||a.sidebar))return g(n);var s=o.sidebar||a.sidebar;if(s){var c=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(r=n,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var r;return{}}(e,s),l=c.base,u=c.config;return"auto"===u?g(n):u?u.map((function(n){return function n(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return h(t,e,r);if(Array.isArray(e))return Object.assign(h(t,e[0],r),{title:e[1]});i>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var a=e.children||[];return 0===a.length&&e.path?Object.assign(h(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:a.map((function(e){return n(e,t,r,i+1)})),collapsable:!1!==e.collapsable}}(n,i,l)})):[]}return[]}function g(n){var e=f(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map((function(e){return{type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}}))}]}function f(n){var e;return(n=n.map((function(n){return Object.assign({},n)}))).forEach((function(n){2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)})),n.filter((function(n){return 2===n.level}))}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){var e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e,t){"use strict";var r=t(1),i=t(57).map;r({target:"Array",proto:!0,forced:!t(93)("map")},{map:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(39),i=t(7),a=t(3),o=t(110),s=t(2),c=t(10),l=t(4),u=t(55),d=t(52),p=t(12),h=t(19),m=t(127),g=t(46),f=t(284),v=t(111),b=t(5)("replace"),y=Math.max,x=Math.min,k=a([].concat),w=a([].push),E=a("".indexOf),A=a("".slice),_="$0"==="a".replace(/./,"$0"),T=!!/./[b]&&""===/./[b]("a","$0");o("replace",(function(n,e,t){var a=T?"$":"$0";return[function(n,t){var r=h(this),a=null==n?void 0:g(n,b);return a?i(a,n,r,t):i(e,p(r),n,t)},function(n,i){var o=c(this),s=p(n);if("string"==typeof i&&-1===E(i,a)&&-1===E(i,"$<")){var h=t(e,o,s,i);if(h.done)return h.value}var g=l(i);g||(i=p(i));var b=o.global;if(b){var _=o.unicode;o.lastIndex=0}for(var T=[];;){var j=v(o,s);if(null===j)break;if(w(T,j),!b)break;""===p(j[0])&&(o.lastIndex=m(s,d(o.lastIndex),_))}for(var S,C="",$=0,I=0;I<T.length;I++){for(var z=p((j=T[I])[0]),O=y(x(u(j.index),s.length),0),G=[],D=1;D<j.length;D++)w(G,void 0===(S=j[D])?S:String(S));var B=j.groups;if(g){var P=k([z],G,O,s);void 0!==B&&w(P,B);var L=p(r(i,void 0,P))}else L=f(z,s,O,G,B,i);O>=$&&(C+=A(s,$,O)+L,$=O+z.length)}return C+A(s,$)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!_||T)},function(n,e,t){"use strict";var r=t(2);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var r=t(21);n.exports=function(n,e){var t=n[e];return null==t?void 0:r(t)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var r=t(16),i=t(113);(n.exports=function(n,e){return i[n]||(i[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.22.5",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.22.5/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){var r=t(51),i=t(2);n.exports=!!Object.getOwnPropertySymbols&&!i((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r,i,a=t(0),o=t(28),s=a.process,c=a.Deno,l=s&&s.versions||c&&c.version,u=l&&l.v8;u&&(i=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!i&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(i=+r[1]),n.exports=i},function(n,e,t){var r=t(55),i=Math.min;n.exports=function(n){return n>0?i(r(n),9007199254740991):0}},function(n,e,t){var r=t(0);n.exports=r.Promise},function(n,e,t){"use strict";var r=t(1),i=t(0),a=t(60),o=t(91),s=t(11),c=t(116),l=t(22),u=t(20),d=t(73),p=t(5),h=t(93),m=t(70),g=h("slice"),f=p("species"),v=i.Array,b=Math.max;r({target:"Array",proto:!0,forced:!g},{slice:function(n,e){var t,r,i,p=u(this),h=l(p),g=c(n,h),y=c(void 0===e?h:e,h);if(a(p)&&(t=p.constructor,(o(t)&&(t===v||a(t.prototype))||s(t)&&null===(t=t[f]))&&(t=void 0),t===v||void 0===t))return m(p,g,y);for(r=new(void 0===t?v:t)(b(y-g,0)),i=0;g<y;g++,i++)g in p&&d(r,i,p[g]);return r.length=i,r}})},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){var e=+n;return e!=e||0===e?0:(e>0?r:t)(e)}},function(n,e,t){var r=t(3),i=t(21),a=t(63),o=r(r.bind);n.exports=function(n,e){return i(n),void 0===e?n:a?o(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){var r=t(56),i=t(3),a=t(62),o=t(17),s=t(22),c=t(148),l=i([].push),u=function(n){var e=1==n,t=2==n,i=3==n,u=4==n,d=6==n,p=7==n,h=5==n||d;return function(m,g,f,v){for(var b,y,x=o(m),k=a(x),w=r(g,f),E=s(k),A=0,_=v||c,T=e?_(m,E):t||p?_(m,0):void 0;E>A;A++)if((h||A in k)&&(y=w(b=k[A],A,x),n))if(e)T[A]=y;else if(y)switch(n){case 3:return!0;case 5:return b;case 6:return A;case 2:l(T,b)}else switch(n){case 4:return!1;case 7:l(T,b)}return d?-1:i||u?u:T}};n.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},function(n,e,t){var r=t(160),i=t(117).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,i)}},function(n,e,t){var r=t(13).f,i=t(9),a=t(5)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!i(n,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e,t){var r=t(23);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e,t){var r=t(74),i=t(288),a=t(289),o=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?i(n):a(n)}},function(n,e,t){var r=t(0),i=t(3),a=t(2),o=t(23),s=r.Object,c=i("".split);n.exports=a((function(){return!s("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?c(n,""):s(n)}:s},function(n,e,t){var r=t(2);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var r=t(0),i=t(15),a=t(4),o=t(34),s=t(156),c=r.Object;n.exports=s?function(n){return"symbol"==typeof n}:function(n){var e=i("Symbol");return a(e)&&o(e.prototype,c(n))}},function(n,e,t){var r=t(0).String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(8),i=t(9),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=i(a,"name"),c=s&&"something"===function(){}.name,l=s&&(!r||r&&o(a,"name").configurable);n.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(n,e,t){var r=t(3),i=t(10),a=t(245);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return i(t),a(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e,t){var r=t(3);n.exports=r([].slice)},function(n,e,t){var r=t(0),i=t(53),a=t(4),o=t(106),s=t(88),c=t(5),l=t(253),u=t(16),d=t(51),p=i&&i.prototype,h=c("species"),m=!1,g=a(r.PromiseRejectionEvent),f=o("Promise",(function(){var n=s(i),e=n!==String(i);if(!e&&66===d)return!0;if(u&&(!p.catch||!p.finally))return!0;if(d>=51&&/native code/.test(n))return!1;var t=new i((function(n){n(1)})),r=function(n){n((function(){}),(function(){}))};return(t.constructor={})[h]=r,!(m=t.then((function(){}))instanceof r)||!e&&l&&!g}));n.exports={CONSTRUCTOR:f,REJECTION_EVENT:g,SUBCLASSING:m}},function(n,e,t){"use strict";var r=t(21),i=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new i(n)}},function(n,e,t){"use strict";var r=t(85),i=t(13),a=t(47);n.exports=function(n,e,t){var o=r(e);o in n?i.f(n,o,a(0,t)):n[o]=t}},function(n,e,t){var r=t(29).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(82);var r=t(76);t(81),t(94),t(6),t(126),t(25),t(32),t(188);var i=t(101);t(40),t(26);function a(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(i.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(1),i=t(0),a=t(2),o=t(60),s=t(11),c=t(17),l=t(22),u=t(73),d=t(148),p=t(93),h=t(5),m=t(51),g=h("isConcatSpreadable"),f=i.TypeError,v=m>=51||!a((function(){var n=[];return n[g]=!1,n.concat()[0]!==n})),b=p("concat"),y=function(n){if(!s(n))return!1;var e=n[g];return void 0!==e?!!e:o(n)};r({target:"Array",proto:!0,arity:1,forced:!v||!b},{concat:function(n){var e,t,r,i,a,o=c(this),s=d(o,0),p=0;for(e=-1,r=arguments.length;e<r;e++)if(y(a=-1===e?o:arguments[e])){if(p+(i=l(a))>9007199254740991)throw f("Maximum allowed index exceeded");for(t=0;t<i;t++,p++)t in a&&u(s,p,a[t])}else{if(p>=9007199254740991)throw f("Maximum allowed index exceeded");u(s,p++,a)}return s.length=p,s}})},function(n,e,t){t(379),t(380)},function(n,e,t){"use strict";t(18);var r,i,a=t(1),o=t(0),s=t(7),c=t(3),l=t(4),u=t(11),d=(r=!1,(i=/[ac]/).exec=function(){return r=!0,/./.exec.apply(this,arguments)},!0===i.test("abc")&&r),p=o.Error,h=c(/./.test);a({target:"RegExp",proto:!0,forced:!d},{test:function(n){var e=this.exec;if(!l(e))return h(this,n);var t=s(e,this,n);if(null!==t&&!u(t))throw new p("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){var r=t(0),i=t(122),a=t(4),o=t(23),s=t(5)("toStringTag"),c=r.Object,l="Arguments"==o(function(){return arguments}());n.exports=i?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=c(n),s))?t:l?o(e):"Object"==(r=o(e))&&a(e.callee)?"Arguments":r}},function(n,e,t){t(271),t(274),t(275),t(125),t(276)},function(n,e,t){t(1)({target:"Array",stat:!0},{isArray:t(60)})},function(n,e,t){var r=t(3),i=0,a=Math.random(),o=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++i+a,36)}},function(n,e,t){var r=t(0),i=t(11),a=r.document,o=i(a)&&i(a.createElement);n.exports=function(n){return o?a.createElement(n):{}}},function(n,e,t){var r=t(159),i=t(64);n.exports=function(n){var e=r(n,"string");return i(e)?e:e+""}},function(n,e,t){var r=t(160),i=t(117);n.exports=Object.keys||function(n){return r(n,i)}},function(n,e,t){var r=t(49),i=t(83),a=r("keys");n.exports=function(n){return a[n]||(a[n]=i(n))}},function(n,e,t){var r=t(3),i=t(4),a=t(113),o=r(Function.toString);i(a.inspectSource)||(a.inspectSource=function(n){return o(n)}),n.exports=a.inspectSource},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(23),i=t(0);n.exports="process"==r(i.process)},function(n,e,t){var r=t(3),i=t(2),a=t(4),o=t(80),s=t(15),c=t(88),l=function(){},u=[],d=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,h=r(p.exec),m=!p.exec(l),g=function(n){if(!a(n))return!1;try{return d(l,u,n),!0}catch(n){return!1}},f=function(n){if(!a(n))return!1;switch(o(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return m||!!h(p,c(n))}catch(n){return!0}};f.sham=!0,n.exports=!d||i((function(){var n;return g(g.call)||!g(Object)||!g((function(){n=!0}))||n}))?f:g},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(6);function r(n,e,t,r,i,a,o){try{var s=n[a](o),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,i)}function i(n){return function(){var e=this,t=arguments;return new Promise((function(i,a){var o=n.apply(e,t);function s(n){r(o,i,a,s,c,"next",n)}function c(n){r(o,i,a,s,c,"throw",n)}s(void 0)}))}}},function(n,e,t){var r=t(2),i=t(5),a=t(51),o=i("species");n.exports=function(n){return a>=51||!r((function(){var e=[];return(e.constructor={})[o]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";var r=t(1),i=t(8),a=t(0),o=t(3),s=t(9),c=t(4),l=t(34),u=t(12),d=t(13).f,p=t(119),h=a.Symbol,m=h&&h.prototype;if(i&&c(h)&&(!("description"in m)||void 0!==h().description)){var g={},f=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),e=l(m,this)?new h(n):void 0===n?h():h(n);return""===n&&(g[e]=!0),e};p(f,h),f.prototype=m,m.constructor=f;var v="Symbol(test)"==String(h("test")),b=o(m.toString),y=o(m.valueOf),x=/^Symbol\((.*)\)[^)]+$/,k=o("".replace),w=o("".slice);d(m,"description",{configurable:!0,get:function(){var n=y(this),e=b(n);if(s(g,n))return"";var t=v?w(e,7,-1):k(e,x,"$1");return""===t?void 0:t}}),r({global:!0,constructor:!0,forced:!0},{Symbol:f})}},function(n,e,t){"use strict";var r,i,a=t(7),o=t(3),s=t(12),c=t(189),l=t(109),u=t(49),d=t(33),p=t(35).get,h=t(227),m=t(232),g=u("native-string-replace",String.prototype.replace),f=RegExp.prototype.exec,v=f,b=o("".charAt),y=o("".indexOf),x=o("".replace),k=o("".slice),w=(i=/b*/g,a(f,r=/a/,"a"),a(f,i,"a"),0!==r.lastIndex||0!==i.lastIndex),E=l.BROKEN_CARET,A=void 0!==/()??/.exec("")[1];(w||A||E||h||m)&&(v=function(n){var e,t,r,i,o,l,u,h=this,m=p(h),_=s(n),T=m.raw;if(T)return T.lastIndex=h.lastIndex,e=a(v,T,_),h.lastIndex=T.lastIndex,e;var j=m.groups,S=E&&h.sticky,C=a(c,h),$=h.source,I=0,z=_;if(S&&(C=x(C,"y",""),-1===y(C,"g")&&(C+="g"),z=k(_,h.lastIndex),h.lastIndex>0&&(!h.multiline||h.multiline&&"\n"!==b(_,h.lastIndex-1))&&($="(?: "+$+")",z=" "+z,I++),t=new RegExp("^(?:"+$+")",C)),A&&(t=new RegExp("^"+$+"$(?!\\s)",C)),w&&(r=h.lastIndex),i=a(f,S?t:h,z),S?i?(i.input=k(i.input,I),i[0]=k(i[0],I),i.index=h.lastIndex,h.lastIndex+=i[0].length):h.lastIndex=0:w&&i&&(h.lastIndex=h.global?i.index+i[0].length:r),A&&i&&i.length>1&&a(g,i[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(i[o]=void 0)})),i&&j)for(i.groups=l=d(null),o=0;o<j.length;o++)l[(u=j[o])[0]]=i[u[1]];return i}),n.exports=v},function(n,e,t){var r=t(293),i=t(294),a=t(295),o=t(296),s=t(297);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,n.exports=c},function(n,e,t){var r=t(195);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(41)(Object,"create");n.exports=r},function(n,e,t){var r=t(315);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(135);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(54),t(6),t(108),t(188),t(25),t(18),t(79);var r=t(76);function i(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=i(n,r.minimum,1),t.status=1===n?null:n;var c=t.render(!e),l=c.querySelector(r.barSelector),u=r.speed,d=r.easing;return c.offsetWidth,o((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(l,function(n,e,t){var i;return(i="translate3d"===r.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,i}(n,u,d)),1===n?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*i(Math.random()*e,.1,.95)),e=i(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var i,o=e.querySelector(r.barSelector),c=n?"-100":a(t.status||0),u=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(i=e.querySelector(r.spinnerSelector))&&p(i),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,i=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);i--;)if((r=n[i]+a)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,i,a=arguments;if(2==a.length)for(t in e)void 0!==(i=e[t])&&e.hasOwnProperty(t)&&r(n,t,i);else r(n,a[1],a[2])}}();function c(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function l(n,e){var t=d(n),r=t+e;c(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=d(n);c(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=i)},function(n,e,t){"use strict";var r=t(1),i=t(3),a=t(115).indexOf,o=t(45),s=i([].indexOf),c=!!s&&1/s([1],1,-0)<0,l=o("indexOf");r({target:"Array",proto:!0,forced:c||!l},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return c?s(this,n,e)||0:a(this,n,e)}})},function(n,e,t){"use strict";var r=t(39),i=t(7),a=t(3),o=t(110),s=t(149),c=t(10),l=t(19),u=t(121),d=t(127),p=t(52),h=t(12),m=t(46),g=t(124),f=t(111),v=t(95),b=t(109),y=t(2),x=b.UNSUPPORTED_Y,k=Math.min,w=[].push,E=a(/./.exec),A=a(w),_=a("".slice);o("split",(function(n,e,t){var a;return a="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var a=h(l(this)),o=void 0===t?4294967295:t>>>0;if(0===o)return[];if(void 0===n)return[a];if(!s(n))return i(e,a,n,o);for(var c,u,d,p=[],m=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),f=0,b=new RegExp(n.source,m+"g");(c=i(v,b,a))&&!((u=b.lastIndex)>f&&(A(p,_(a,f,c.index)),c.length>1&&c.index<a.length&&r(w,p,g(c,1)),d=c[0].length,f=u,p.length>=o));)b.lastIndex===c.index&&b.lastIndex++;return f===a.length?!d&&E(b,"")||A(p,""):A(p,_(a,f)),p.length>o?g(p,0,o):p}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:i(e,this,n,t)}:e,[function(e,t){var r=l(this),o=null==e?void 0:m(e,n);return o?i(o,e,r,t):i(a,h(r),e,t)},function(n,r){var i=c(this),o=h(n),s=t(a,i,o,r,a!==e);if(s.done)return s.value;var l=u(i,RegExp),m=i.unicode,g=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(x?"g":"y"),v=new l(x?"^(?:"+i.source+")":i,g),b=void 0===r?4294967295:r>>>0;if(0===b)return[];if(0===o.length)return null===f(v,o)?[o]:[];for(var y=0,w=0,E=[];w<o.length;){v.lastIndex=x?0:w;var T,j=f(v,x?_(o,w):o);if(null===j||(T=k(p(v.lastIndex+(x?w:0)),o.length))===y)w=d(o,w,m);else{if(A(E,_(o,y,w)),E.length===b)return E;for(var S=1;S<=j.length-1;S++)if(A(E,j[S]),E.length===b)return E;w=y=T}}return A(E,_(o,y)),E}]}),!!y((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),x)},function(n,e,t){var r=t(1),i=t(17),a=t(86);r({target:"Object",stat:!0,forced:t(2)((function(){a(1)}))},{keys:function(n){return a(i(n))}})},function(n,e,t){var r=t(2),i=t(4),a=/#|\.prototype\./,o=function(n,e){var t=c[s(n)];return t==u||t!=l&&(i(e)?r(e):!!e)},s=o.normalize=function(n){return String(n).replace(a,".").toLowerCase()},c=o.data={},l=o.NATIVE="N",u=o.POLYFILL="P";n.exports=o},function(n,e,t){var r=t(80),i=t(46),a=t(67),o=t(5)("iterator");n.exports=function(n){if(null!=n)return i(n,o)||i(n,"@@iterator")||a[r(n)]}},function(n,e,t){var r=t(8),i=t(68).EXISTS,a=t(3),o=t(13).f,s=Function.prototype,c=a(s.toString),l=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=a(l.exec);r&&!i&&o(s,"name",{configurable:!0,get:function(){try{return u(l,c(this))[1]}catch(n){return""}}})},function(n,e,t){var r=t(2),i=t(0).RegExp,a=r((function(){var n=i("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),o=a||r((function(){return!i("a","y").sticky})),s=a||r((function(){var n=i("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:o,UNSUPPORTED_Y:a}},function(n,e,t){"use strict";t(18);var r=t(3),i=t(14),a=t(95),o=t(2),s=t(5),c=t(24),l=s("species"),u=RegExp.prototype;n.exports=function(n,e,t,d){var p=s(n),h=!o((function(){var e={};return e[p]=function(){return 7},7!=""[n](e)})),m=h&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[p]=/./[p]),t.exec=function(){return e=!0,null},t[p](""),!e}));if(!h||!m||t){var g=r(/./[p]),f=e(p,""[n],(function(n,e,t,i,o){var s=r(n),c=e.exec;return c===a||c===u.exec?h&&!o?{done:!0,value:g(e,t,i)}:{done:!0,value:s(t,e,i)}:{done:!1}}));i(String.prototype,n,f[0]),i(u,p,f[1])}d&&c(u[p],"sham",!0)}},function(n,e,t){var r=t(0),i=t(7),a=t(10),o=t(4),s=t(23),c=t(95),l=r.TypeError;n.exports=function(n,e){var t=n.exec;if(o(t)){var r=i(t,n,e);return null!==r&&a(r),r}if("RegExp"===s(n))return i(c,n,e);throw l("RegExp#exec called on incompatible receiver")}},function(n,e,t){"use strict";var r=t(1),i=t(3),a=t(62),o=t(20),s=t(45),c=i([].join),l=a!=Object,u=s("join",",");r({target:"Array",proto:!0,forced:l||!u},{join:function(n){return c(o(this),void 0===n?",":n)}})},function(n,e,t){var r=t(0),i=t(114),a=r["__core-js_shared__"]||i("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(0),i=Object.defineProperty;n.exports=function(n,e){try{i(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(20),i=t(116),a=t(22),o=function(n){return function(e,t,o){var s,c=r(e),l=a(c),u=i(o,l);if(n&&t!=t){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((n||u in c)&&c[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){var r=t(55),i=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?i(t+e,0):a(t,e)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,a=i&&!r.call({1:2},1);e.f=a?function(n){var e=i(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(9),i=t(164),a=t(38),o=t(13);n.exports=function(n,e,t){for(var s=i(e),c=o.f,l=a.f,u=0;u<s.length;u++){var d=s[u];r(n,d)||t&&r(t,d)||c(n,d,l(e,d))}}},function(n,e,t){var r=t(0),i=t(9),a=t(4),o=t(17),s=t(87),c=t(166),l=s("IE_PROTO"),u=r.Object,d=u.prototype;n.exports=c?u.getPrototypeOf:function(n){var e=o(n);if(i(e,l))return e[l];var t=e.constructor;return a(t)&&e instanceof t?t.prototype:e instanceof u?d:null}},function(n,e,t){var r=t(10),i=t(167),a=t(5)("species");n.exports=function(n,e){var t,o=r(n).constructor;return void 0===o||null==(t=r(o)[a])?e:i(t)}},function(n,e,t){var r={};r[t(5)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var r=t(0),i=t(116),a=t(22),o=t(73),s=r.Array,c=Math.max;n.exports=function(n,e,t){for(var r=a(n),l=i(e,r),u=i(void 0===t?r:t,r),d=s(c(u-l,0)),p=0;l<u;l++,p++)o(d,p,n[l]);return d.length=p,d}},function(n,e,t){var r=t(1),i=t(15),a=t(39),o=t(7),s=t(3),c=t(2),l=t(60),u=t(4),d=t(11),p=t(64),h=t(70),m=t(50),g=i("JSON","stringify"),f=s(/./.exec),v=s("".charAt),b=s("".charCodeAt),y=s("".replace),x=s(1..toString),k=/[\uD800-\uDFFF]/g,w=/^[\uD800-\uDBFF]$/,E=/^[\uDC00-\uDFFF]$/,A=!m||c((function(){var n=i("Symbol")();return"[null]"!=g([n])||"{}"!=g({a:n})||"{}"!=g(Object(n))})),_=c((function(){return'"\\udf06\\ud834"'!==g("\udf06\ud834")||'"\\udead"'!==g("\udead")})),T=function(n,e){var t=h(arguments),r=e;if((d(e)||void 0!==n)&&!p(n))return l(e)||(e=function(n,e){if(u(r)&&(e=o(r,this,n,e)),!p(e))return e}),t[1]=e,a(g,null,t)},j=function(n,e,t){var r=v(t,e-1),i=v(t,e+1);return f(w,n)&&!f(E,i)||f(E,n)&&!f(w,r)?"\\u"+x(b(n,0),16):n};g&&r({target:"JSON",stat:!0,arity:3,forced:A||_},{stringify:function(n,e,t){var r=h(arguments),i=a(A?T:g,null,r);return _&&"string"==typeof i?y(i,k,j):i}})},function(n,e,t){t(186)("iterator")},function(n,e,t){"use strict";var r=t(176).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){var r=t(287),i=t(48),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(n){return i(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=c},function(n,e,t){var r=t(41)(t(29),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(307),i=t(314),a=t(316),o=t(317),s=t(318);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,n.exports=c},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(27),i=t(135),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!i(n))||(o.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(61),i=t(48);n.exports=function(n){return"symbol"==typeof n||i(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(82);t(81),t(94),t(6),t(126),t(25),t(32);var r=t(101);t(40),t(26);function i(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,i,a=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return a}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";var r=t(1),i=t(57).some;r({target:"Array",proto:!0,forced:!t(45)("some")},{some:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(7),i=t(110),a=t(10),o=t(52),s=t(12),c=t(19),l=t(46),u=t(127),d=t(111);i("match",(function(n,e,t){return[function(e){var t=c(this),i=null==e?void 0:l(e,n);return i?r(i,e,t):new RegExp(e)[n](s(t))},function(n){var r=a(this),i=s(n),c=t(e,r,i);if(c.done)return c.value;if(!r.global)return d(r,i);var l=r.unicode;r.lastIndex=0;for(var p,h=[],m=0;null!==(p=d(r,i));){var g=s(p[0]);h[m]=g,""===g&&(r.lastIndex=u(i,o(r.lastIndex),l)),m++}return 0===m?null:h}]}))},function(n,e,t){var r=t(5),i=t(33),a=t(13),o=r("unscopables"),s=Array.prototype;null==s[o]&&a.f(s,o,{configurable:!0,value:i(null)}),n.exports=function(n){s[o][n]=!0}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function c(n,e,t,r){var i=e&&e.prototype instanceof d?e:d,a=Object.create(i.prototype),o=new E(r||[]);return a._invoke=function(n,e,t){var r="suspendedStart";return function(i,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw a;return _()}for(t.method=i,t.arg=a;;){var o=t.delegate;if(o){var s=x(o,t);if(s){if(s===u)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var c=l(n,e,t);if("normal"===c.type){if(r=t.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(r="completed",t.method="throw",t.arg=c.arg)}}}(n,t,o),a}function l(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=c;var u={};function d(){}function p(){}function h(){}var m={};s(m,i,(function(){return this}));var g=Object.getPrototypeOf,f=g&&g(g(A([])));f&&f!==e&&t.call(f,i)&&(m=f);var v=h.prototype=d.prototype=Object.create(m);function b(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function y(n,e){var r;this._invoke=function(i,a){function o(){return new e((function(r,o){!function r(i,a,o,s){var c=l(n[i],n,a);if("throw"!==c.type){var u=c.arg,d=u.value;return d&&"object"==typeof d&&t.call(d,"__await")?e.resolve(d.__await).then((function(n){r("next",n,o,s)}),(function(n){r("throw",n,o,s)})):e.resolve(d).then((function(n){u.value=n,o(u)}),(function(n){return r("throw",n,o,s)}))}s(c.arg)}(i,a,r,o)}))}return r=r?r.then(o,o):o()}}function x(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=l(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var i=r.arg;return i?i.done?(e[n.resultName]=i.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function k(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function w(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(k,this),this.reset(!0)}function A(n){if(n){var e=n[i];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,a=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:_}}function _(){return{value:void 0,done:!0}}return p.prototype=h,s(v,"constructor",h),s(h,"constructor",p),p.displayName=s(h,o,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,h):(n.__proto__=h,s(n,o,"GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},b(y.prototype),s(y.prototype,a,(function(){return this})),n.AsyncIterator=y,n.async=function(e,t,r,i,a){void 0===a&&(a=Promise);var o=new y(c(e,t,r,i),a);return n.isGeneratorFunction(t)?o:o.next().then((function(n){return n.done?n.value:o.next()}))},b(v),s(v,o,"Generator"),s(v,i,(function(){return this})),s(v,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=A,E.prototype={constructor:E,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return o.type="throw",o.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),c=t.call(a,"finallyLoc");if(s&&c){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===n||"continue"===n)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=n,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,u):this.complete(o)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),u},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),w(t),u}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var i=r.arg;w(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:A(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},n}(n.exports);try{regeneratorRuntime=r}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){var r=t(1),i=t(8),a=t(13).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==a,sham:!i},{defineProperty:a})},function(n,e,t){"use strict";var r=t(68).PROPER,i=t(14),a=t(10),o=t(12),s=t(2),c=t(238),l=RegExp.prototype.toString,u=s((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),d=r&&"toString"!=l.name;(u||d)&&i(RegExp.prototype,"toString",(function(){var n=a(this);return"/"+o(n.source)+"/"+o(c(n))}),{unsafe:!0})},function(n,e,t){"use strict";var r=t(20),i=t(140),a=t(67),o=t(35),s=t(13).f,c=t(162),l=t(16),u=t(8),d=o.set,p=o.getterFor("Array Iterator");n.exports=c(Array,"Array",(function(n,e){d(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=p(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");var h=a.Arguments=a.Array;if(i("keys"),i("values"),i("entries"),!l&&u&&"values"!==h.name)try{s(h,"name",{value:"values"})}catch(n){}},function(n,e,t){var r=t(8),i=t(157),a=t(13),o=t(10),s=t(20),c=t(86);e.f=r&&!i?Object.defineProperties:function(n,e){o(n);for(var t,r=s(e),i=c(e),l=i.length,u=0;l>u;)a.f(n,t=i[u++],r[t]);return n}},function(n,e,t){var r=t(0).TypeError;n.exports=function(n,e){if(n<e)throw r("Not enough arguments");return n}},function(n,e,t){var r=t(0),i=t(7),a=t(21),o=t(10),s=t(65),c=t(107),l=r.TypeError;n.exports=function(n,e){var t=arguments.length<2?c(n):e;if(a(t))return o(i(t,n));throw l(s(n)+" is not iterable")}},function(n,e,t){var r=t(263);n.exports=function(n,e){return new(r(n))(0===e?0:e)}},function(n,e,t){var r=t(11),i=t(23),a=t(5)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[a])?!!e:"RegExp"==i(n))}},function(n,e,t){var r=t(4),i=t(11),a=t(69);n.exports=function(n,e,t){var o,s;return a&&r(o=e.constructor)&&o!==t&&i(s=o.prototype)&&s!==t.prototype&&a(n,s),n}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,a=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,h=function(){return l.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=i.test(n);return s||a.test(n)?o(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,i,a,o,s,c,l=0,u=!1,f=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,a=i;return r=i=void 0,l=e,o=n.apply(a,t)}function y(n){return l=n,s=setTimeout(k,e),u?b(n):o}function x(n){var t=n-c;return void 0===c||t>=e||t<0||f&&n-l>=a}function k(){var n=h();if(x(n))return w(n);s=setTimeout(k,function(n){var t=e-(n-c);return f?p(t,a-(n-l)):t}(n))}function w(n){return s=void 0,v&&r?b(n):(r=i=void 0,o)}function E(){var n=h(),t=x(n);if(r=arguments,i=this,c=n,t){if(void 0===s)return y(c);if(f)return s=setTimeout(k,e),b(c)}return void 0===s&&(s=setTimeout(k,e)),o}return e=g(e)||0,m(t)&&(u=!!t.leading,a=(f="maxWait"in t)?d(g(t.maxWait)||0,e):a,v="trailing"in t?!!t.trailing:v),E.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=i=s=void 0},E.flush=function(){return void 0===s?o:w(h())},E}},function(n,e,t){var r=t(3),i=t(19),a=t(12),o=t(154),s=r("".replace),c="["+o+"]",l=RegExp("^"+c+c+"*"),u=RegExp(c+c+"*$"),d=function(n){return function(e){var t=a(i(e));return 1&n&&(t=s(t,l,"")),2&n&&(t=s(t,u,"")),t}};n.exports={start:d(1),end:d(2),trim:d(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){var r=t(3),i=t(14),a=Date.prototype,o=r(a.toString),s=r(a.getTime);"Invalid Date"!=String(new Date(NaN))&&i(a,"toString",(function(){var n=s(this);return n==n?o(this):"Invalid Date"}))},function(n,e,t){var r=t(50);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(8),i=t(2);n.exports=r&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(8),i=t(2),a=t(84);n.exports=!r&&!i((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(0),i=t(7),a=t(11),o=t(64),s=t(46),c=t(243),l=t(5),u=r.TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!a(n)||o(n))return n;var t,r=s(n,d);if(r){if(void 0===e&&(e="default"),t=i(r,n,e),!a(t)||o(t))return t;throw u("Can't convert object to primitive value")}return void 0===e&&(e="number"),c(n,e)}},function(n,e,t){var r=t(3),i=t(9),a=t(20),o=t(115).indexOf,s=t(66),c=r([].push);n.exports=function(n,e){var t,r=a(n),l=0,u=[];for(t in r)!i(s,t)&&i(r,t)&&c(u,t);for(;e.length>l;)i(r,t=e[l++])&&(~o(u,t)||c(u,t));return u}},function(n,e,t){var r=t(15);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(1),i=t(7),a=t(16),o=t(68),s=t(4),c=t(228),l=t(120),u=t(69),d=t(59),p=t(24),h=t(14),m=t(5),g=t(67),f=t(165),v=o.PROPER,b=o.CONFIGURABLE,y=f.IteratorPrototype,x=f.BUGGY_SAFARI_ITERATORS,k=m("iterator"),w=function(){return this};n.exports=function(n,e,t,o,m,f,E){c(t,e,o);var A,_,T,j=function(n){if(n===m&&z)return z;if(!x&&n in $)return $[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},S=e+" Iterator",C=!1,$=n.prototype,I=$[k]||$["@@iterator"]||m&&$[m],z=!x&&I||j(m),O="Array"==e&&$.entries||I;if(O&&(A=l(O.call(new n)))!==Object.prototype&&A.next&&(a||l(A)===y||(u?u(A,y):s(A[k])||h(A,k,w)),d(A,S,!0,!0),a&&(g[S]=w)),v&&"values"==m&&I&&"values"!==I.name&&(!a&&b?p($,"name","values"):(C=!0,z=function(){return i(I,this)})),m)if(_={values:j("values"),keys:f?z:j("keys"),entries:j("entries")},E)for(T in _)(x||C||!(T in $))&&h($,T,_[T]);else r({target:e,proto:!0,forced:x||C},_);return a&&!E||$[k]===z||h($,k,z,{name:m}),g[e]=z,_}},function(n,e,t){var r=t(2),i=t(4),a=t(9),o=t(8),s=t(68).CONFIGURABLE,c=t(88),l=t(35),u=l.enforce,d=l.get,p=Object.defineProperty,h=o&&!r((function(){return 8!==p((function(){}),"length",{value:8}).length})),m=String(String).split("String"),g=n.exports=function(n,e,t){if("Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!a(n,"name")||s&&n.name!==e)&&p(n,"name",{value:e,configurable:!0}),h&&t&&a(t,"arity")&&n.length!==t.arity&&p(n,"length",{value:t.arity}),t&&a(t,"constructor")&&t.constructor){if(o)try{p(n,"prototype",{writable:!1})}catch(n){}}else n.prototype=void 0;var r=u(n);return a(r,"source")||(r.source=m.join("string"==typeof e?e:"")),n};Function.prototype.toString=g((function(){return i(this)&&d(this).source||c(this)}),"toString")},function(n,e,t){var r=t(15),i=t(3),a=t(58),o=t(89),s=t(10),c=i([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=a.f(s(n)),t=o.f;return t?c(e,t(n)):e}},function(n,e,t){"use strict";var r,i,a,o=t(2),s=t(4),c=t(33),l=t(120),u=t(14),d=t(5),p=t(16),h=d("iterator"),m=!1;[].keys&&("next"in(a=[].keys())?(i=l(l(a)))!==Object.prototype&&(r=i):m=!0),null==r||o((function(){var n={};return r[h].call(n)!==n}))?r={}:p&&(r=c(r)),s(r[h])||u(r,h,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},function(n,e,t){var r=t(2);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(0),i=t(91),a=t(65),o=r.TypeError;n.exports=function(n){if(i(n))return n;throw o(a(n)+" is not a constructor")}},function(n,e,t){var r,i,a,o,s=t(0),c=t(39),l=t(56),u=t(4),d=t(9),p=t(2),h=t(161),m=t(70),g=t(84),f=t(146),v=t(169),b=t(90),y=s.setImmediate,x=s.clearImmediate,k=s.process,w=s.Dispatch,E=s.Function,A=s.MessageChannel,_=s.String,T=0,j={};try{r=s.location}catch(n){}var S=function(n){if(d(j,n)){var e=j[n];delete j[n],e()}},C=function(n){return function(){S(n)}},$=function(n){S(n.data)},I=function(n){s.postMessage(_(n),r.protocol+"//"+r.host)};y&&x||(y=function(n){f(arguments.length,1);var e=u(n)?n:E(n),t=m(arguments,1);return j[++T]=function(){c(e,void 0,t)},i(T),T},x=function(n){delete j[n]},b?i=function(n){k.nextTick(C(n))}:w&&w.now?i=function(n){w.now(C(n))}:A&&!v?(o=(a=new A).port2,a.port1.onmessage=$,i=l(o.postMessage,o)):s.addEventListener&&u(s.postMessage)&&!s.importScripts&&r&&"file:"!==r.protocol&&!p(I)?(i=I,s.addEventListener("message",$,!1)):i="onreadystatechange"in g("script")?function(n){h.appendChild(g("script")).onreadystatechange=function(){h.removeChild(this),S(n)}}:function(n){setTimeout(C(n),0)}),n.exports={set:y,clear:x}},function(n,e,t){var r=t(28);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},function(n,e,t){var r=t(0),i=t(56),a=t(7),o=t(10),s=t(65),c=t(171),l=t(22),u=t(34),d=t(147),p=t(107),h=t(172),m=r.TypeError,g=function(n,e){this.stopped=n,this.result=e},f=g.prototype;n.exports=function(n,e,t){var r,v,b,y,x,k,w,E=t&&t.that,A=!(!t||!t.AS_ENTRIES),_=!(!t||!t.IS_ITERATOR),T=!(!t||!t.INTERRUPTED),j=i(e,E),S=function(n){return r&&h(r,"normal",n),new g(!0,n)},C=function(n){return A?(o(n),T?j(n[0],n[1],S):j(n[0],n[1])):T?j(n,S):j(n)};if(_)r=n;else{if(!(v=p(n)))throw m(s(n)+" is not iterable");if(c(v)){for(b=0,y=l(n);y>b;b++)if((x=C(n[b]))&&u(f,x))return x;return new g(!1)}r=d(n,v)}for(k=r.next;!(w=a(k,r)).done;){try{x=C(w.value)}catch(n){h(r,"throw",n)}if("object"==typeof x&&x&&u(f,x))return x}return new g(!1)}},function(n,e,t){var r=t(5),i=t(67),a=r("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(i.Array===n||o[a]===n)}},function(n,e,t){var r=t(7),i=t(10),a=t(46);n.exports=function(n,e,t){var o,s;i(n);try{if(!(o=a(n,"return"))){if("throw"===e)throw t;return t}o=r(o,n)}catch(n){s=!0,o=n}if("throw"===e)throw t;if(s)throw o;return i(o),t}},function(n,e,t){var r=t(53),i=t(174),a=t(71).CONSTRUCTOR;n.exports=a||!i((function(n){r.all(n).then(void 0,(function(){}))}))},function(n,e,t){var r=t(5)("iterator"),i=!1;try{var a=0,o={next:function(){return{done:!!a++}},return:function(){i=!0}};o[r]=function(){return this},Array.from(o,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!i)return!1;var t=!1;try{var a={};a[r]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var r=t(10),i=t(11),a=t(72);n.exports=function(n,e){if(r(n),i(e)&&e.constructor===n)return e;var t=a.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){var r=t(3),i=t(55),a=t(12),o=t(19),s=r("".charAt),c=r("".charCodeAt),l=r("".slice),u=function(n){return function(e,t){var r,u,d=a(o(e)),p=i(t),h=d.length;return p<0||p>=h?n?"":void 0:(r=c(d,p))<55296||r>56319||p+1===h||(u=c(d,p+1))<56320||u>57343?n?s(d,p):r:n?l(d,p,p+2):u-56320+(r-55296<<10)+65536}};n.exports={codeAt:u(!1),charAt:u(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var r=t(84)("span").classList,i=r&&r.constructor&&r.constructor.prototype;n.exports=i===Object.prototype?void 0:i},function(n,e,t){var r=t(1),i=t(2),a=t(17),o=t(120),s=t(166);r({target:"Object",stat:!0,forced:i((function(){o(1)})),sham:!s},{getPrototypeOf:function(n){return o(a(n))}})},function(n,e,t){var r=t(0),i=t(149),a=r.TypeError;n.exports=function(n){if(i(n))throw a("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(5)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){"use strict";var r=t(57).forEach,i=t(45)("forEach");n.exports=i?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(2);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(23),i=t(20),a=t(58).f,o=t(124),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==r(n)?function(n){try{return a(n)}catch(n){return o(s)}}(n):a(i(n))}},function(n,e,t){var r=t(5);e.f=r},function(n,e,t){var r=t(272),i=t(9),a=t(185),o=t(13).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});i(e,n)||o(e,n,{value:a.f(n)})}},function(n,e,t){var r=t(50);n.exports=r&&!!Symbol.for&&!!Symbol.keyFor},function(n,e,t){var r=t(1),i=t(277);r({target:"Array",stat:!0,forced:!t(174)((function(n){Array.from(n)}))},{from:i})},function(n,e,t){"use strict";var r=t(10);n.exports=function(){var n=r(this),e="";return n.hasIndices&&(e+="d"),n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var r=t(12);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){t(1)({target:"Object",stat:!0,sham:!t(8)},{create:t(33)})},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,i=n.length;++t<r;)n[i+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(96),i=t(298),a=t(299),o=t(300),s=t(301),c=t(302);function l(n){var e=this.__data__=new r(n);this.size=e.size}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=s,l.prototype.set=c,n.exports=l},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(61),i=t(130);n.exports=function(n){if(!i(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(319),i=t(48);n.exports=function n(e,t,a,o,s){return e===t||(null==e||null==t||!i(e)&&!i(t)?e!=e&&t!=t:r(e,t,a,o,n,s))}},function(n,e,t){var r=t(200),i=t(322),a=t(201);n.exports=function(n,e,t,o,s,c){var l=1&t,u=n.length,d=e.length;if(u!=d&&!(l&&d>u))return!1;var p=c.get(n),h=c.get(e);if(p&&h)return p==e&&h==n;var m=-1,g=!0,f=2&t?new r:void 0;for(c.set(n,e),c.set(e,n);++m<u;){var v=n[m],b=e[m];if(o)var y=l?o(b,v,m,e,n,c):o(v,b,m,n,e,c);if(void 0!==y){if(y)continue;g=!1;break}if(f){if(!i(e,(function(n,e){if(!a(f,e)&&(v===n||s(v,n,t,o,c)))return f.push(e)}))){g=!1;break}}else if(v!==b&&!s(v,b,t,o,c)){g=!1;break}}return c.delete(n),c.delete(e),g}},function(n,e,t){var r=t(131),i=t(320),a=t(321);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=i,o.prototype.has=a,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(332),i=t(338),a=t(206);n.exports=function(n){return a(n)?r(n):i(n)}},function(n,e,t){(function(n){var r=t(29),i=t(334),a=e&&!e.nodeType&&e,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===a?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||i;n.exports=c}).call(this,t(151)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(335),i=t(336),a=t(337),o=a&&a.isTypedArray,s=o?i(o):r;n.exports=s},function(n,e,t){var r=t(196),i=t(133);n.exports=function(n){return null!=n&&i(n.length)&&!r(n)}},function(n,e,t){var r=t(41)(t(29),"Set");n.exports=r},function(n,e,t){var r=t(130);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(211),i=t(100);n.exports=function(n,e){for(var t=0,a=(e=r(e,n)).length;null!=n&&t<a;)n=n[i(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var r=t(27),i=t(134),a=t(349),o=t(352);n.exports=function(n,e){return r(n)?n:i(n,e)?[n]:a(o(n))}},function(n,e,t){var r=t(0),i=t(39),a=t(4),o=t(28),s=t(70),c=t(146),l=/MSIE .\./.test(o),u=r.Function,d=function(n){return l?function(e,t){var r=c(arguments.length,1)>2,o=a(e)?e:u(e),l=r?s(arguments,2):void 0;return n(r?function(){i(o,this,l)}:o,t)}:n};n.exports={setTimeout:d(r.setTimeout),setInterval:d(r.setInterval)}},function(n,e,t){"use strict";var r=t(0),i=t(3),a=t(21),o=t(11),s=t(9),c=t(70),l=t(63),u=r.Function,d=i([].concat),p=i([].join),h={},m=function(n,e,t){if(!s(h,e)){for(var r=[],i=0;i<e;i++)r[i]="a["+i+"]";h[e]=u("C,a","return new C("+p(r,",")+")")}return h[e](n,t)};n.exports=l?u.bind:function(n){var e=a(this),t=e.prototype,r=c(arguments,1),i=function(){var t=d(r,c(arguments));return this instanceof i?m(e,t.length,t):e.apply(n,t)};return o(t)&&(i.prototype=t),i}},function(n,e,t){"use strict";var r=t(1),i=t(386).start;r({target:"String",proto:!0,forced:t(388)},{padStart:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){},function(n,e,t){},function(n,e,t){t(1)({target:"Object",stat:!0},{setPrototypeOf:t(69)})},function(n,e,t){var r=t(1),i=t(15),a=t(39),o=t(213),s=t(167),c=t(10),l=t(11),u=t(33),d=t(2),p=i("Reflect","construct"),h=Object.prototype,m=[].push,g=d((function(){function n(){}return!(p((function(){}),[],n)instanceof n)})),f=!d((function(){p((function(){}))})),v=g||f;r({target:"Reflect",stat:!0,forced:v,sham:v},{construct:function(n,e){s(n),c(e);var t=arguments.length<3?n:s(arguments[2]);if(f&&!g)return p(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return a(m,r,e),new(a(o,n,r))}var i=t.prototype,d=u(l(i)?i:h),v=a(n,d,e);return l(v)?v:d}})},function(n,e,t){var r=t(1),i=t(0),a=t(59);r({global:!0},{Reflect:{}}),a(i.Reflect,"Reflect",!0)},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(285),i=t(290),a=t(361),o=t(369),s=t(378),c=t(236),l=a((function(n){var e=c(n);return s(e)&&(e=void 0),o(r(n,1,s,!0),i(e,2))}));n.exports=l},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,i=r.exec(t);if(!i)return t;var a="",o=0,s=0;for(o=i.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==o&&(a+=t.substring(s,o)),s=o+1,a+=e}return s!==o?a+t.substring(s,o):a}},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},i=(t(389),t(30)),a=Object(i.a)(r,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=a.exports},function(n,e,t){"use strict";t.r(e);t(36),t(6),t(37),t(43),t(31);var r={name:"CodeGroup",data:function(){return{codeTabs:[],activeCodeTabIndex:-1}},watch:{activeCodeTabIndex:function(n){this.codeTabs.forEach((function(n){n.elm.classList.remove("theme-code-block__active")})),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted:function(){var n=this;this.codeTabs=(this.$slots.default||[]).filter((function(n){return Boolean(n.componentOptions)})).map((function(e,t){return""===e.componentOptions.propsData.active&&(n.activeCodeTabIndex=t),{title:e.componentOptions.propsData.title,elm:e.elm}})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab:function(n){this.activeCodeTabIndex=n}}},i=(t(390),t(30)),a=Object(i.a)(r,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"theme-code-group"},[t("div",{staticClass:"theme-code-group__nav"},[t("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(e,r){return t("li",{key:e.title,staticClass:"theme-code-group__li"},[t("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(e.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?t("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=a.exports},function(n,e,t){"use strict";var r=t(8),i=t(0),a=t(3),o=t(106),s=t(14),c=t(9),l=t(150),u=t(34),d=t(64),p=t(159),h=t(2),m=t(58).f,g=t(38).f,f=t(13).f,v=t(385),b=t(153).trim,y=i.Number,x=y.prototype,k=i.TypeError,w=a("".slice),E=a("".charCodeAt),A=function(n){var e=p(n,"number");return"bigint"==typeof e?e:_(e)},_=function(n){var e,t,r,i,a,o,s,c,l=p(n,"number");if(d(l))throw k("Cannot convert a Symbol value to a number");if("string"==typeof l&&l.length>2)if(l=b(l),43===(e=E(l,0))||45===e){if(88===(t=E(l,2))||120===t)return NaN}else if(48===e){switch(E(l,1)){case 66:case 98:r=2,i=49;break;case 79:case 111:r=8,i=55;break;default:return+l}for(o=(a=w(l,2)).length,s=0;s<o;s++)if((c=E(a,s))<48||c>i)return NaN;return parseInt(a,r)}return+l};if(o("Number",!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var T,j=function(n){var e=arguments.length<1?0:y(A(n)),t=this;return u(x,t)&&h((function(){v(t)}))?l(Object(e),t,j):e},S=r?m(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),C=0;S.length>C;C++)c(y,T=S[C])&&!c(j,T)&&f(j,T,g(y,T));j.prototype=x,x.constructor=j,s(i,"Number",j,{constructor:!0})}},function(n,e,t){var r=t(2),i=t(0).RegExp;n.exports=r((function(){var n=i(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){"use strict";var r=t(165).IteratorPrototype,i=t(33),a=t(47),o=t(59),s=t(67),c=function(){return this};n.exports=function(n,e,t,l){var u=e+" Iterator";return n.prototype=i(r,{next:a(+!l,t)}),o(n,u,!1,!0),s[u]=c,n}},function(n,e,t){"use strict";var r=t(15),i=t(13),a=t(5),o=t(8),s=a("species");n.exports=function(n){var e=r(n),t=i.f;o&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(0),i=t(34),a=r.TypeError;n.exports=function(n,e){if(i(e,n))return n;throw a("Incorrect invocation")}},function(n,e,t){var r=t(1),i=t(8),a=t(164),o=t(20),s=t(38),c=t(73);r({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function(n){for(var e,t,r=o(n),i=s.f,l=a(r),u={},d=0;l.length>d;)void 0!==(t=i(r,e=l[d++]))&&c(u,e,t);return u}})},function(n,e,t){var r=t(2),i=t(0).RegExp;n.exports=r((function(){var n=i("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){var r=t(13).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var r=t(1),i=t(115).includes,a=t(2),o=t(140);r({target:"Array",proto:!0,forced:a((function(){return!Array(1).includes()}))},{includes:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(n,e,t){"use strict";var r=t(1),i=t(3),a=t(180),o=t(19),s=t(12),c=t(181),l=i("".indexOf);r({target:"String",proto:!0,forced:!c("includes")},{includes:function(n){return!!~l(s(o(this)),s(a(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var r=t(1),i=t(153).trim;r({target:"String",proto:!0,forced:t(383)("trim")},{trim:function(){return i(this)}})},function(n,e,t){var r=t(7),i=t(9),a=t(34),o=t(189),s=RegExp.prototype;n.exports=function(n){var e=n.flags;return void 0!==e||"flags"in s||i(n,"flags")||!a(s,n)?e:r(o,n)}},function(n,e,t){var r=t(124),i=Math.floor,a=function(n,e){var t=n.length,c=i(t/2);return t<8?o(n,e):s(n,a(r(n,0,c),e),a(r(n,c),e),e)},o=function(n,e){for(var t,r,i=n.length,a=1;a<i;){for(r=a,t=n[a];r&&e(n[r-1],t)>0;)n[r]=n[--r];r!==a++&&(n[r]=t)}return n},s=function(n,e,t,r){for(var i=e.length,a=t.length,o=0,s=0;o<i||s<a;)n[o+s]=o<i&&s<a?r(e[o],t[s])<=0?e[o++]:t[s++]:o<i?e[o++]:t[s++];return n};n.exports=a},function(n,e,t){var r=t(0),i=t(8),a=t(109).MISSED_STICKY,o=t(23),s=t(241),c=t(35).get,l=RegExp.prototype,u=r.TypeError;i&&a&&s(l,"sticky",{configurable:!0,get:function(){if(this!==l){if("RegExp"===o(this))return!!c(this).sticky;throw u("Incompatible receiver, RegExp required")}}})},function(n,e,t){var r=t(163),i=t(13);n.exports=function(n,e,t){return t.get&&r(t.get,e,{getter:!0}),t.set&&r(t.set,e,{setter:!0}),i.f(n,e,t)}},function(n,e,t){n.exports=t(399)},function(n,e,t){var r=t(0),i=t(7),a=t(4),o=t(11),s=r.TypeError;n.exports=function(n,e){var t,r;if("string"===e&&a(t=n.toString)&&!o(r=i(t,n)))return r;if(a(t=n.valueOf)&&!o(r=i(t,n)))return r;if("string"!==e&&a(t=n.toString)&&!o(r=i(t,n)))return r;throw s("Can't convert object to primitive value")}},function(n,e,t){var r=t(0),i=t(4),a=t(88),o=r.WeakMap;n.exports=i(o)&&/native code/.test(a(o))},function(n,e,t){var r=t(0),i=t(4),a=r.String,o=r.TypeError;n.exports=function(n){if("object"==typeof n||i(n))return n;throw o("Can't set "+a(n)+" as a prototype")}},function(n,e,t){t(247),t(254),t(255),t(256),t(257),t(258)},function(n,e,t){"use strict";var r,i,a,o=t(1),s=t(16),c=t(90),l=t(0),u=t(7),d=t(14),p=t(69),h=t(59),m=t(229),g=t(21),f=t(4),v=t(11),b=t(230),y=t(121),x=t(168).set,k=t(248),w=t(251),E=t(123),A=t(252),_=t(35),T=t(53),j=t(71),S=t(72),C=j.CONSTRUCTOR,$=j.REJECTION_EVENT,I=j.SUBCLASSING,z=_.getterFor("Promise"),O=_.set,G=T&&T.prototype,D=T,B=G,P=l.TypeError,L=l.document,H=l.process,M=S.f,R=M,N=!!(L&&L.createEvent&&l.dispatchEvent),F=function(n){var e;return!(!v(n)||!f(e=n.then))&&e},U=function(n,e){var t,r,i,a=e.value,o=1==e.state,s=o?n.ok:n.fail,c=n.resolve,l=n.reject,d=n.domain;try{s?(o||(2===e.rejection&&J(e),e.rejection=1),!0===s?t=a:(d&&d.enter(),t=s(a),d&&(d.exit(),i=!0)),t===n.promise?l(P("Promise-chain cycle")):(r=F(t))?u(r,t,c,l):c(t)):l(a)}catch(n){d&&!i&&d.exit(),l(n)}},q=function(n,e){n.notified||(n.notified=!0,k((function(){for(var t,r=n.reactions;t=r.get();)U(t,n);n.notified=!1,e&&!n.rejection&&W(n)})))},V=function(n,e,t){var r,i;N?((r=L.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),l.dispatchEvent(r)):r={promise:e,reason:t},!$&&(i=l["on"+n])?i(r):"unhandledrejection"===n&&w("Unhandled promise rejection",t)},W=function(n){u(x,l,(function(){var e,t=n.facade,r=n.value;if(Y(n)&&(e=E((function(){c?H.emit("unhandledRejection",r,t):V("unhandledrejection",t,r)})),n.rejection=c||Y(n)?2:1,e.error))throw e.value}))},Y=function(n){return 1!==n.rejection&&!n.parent},J=function(n){u(x,l,(function(){var e=n.facade;c?H.emit("rejectionHandled",e):V("rejectionhandled",e,n.value)}))},Z=function(n,e,t){return function(r){n(e,r,t)}},K=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,q(n,!0))},X=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw P("Promise can't be resolved itself");var r=F(e);r?k((function(){var t={done:!1};try{u(r,e,Z(X,t,n),Z(K,t,n))}catch(e){K(t,e,n)}})):(n.value=e,n.state=1,q(n,!1))}catch(e){K({done:!1},e,n)}}};if(C&&(B=(D=function(n){b(this,B),g(n),u(r,this);var e=z(this);try{n(Z(X,e),Z(K,e))}catch(n){K(e,n)}}).prototype,(r=function(n){O(this,{type:"Promise",done:!1,notified:!1,parent:!1,reactions:new A,rejection:!1,state:0,value:void 0})}).prototype=d(B,"then",(function(n,e){var t=z(this),r=M(y(this,D));return t.parent=!0,r.ok=!f(n)||n,r.fail=f(e)&&e,r.domain=c?H.domain:void 0,0==t.state?t.reactions.add(r):k((function(){U(r,t)})),r.promise})),i=function(){var n=new r,e=z(n);this.promise=n,this.resolve=Z(X,e),this.reject=Z(K,e)},S.f=M=function(n){return n===D||void 0===n?new i(n):R(n)},!s&&f(T)&&G!==Object.prototype)){a=G.then,I||d(G,"then",(function(n,e){var t=this;return new D((function(n,e){u(a,t,n,e)})).then(n,e)}),{unsafe:!0});try{delete G.constructor}catch(n){}p&&p(G,B)}o({global:!0,constructor:!0,wrap:!0,forced:C},{Promise:D}),h(D,"Promise",!1,!0),m("Promise")},function(n,e,t){var r,i,a,o,s,c,l,u,d=t(0),p=t(56),h=t(38).f,m=t(168).set,g=t(169),f=t(249),v=t(250),b=t(90),y=d.MutationObserver||d.WebKitMutationObserver,x=d.document,k=d.process,w=d.Promise,E=h(d,"queueMicrotask"),A=E&&E.value;A||(r=function(){var n,e;for(b&&(n=k.domain)&&n.exit();i;){e=i.fn,i=i.next;try{e()}catch(n){throw i?o():a=void 0,n}}a=void 0,n&&n.enter()},g||b||v||!y||!x?!f&&w&&w.resolve?((l=w.resolve(void 0)).constructor=w,u=p(l.then,l),o=function(){u(r)}):b?o=function(){k.nextTick(r)}:(m=p(m,d),o=function(){m(r)}):(s=!0,c=x.createTextNode(""),new y(r).observe(c,{characterData:!0}),o=function(){c.data=s=!s})),n.exports=A||function(n){var e={fn:n,next:void 0};a&&(a.next=e),i||(i=e,o()),a=e}},function(n,e,t){var r=t(28),i=t(0);n.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==i.Pebble},function(n,e,t){var r=t(28);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,e,t){var r=t(0);n.exports=function(n,e){var t=r.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(n){var e={item:n,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=t},function(n,e){n.exports="object"==typeof window&&"object"!=typeof Deno},function(n,e,t){"use strict";var r=t(1),i=t(7),a=t(21),o=t(72),s=t(123),c=t(170);r({target:"Promise",stat:!0,forced:t(173)},{all:function(n){var e=this,t=o.f(e),r=t.resolve,l=t.reject,u=s((function(){var t=a(e.resolve),o=[],s=0,u=1;c(n,(function(n){var a=s++,c=!1;u++,i(t,e,n).then((function(n){c||(c=!0,o[a]=n,--u||r(o))}),l)})),--u||r(o)}));return u.error&&l(u.value),t.promise}})},function(n,e,t){"use strict";var r=t(1),i=t(16),a=t(71).CONSTRUCTOR,o=t(53),s=t(15),c=t(4),l=t(14),u=o&&o.prototype;if(r({target:"Promise",proto:!0,forced:a,real:!0},{catch:function(n){return this.then(void 0,n)}}),!i&&c(o)){var d=s("Promise").prototype.catch;u.catch!==d&&l(u,"catch",d,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(1),i=t(7),a=t(21),o=t(72),s=t(123),c=t(170);r({target:"Promise",stat:!0,forced:t(173)},{race:function(n){var e=this,t=o.f(e),r=t.reject,l=s((function(){var o=a(e.resolve);c(n,(function(n){i(o,e,n).then(t.resolve,r)}))}));return l.error&&r(l.value),t.promise}})},function(n,e,t){"use strict";var r=t(1),i=t(7),a=t(72);r({target:"Promise",stat:!0,forced:t(71).CONSTRUCTOR},{reject:function(n){var e=a.f(this);return i(e.reject,void 0,n),e.promise}})},function(n,e,t){"use strict";var r=t(1),i=t(15),a=t(16),o=t(53),s=t(71).CONSTRUCTOR,c=t(175),l=i("Promise"),u=a&&!s;r({target:"Promise",stat:!0,forced:a||s},{resolve:function(n){return c(u&&this===l?o:this,n)}})},function(n,e,t){var r=t(1),i=t(260);r({target:"Object",stat:!0,arity:2,forced:Object.assign!==i},{assign:i})},function(n,e,t){"use strict";var r=t(8),i=t(3),a=t(7),o=t(2),s=t(86),c=t(89),l=t(118),u=t(17),d=t(62),p=Object.assign,h=Object.defineProperty,m=i([].concat);n.exports=!p||o((function(){if(r&&1!==p({b:1},p(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=p({},n)[t]||"abcdefghijklmnopqrst"!=s(p({},e)).join("")}))?function(n,e){for(var t=u(n),i=arguments.length,o=1,p=c.f,h=l.f;i>o;)for(var g,f=d(arguments[o++]),v=p?m(s(f),p(f)):s(f),b=v.length,y=0;b>y;)g=v[y++],r&&!a(h,f,g)||(t[g]=f[g]);return t}:p},function(n,e,t){"use strict";var r=t(1),i=t(16),a=t(53),o=t(2),s=t(15),c=t(4),l=t(121),u=t(175),d=t(14),p=a&&a.prototype;if(r({target:"Promise",proto:!0,real:!0,forced:!!a&&o((function(){p.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t=c(n);return this.then(t?function(t){return u(e,n()).then((function(){return t}))}:n,t?function(t){return u(e,n()).then((function(){throw t}))}:n)}}),!i&&c(a)){var h=s("Promise").prototype.finally;p.finally!==h&&d(p,"finally",h,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(122),i=t(80);n.exports=r?{}.toString:function(){return"[object "+i(this)+"]"}},function(n,e,t){var r=t(0),i=t(60),a=t(91),o=t(11),s=t(5)("species"),c=r.Array;n.exports=function(n){var e;return i(n)&&(e=n.constructor,(a(e)&&(e===c||i(e.prototype))||o(e)&&null===(e=e[s]))&&(e=void 0)),void 0===e?c:e}},function(n,e,t){"use strict";var r=t(1),i=t(265).left,a=t(45),o=t(51),s=t(90);r({target:"Array",proto:!0,forced:!a("reduce")||!s&&o>79&&o<83},{reduce:function(n){var e=arguments.length;return i(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(0),i=t(21),a=t(17),o=t(62),s=t(22),c=r.TypeError,l=function(n){return function(e,t,r,l){i(t);var u=a(e),d=o(u),p=s(u),h=n?p-1:0,m=n?-1:1;if(r<2)for(;;){if(h in d){l=d[h],h+=m;break}if(h+=m,n?h<0:p<=h)throw c("Reduce of empty array with no initial value")}for(;n?h>=0:p>h;h+=m)h in d&&(l=t(l,d[h],h,u));return l}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var r,i=t(1),a=t(3),o=t(38).f,s=t(52),c=t(12),l=t(180),u=t(19),d=t(181),p=t(16),h=a("".startsWith),m=a("".slice),g=Math.min,f=d("startsWith");i({target:"String",proto:!0,forced:!!(p||f||(r=o(String.prototype,"startsWith"),!r||r.writable))&&!f},{startsWith:function(n){var e=c(u(this));l(n);var t=s(g(arguments.length>1?arguments[1]:void 0,e.length)),r=c(n);return h?h(e,r,t):m(e,t,t+r.length)===r}})},function(n,e,t){var r=t(1),i=t(183),a=t(2),o=t(11),s=t(268).onFreeze,c=Object.freeze;r({target:"Object",stat:!0,forced:a((function(){c(1)})),sham:!i},{freeze:function(n){return c&&o(n)?c(s(n)):n}})},function(n,e,t){var r=t(1),i=t(3),a=t(66),o=t(11),s=t(9),c=t(13).f,l=t(58),u=t(184),d=t(269),p=t(83),h=t(183),m=!1,g=p("meta"),f=0,v=function(n){c(n,g,{value:{objectID:"O"+f++,weakData:{}}})},b=n.exports={enable:function(){b.enable=function(){},m=!0;var n=l.f,e=i([].splice),t={};t[g]=1,n(t).length&&(l.f=function(t){for(var r=n(t),i=0,a=r.length;i<a;i++)if(r[i]===g){e(r,i,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,g)){if(!d(n))return"F";if(!e)return"E";v(n)}return n[g].objectID},getWeakData:function(n,e){if(!s(n,g)){if(!d(n))return!0;if(!e)return!1;v(n)}return n[g].weakData},onFreeze:function(n){return h&&m&&d(n)&&!s(n,g)&&v(n),n}};a[g]=!0},function(n,e,t){var r=t(2),i=t(11),a=t(23),o=t(270),s=Object.isExtensible,c=r((function(){s(1)}));n.exports=c||o?function(n){return!!i(n)&&((!o||"ArrayBuffer"!=a(n))&&(!s||s(n)))}:s},function(n,e,t){var r=t(2);n.exports=r((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){"use strict";var r=t(1),i=t(0),a=t(7),o=t(3),s=t(16),c=t(8),l=t(50),u=t(2),d=t(9),p=t(34),h=t(10),m=t(20),g=t(85),f=t(12),v=t(47),b=t(33),y=t(86),x=t(58),k=t(184),w=t(89),E=t(38),A=t(13),_=t(145),T=t(118),j=t(14),S=t(49),C=t(87),$=t(66),I=t(83),z=t(5),O=t(185),G=t(186),D=t(273),B=t(59),P=t(35),L=t(57).forEach,H=C("hidden"),M=P.set,R=P.getterFor("Symbol"),N=Object.prototype,F=i.Symbol,U=F&&F.prototype,q=i.TypeError,V=i.QObject,W=E.f,Y=A.f,J=k.f,Z=T.f,K=o([].push),X=S("symbols"),Q=S("op-symbols"),nn=S("wks"),en=!V||!V.prototype||!V.prototype.findChild,tn=c&&u((function(){return 7!=b(Y({},"a",{get:function(){return Y(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=W(N,e);r&&delete N[e],Y(n,e,t),r&&n!==N&&Y(N,e,r)}:Y,rn=function(n,e){var t=X[n]=b(U);return M(t,{type:"Symbol",tag:n,description:e}),c||(t.description=e),t},an=function(n,e,t){n===N&&an(Q,e,t),h(n);var r=g(e);return h(t),d(X,r)?(t.enumerable?(d(n,H)&&n[H][r]&&(n[H][r]=!1),t=b(t,{enumerable:v(0,!1)})):(d(n,H)||Y(n,H,v(1,{})),n[H][r]=!0),tn(n,r,t)):Y(n,r,t)},on=function(n,e){h(n);var t=m(e),r=y(t).concat(un(t));return L(r,(function(e){c&&!a(sn,t,e)||an(n,e,t[e])})),n},sn=function(n){var e=g(n),t=a(Z,this,e);return!(this===N&&d(X,e)&&!d(Q,e))&&(!(t||!d(this,e)||!d(X,e)||d(this,H)&&this[H][e])||t)},cn=function(n,e){var t=m(n),r=g(e);if(t!==N||!d(X,r)||d(Q,r)){var i=W(t,r);return!i||!d(X,r)||d(t,H)&&t[H][r]||(i.enumerable=!0),i}},ln=function(n){var e=J(m(n)),t=[];return L(e,(function(n){d(X,n)||d($,n)||K(t,n)})),t},un=function(n){var e=n===N,t=J(e?Q:m(n)),r=[];return L(t,(function(n){!d(X,n)||e&&!d(N,n)||K(r,X[n])})),r};l||(j(U=(F=function(){if(p(U,this))throw q("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?f(arguments[0]):void 0,e=I(n),t=function(n){this===N&&a(t,Q,n),d(this,H)&&d(this[H],e)&&(this[H][e]=!1),tn(this,e,v(1,n))};return c&&en&&tn(N,e,{configurable:!0,set:t}),rn(e,n)}).prototype,"toString",(function(){return R(this).tag})),j(F,"withoutSetter",(function(n){return rn(I(n),n)})),T.f=sn,A.f=an,_.f=on,E.f=cn,x.f=k.f=ln,w.f=un,O.f=function(n){return rn(z(n),n)},c&&(Y(U,"description",{configurable:!0,get:function(){return R(this).description}}),s||j(N,"propertyIsEnumerable",sn,{unsafe:!0}))),r({global:!0,constructor:!0,wrap:!0,forced:!l,sham:!l},{Symbol:F}),L(y(nn),(function(n){G(n)})),r({target:"Symbol",stat:!0,forced:!l},{useSetter:function(){en=!0},useSimple:function(){en=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!c},{create:function(n,e){return void 0===e?b(n):on(b(n),e)},defineProperty:an,defineProperties:on,getOwnPropertyDescriptor:cn}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ln}),D(),B(F,"Symbol"),$[H]=!0},function(n,e,t){var r=t(0);n.exports=r},function(n,e,t){var r=t(7),i=t(15),a=t(5),o=t(14);n.exports=function(){var n=i("Symbol"),e=n&&n.prototype,t=e&&e.valueOf,s=a("toPrimitive");e&&!e[s]&&o(e,s,(function(n){return r(t,this)}),{arity:1})}},function(n,e,t){var r=t(1),i=t(15),a=t(9),o=t(12),s=t(49),c=t(187),l=s("string-to-symbol-registry"),u=s("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!c},{for:function(n){var e=o(n);if(a(l,e))return l[e];var t=i("Symbol")(e);return l[e]=t,u[t]=e,t}})},function(n,e,t){var r=t(1),i=t(9),a=t(64),o=t(65),s=t(49),c=t(187),l=s("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!c},{keyFor:function(n){if(!a(n))throw TypeError(o(n)+" is not a symbol");if(i(l,n))return l[n]}})},function(n,e,t){var r=t(1),i=t(50),a=t(2),o=t(89),s=t(17);r({target:"Object",stat:!0,forced:!i||a((function(){o.f(1)}))},{getOwnPropertySymbols:function(n){var e=o.f;return e?e(s(n)):[]}})},function(n,e,t){"use strict";var r=t(0),i=t(56),a=t(7),o=t(17),s=t(278),c=t(171),l=t(91),u=t(22),d=t(73),p=t(147),h=t(107),m=r.Array;n.exports=function(n){var e=o(n),t=l(this),r=arguments.length,g=r>1?arguments[1]:void 0,f=void 0!==g;f&&(g=i(g,r>2?arguments[2]:void 0));var v,b,y,x,k,w,E=h(e),A=0;if(!E||this==m&&c(E))for(v=u(e),b=t?new this(v):m(v);v>A;A++)w=f?g(e[A],A):e[A],d(b,A,w);else for(k=(x=p(e,E)).next,b=t?new this:[];!(y=a(k,x)).done;A++)w=f?s(x,g,[y.value,A],!0):y.value,d(b,A,w);return b.length=A,b}},function(n,e,t){var r=t(10),i=t(172);n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(e){i(n,"throw",e)}}},function(n,e,t){"use strict";var r=t(15),i=t(9),a=t(24),o=t(34),s=t(69),c=t(119),l=t(233),u=t(150),d=t(190),p=t(280),h=t(281),m=t(282),g=t(8),f=t(16);n.exports=function(n,e,t,v){var b=v?2:1,y=n.split("."),x=y[y.length-1],k=r.apply(null,y);if(k){var w=k.prototype;if(!f&&i(w,"cause")&&delete w.cause,!t)return k;var E=r("Error"),A=e((function(n,e){var t=d(v?e:n,void 0),r=v?new k(n):new k;return void 0!==t&&a(r,"message",t),m&&a(r,"stack",h(r.stack,2)),this&&o(w,this)&&u(r,this,A),arguments.length>b&&p(r,arguments[b]),r}));if(A.prototype=w,"Error"!==x?s?s(A,E):c(A,E,{name:!0}):g&&"stackTraceLimit"in k&&(l(A,k,"stackTraceLimit"),l(A,k,"prepareStackTrace")),c(A,k),!f)try{w.name!==x&&a(w,"name",x),w.constructor=A}catch(n){}return A}}},function(n,e,t){var r=t(11),i=t(24);n.exports=function(n,e){r(e)&&"cause"in e&&i(n,"cause",e.cause)}},function(n,e,t){var r=t(3),i=Error,a=r("".replace),o=String(i("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,c=s.test(o);n.exports=function(n,e){if(c&&"string"==typeof n&&!i.prepareStackTrace)for(;e--;)n=a(n,s,"");return n}},function(n,e,t){var r=t(2),i=t(47);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",i(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(8),i=t(2),a=t(10),o=t(33),s=t(190),c=Error.prototype.toString,l=i((function(){if(r){var n=o(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==c.call(n))return!0}return"2: 1"!==c.call({message:1,name:2})||"Error"!==c.call({})}));n.exports=l?function(){var n=a(this),e=s(n.name,"Error"),t=s(n.message);return e?t?e+": "+t:e:t}:c},function(n,e,t){var r=t(3),i=t(17),a=Math.floor,o=r("".charAt),s=r("".replace),c=r("".slice),l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,r,d,p){var h=t+n.length,m=r.length,g=u;return void 0!==d&&(d=i(d),g=l),s(p,g,(function(i,s){var l;switch(o(s,0)){case"$":return"$";case"&":return n;case"`":return c(e,0,t);case"'":return c(e,h);case"<":l=d[c(s,1,-1)];break;default:var u=+s;if(0===u)return i;if(u>m){var p=a(u/10);return 0===p?i:p<=m?void 0===r[p-1]?o(s,1):r[p-1]+o(s,1):i}l=r[u-1]}return void 0===l?"":l}))}},function(n,e,t){var r=t(192),i=t(286);n.exports=function n(e,t,a,o,s){var c=-1,l=e.length;for(a||(a=i),s||(s=[]);++c<l;){var u=e[c];t>0&&a(u)?t>1?n(u,t-1,a,o,s):r(s,u):o||(s[s.length]=u)}return s}},function(n,e,t){var r=t(74),i=t(128),a=t(27),o=r?r.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||i(n)||!!(o&&n&&n[o])}},function(n,e,t){var r=t(61),i=t(48);n.exports=function(n){return i(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(74),i=Object.prototype,a=i.hasOwnProperty,o=i.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var i=o.call(n);return r&&(e?n[s]=t:delete n[s]),i}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(291),i=t(347),a=t(136),o=t(27),s=t(358);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?o(n)?i(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(292),i=t(346),a=t(209);n.exports=function(n){var e=i(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(194),i=t(198);n.exports=function(n,e,t,a){var o=t.length,s=o,c=!a;if(null==n)return!s;for(n=Object(n);o--;){var l=t[o];if(c&&l[2]?l[1]!==n[l[0]]:!(l[0]in n))return!1}for(;++o<s;){var u=(l=t[o])[0],d=n[u],p=l[1];if(c&&l[2]){if(void 0===d&&!(u in n))return!1}else{var h=new r;if(a)var m=a(d,p,u,n,e,h);if(!(void 0===m?i(p,d,3,a,h):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(97),i=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():i.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(97);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(97);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(97);n.exports=function(n,e){var t=this.__data__,i=r(t,n);return i<0?(++this.size,t.push([n,e])):t[i][1]=e,this}},function(n,e,t){var r=t(96);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(96),i=t(129),a=t(131);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!i||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(196),i=t(304),a=t(130),o=t(197),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,d=l.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||i(n))&&(r(n)?p:s).test(o(n))}},function(n,e,t){var r,i=t(305),a=(r=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var r=t(29)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(308),i=t(96),a=t(129);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||i),string:new r}}},function(n,e,t){var r=t(309),i=t(310),a=t(311),o=t(312),s=t(313);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,n.exports=c},function(n,e,t){var r=t(98);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(98),i=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(98),i=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:i.call(e,n)}},function(n,e,t){var r=t(98);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(99);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(99);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(99);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(99);n.exports=function(n,e){var t=r(this,n),i=t.size;return t.set(n,e),this.size+=t.size==i?0:1,this}},function(n,e,t){var r=t(194),i=t(199),a=t(323),o=t(326),s=t(342),c=t(27),l=t(203),u=t(205),d="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,m,g){var f=c(n),v=c(e),b=f?"[object Array]":s(n),y=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?d:b)==d,k=(y="[object Arguments]"==y?d:y)==d,w=b==y;if(w&&l(n)){if(!l(e))return!1;f=!0,x=!1}if(w&&!x)return g||(g=new r),f||u(n)?i(n,e,t,h,m,g):a(n,e,b,t,h,m,g);if(!(1&t)){var E=x&&p.call(n,"__wrapped__"),A=k&&p.call(e,"__wrapped__");if(E||A){var _=E?n.value():n,T=A?e.value():e;return g||(g=new r),m(_,T,t,h,g)}}return!!w&&(g||(g=new r),o(n,e,t,h,m,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(74),i=t(324),a=t(195),o=t(199),s=t(325),c=t(132),l=r?r.prototype:void 0,u=l?l.valueOf:void 0;n.exports=function(n,e,t,r,l,d,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new i(n),new i(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var m=1&r;if(h||(h=c),n.size!=e.size&&!m)return!1;var g=p.get(n);if(g)return g==e;r|=2,p.set(n,e);var f=o(h(n),h(e),r,l,d,p);return p.delete(n),f;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(29).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(327),i=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,o,s){var c=1&t,l=r(n),u=l.length;if(u!=r(e).length&&!c)return!1;for(var d=u;d--;){var p=l[d];if(!(c?p in e:i.call(e,p)))return!1}var h=s.get(n),m=s.get(e);if(h&&m)return h==e&&m==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=c;++d<u;){var v=n[p=l[d]],b=e[p];if(a)var y=c?a(b,v,p,e,n,s):a(v,b,p,n,e,s);if(!(void 0===y?v===b||o(v,b,t,a,s):y)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var x=n.constructor,k=e.constructor;x==k||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var r=t(328),i=t(329),a=t(202);n.exports=function(n){return r(n,a,i)}},function(n,e,t){var r=t(192),i=t(27);n.exports=function(n,e,t){var a=e(n);return i(n)?a:r(a,t(n))}},function(n,e,t){var r=t(330),i=t(331),a=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),r(o(n),(function(e){return a.call(n,e)})))}:i;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,i=0,a=[];++t<r;){var o=n[t];e(o,t,n)&&(a[i++]=o)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(333),i=t(128),a=t(27),o=t(203),s=t(204),c=t(205),l=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),u=!t&&i(n),d=!t&&!u&&o(n),p=!t&&!u&&!d&&c(n),h=t||u||d||p,m=h?r(n.length,String):[],g=m.length;for(var f in n)!e&&!l.call(n,f)||h&&("length"==f||d&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||m.push(f);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(61),i=t(133),a=t(48),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&i(n.length)&&!!o[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(193),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,o=a&&a.exports===i&&r.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(151)(n))},function(n,e,t){var r=t(339),i=t(340),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return i(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(341)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(343),i=t(129),a=t(344),o=t(207),s=t(345),c=t(61),l=t(197),u=l(r),d=l(i),p=l(a),h=l(o),m=l(s),g=c;(r&&"[object DataView]"!=g(new r(new ArrayBuffer(1)))||i&&"[object Map]"!=g(new i)||a&&"[object Promise]"!=g(a.resolve())||o&&"[object Set]"!=g(new o)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=c(n),t="[object Object]"==e?n.constructor:void 0,r=t?l(t):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var r=t(41)(t(29),"DataView");n.exports=r},function(n,e,t){var r=t(41)(t(29),"Promise");n.exports=r},function(n,e,t){var r=t(41)(t(29),"WeakMap");n.exports=r},function(n,e,t){var r=t(208),i=t(202);n.exports=function(n){for(var e=i(n),t=e.length;t--;){var a=e[t],o=n[a];e[t]=[a,o,r(o)]}return e}},function(n,e,t){var r=t(198),i=t(348),a=t(355),o=t(134),s=t(208),c=t(209),l=t(100);n.exports=function(n,e){return o(n)&&s(e)?c(l(n),e):function(t){var o=i(t,n);return void 0===o&&o===e?a(t,n):r(e,o,3)}}},function(n,e,t){var r=t(210);n.exports=function(n,e,t){var i=null==n?void 0:r(n,e);return void 0===i?t:i}},function(n,e,t){var r=t(350),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,o=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(i,(function(n,t,r,i){e.push(r?i.replace(a,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var r=t(351);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(131);function i(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,i=e?e.apply(this,r):r[0],a=t.cache;if(a.has(i))return a.get(i);var o=n.apply(this,r);return t.cache=a.set(i,o)||a,o};return t.cache=new(i.Cache||r),t}i.Cache=r,n.exports=i},function(n,e,t){var r=t(353);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(74),i=t(354),a=t(27),o=t(135),s=r?r.prototype:void 0,c=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return i(e,n)+"";if(o(e))return c?c.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,i=Array(r);++t<r;)i[t]=e(n[t],t,n);return i}},function(n,e,t){var r=t(356),i=t(357);n.exports=function(n,e){return null!=n&&i(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(211),i=t(128),a=t(27),o=t(204),s=t(133),c=t(100);n.exports=function(n,e,t){for(var l=-1,u=(e=r(e,n)).length,d=!1;++l<u;){var p=c(e[l]);if(!(d=null!=n&&t(n,p)))break;n=n[p]}return d||++l!=u?d:!!(u=null==n?0:n.length)&&s(u)&&o(p,u)&&(a(n)||i(n))}},function(n,e,t){var r=t(359),i=t(360),a=t(134),o=t(100);n.exports=function(n){return a(n)?r(o(n)):i(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(210);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(136),i=t(362),a=t(364);n.exports=function(n,e){return a(i(n,e,r),n+"")}},function(n,e,t){var r=t(363),i=Math.max;n.exports=function(n,e,t){return e=i(void 0===e?n.length-1:e,0),function(){for(var a=arguments,o=-1,s=i(a.length-e,0),c=Array(s);++o<s;)c[o]=a[e+o];o=-1;for(var l=Array(e+1);++o<e;)l[o]=a[o];return l[e]=t(c),r(n,this,l)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(365),i=t(368)(r);n.exports=i},function(n,e,t){var r=t(366),i=t(367),a=t(136),o=i?function(n,e){return i(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:a;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(41),i=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=i},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var i=t(),a=16-(i-r);if(r=i,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(200),i=t(370),a=t(375),o=t(201),s=t(376),c=t(132);n.exports=function(n,e,t){var l=-1,u=i,d=n.length,p=!0,h=[],m=h;if(t)p=!1,u=a;else if(d>=200){var g=e?null:s(n);if(g)return c(g);p=!1,u=o,m=new r}else m=e?[]:h;n:for(;++l<d;){var f=n[l],v=e?e(f):f;if(f=t||0!==f?f:0,p&&v==v){for(var b=m.length;b--;)if(m[b]===v)continue n;e&&m.push(v),h.push(f)}else u(m,v,t)||(m!==h&&m.push(v),h.push(f))}return h}},function(n,e,t){var r=t(371);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(372),i=t(373),a=t(374);n.exports=function(n,e,t){return e==e?a(n,e,t):r(n,i,t)}},function(n,e){n.exports=function(n,e,t,r){for(var i=n.length,a=t+(r?1:-1);r?a--:++a<i;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,i=n.length;++r<i;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,i=null==n?0:n.length;++r<i;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(207),i=t(377),a=t(132),o=r&&1/a(new r([,-0]))[1]==1/0?function(n){return new r(n)}:i;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(206),i=t(48);n.exports=function(n){return i(n)&&r(n)}},function(n,e,t){var r=t(1),i=t(0),a=t(212).setInterval;r({global:!0,bind:!0,forced:i.setInterval!==a},{setInterval:a})},function(n,e,t){var r=t(1),i=t(0),a=t(212).setTimeout;r({global:!0,bind:!0,forced:i.setTimeout!==a},{setTimeout:a})},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(68).PROPER,i=t(2),a=t(154);n.exports=function(n){return i((function(){return!!a[n]()||"​᠎"!=="​᠎"[n]()||r&&a[n].name!==n}))}},function(n,e,t){var r=t(1),i=t(213);r({target:"Function",proto:!0,forced:Function.bind!==i},{bind:i})},function(n,e,t){var r=t(3);n.exports=r(1..valueOf)},function(n,e,t){var r=t(3),i=t(52),a=t(12),o=t(387),s=t(19),c=r(o),l=r("".slice),u=Math.ceil,d=function(n){return function(e,t,r){var o,d,p=a(s(e)),h=i(t),m=p.length,g=void 0===r?" ":a(r);return h<=m||""==g?p:((d=c(g,u((o=h-m)/g.length))).length>o&&(d=l(d,0,o)),n?p+d:d+p)}};n.exports={start:d(!1),end:d(!0)}},function(n,e,t){"use strict";var r=t(0),i=t(55),a=t(12),o=t(19),s=r.RangeError;n.exports=function(n){var e=a(o(this)),t="",r=i(n);if(r<0||r==1/0)throw s("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(e+=e))1&r&&(t+=e);return t}},function(n,e,t){var r=t(28);n.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(r)},function(n,e,t){"use strict";t(215)},function(n,e,t){"use strict";t(216)},function(n,e,t){"use strict";var r=t(1),i=t(3),a=t(21),o=t(17),s=t(22),c=t(12),l=t(2),u=t(239),d=t(45),p=t(392),h=t(393),m=t(51),g=t(394),f=[],v=i(f.sort),b=i(f.push),y=l((function(){f.sort(void 0)})),x=l((function(){f.sort(null)})),k=d("sort"),w=!l((function(){if(m)return m<70;if(!(p&&p>3)){if(h)return!0;if(g)return g<603;var n,e,t,r,i="";for(n=65;n<76;n++){switch(e=String.fromCharCode(n),n){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(r=0;r<47;r++)f.push({k:e+r,v:t})}for(f.sort((function(n,e){return e.v-n.v})),r=0;r<f.length;r++)e=f[r].k.charAt(0),i.charAt(i.length-1)!==e&&(i+=e);return"DGBEFHACIJK"!==i}}));r({target:"Array",proto:!0,forced:y||!x||!k||!w},{sort:function(n){void 0!==n&&a(n);var e=o(this);if(w)return void 0===n?v(e):v(e,n);var t,r,i=[],l=s(e);for(r=0;r<l;r++)r in e&&b(i,e[r]);for(u(i,function(n){return function(e,t){return void 0===t?-1:void 0===e?1:void 0!==n?+n(e,t)||0:c(e)>c(t)?1:-1}}(n)),t=i.length,r=0;r<t;)e[r]=i[r++];for(;r<l;)delete e[r++];return e}})},function(n,e,t){var r=t(28).match(/firefox\/(\d+)/i);n.exports=!!r&&+r[1]},function(n,e,t){var r=t(28);n.exports=/MSIE|Trident/.test(r)},function(n,e,t){var r=t(28).match(/AppleWebKit\/(\d+)\./);n.exports=!!r&&+r[1]},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(220)},function(n,e,t){"use strict";t(221)},function(n,e,t){"use strict";t.r(e);t(144),t(246),t(259),t(261);var r=t(92),i=(t(141),t(54),t(6),t(25),t(32),t(43),t(31),Object.freeze({}));function a(n){return null==n}function o(n){return null!=n}function s(n){return!0===n}function c(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function d(n){return"[object Object]"===u.call(n)}function p(n){return"[object RegExp]"===u.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function g(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function f(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),r=n.split(","),i=0;i<r.length;i++)t[r[i]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var b=v("key,ref,slot,slot-scope,is");function y(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var x=Object.prototype.hasOwnProperty;function k(n,e){return x.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var E=/-(\w)/g,A=w((function(n){return n.replace(E,(function(n,e){return e?e.toUpperCase():""}))})),_=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),T=/\B([A-Z])/g,j=w((function(n){return n.replace(T,"-$1").toLowerCase()}));var S=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function C(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function $(n,e){for(var t in e)n[t]=e[t];return n}function I(n){for(var e={},t=0;t<n.length;t++)n[t]&&$(e,n[t]);return e}function z(n,e,t){}var O=function(n,e,t){return!1},G=function(n){return n};function D(n,e){if(n===e)return!0;var t=l(n),r=l(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var i=Array.isArray(n),a=Array.isArray(e);if(i&&a)return n.length===e.length&&n.every((function(n,t){return D(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(i||a)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return D(n[t],e[t])}))}catch(n){return!1}}function B(n,e){for(var t=0;t<n.length;t++)if(D(n[t],e))return t;return-1}function P(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var L=["component","directive","filter"],H=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:z,parsePlatformTagName:G,mustUseProp:O,async:!0,_lifecycleHooks:H},R=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var F=new RegExp("[^"+R.source+".$_\\d]");var U,q="__proto__"in{},V="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Y=W&&WXEnvironment.platform.toLowerCase(),J=V&&window.navigator.userAgent.toLowerCase(),Z=J&&/msie|trident/.test(J),K=J&&J.indexOf("msie 9.0")>0,X=J&&J.indexOf("edge/")>0,Q=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===Y),nn=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),en={}.watch,tn=!1;if(V)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){tn=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var an=function(){return void 0===U&&(U=!V&&!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),U},on=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function sn(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,ln="undefined"!=typeof Symbol&&sn(Symbol)&&"undefined"!=typeof Reflect&&sn(Reflect.ownKeys);cn="undefined"!=typeof Set&&sn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=z,dn=0,pn=function(){this.id=dn++,this.subs=[]};pn.prototype.addSub=function(n){this.subs.push(n)},pn.prototype.removeSub=function(n){y(this.subs,n)},pn.prototype.depend=function(){pn.target&&pn.target.addDep(this)},pn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},pn.target=null;var hn=[];function mn(n){hn.push(n),pn.target=n}function gn(){hn.pop(),pn.target=hn[hn.length-1]}var fn=function(n,e,t,r,i,a,o,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=i,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(fn.prototype,vn);var bn=function(n){void 0===n&&(n="");var e=new fn;return e.text=n,e.isComment=!0,e};function yn(n){return new fn(void 0,void 0,void 0,String(n))}function xn(n){var e=new fn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var kn=Array.prototype,wn=Object.create(kn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=kn[n];N(wn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var i,a=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&o.observeArray(i),o.dep.notify(),a}))}));var En=Object.getOwnPropertyNames(wn),An=!0;function _n(n){An=n}var Tn=function(n){this.value=n,this.dep=new pn,this.vmCount=0,N(n,"__ob__",this),Array.isArray(n)?(q?function(n,e){n.__proto__=e}(n,wn):function(n,e,t){for(var r=0,i=t.length;r<i;r++){var a=t[r];N(n,a,e[a])}}(n,wn,En),this.observeArray(n)):this.walk(n)};function jn(n,e){var t;if(l(n)&&!(n instanceof fn))return k(n,"__ob__")&&n.__ob__ instanceof Tn?t=n.__ob__:An&&!an()&&(Array.isArray(n)||d(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new Tn(n)),e&&t&&t.vmCount++,t}function Sn(n,e,t,r,i){var a=new pn,o=Object.getOwnPropertyDescriptor(n,e);if(!o||!1!==o.configurable){var s=o&&o.get,c=o&&o.set;s&&!c||2!==arguments.length||(t=n[e]);var l=!i&&jn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return pn.target&&(a.depend(),l&&(l.dep.depend(),Array.isArray(e)&&In(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!c||(c?c.call(n,e):t=e,l=!i&&jn(e),a.notify())}})}}function Cn(n,e,t){if(Array.isArray(n)&&h(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(Sn(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function $n(n,e){if(Array.isArray(n)&&h(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||k(n,e)&&(delete n[e],t&&t.dep.notify())}}function In(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&In(e)}Tn.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)Sn(n,e[t])},Tn.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)jn(n[e])};var zn=M.optionMergeStrategies;function On(n,e){if(!e)return n;for(var t,r,i,a=ln?Reflect.ownKeys(e):Object.keys(e),o=0;o<a.length;o++)"__ob__"!==(t=a[o])&&(r=n[t],i=e[t],k(n,t)?r!==i&&d(r)&&d(i)&&On(r,i):Cn(n,t,i));return n}function Gn(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,i="function"==typeof n?n.call(t,t):n;return r?On(r,i):i}:e?n?function(){return On("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Dn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Bn(n,e,t,r){var i=Object.create(n||null);return e?$(i,e):i}zn.data=function(n,e,t){return t?Gn(n,e,t):e&&"function"!=typeof e?n:Gn(n,e)},H.forEach((function(n){zn[n]=Dn})),L.forEach((function(n){zn[n+"s"]=Bn})),zn.watch=function(n,e,t,r){if(n===en&&(n=void 0),e===en&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var a in $(i,n),e){var o=i[a],s=e[a];o&&!Array.isArray(o)&&(o=[o]),i[a]=o?o.concat(s):Array.isArray(s)?s:[s]}return i},zn.props=zn.methods=zn.inject=zn.computed=function(n,e,t,r){if(!n)return e;var i=Object.create(null);return $(i,n),e&&$(i,e),i},zn.provide=Gn;var Pn=function(n,e){return void 0===e?n:e};function Ln(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,i,a={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(i=t[r])&&(a[A(i)]={type:null});else if(d(t))for(var o in t)i=t[o],a[A(o)]=d(i)?i:{type:i};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var i=0;i<t.length;i++)r[t[i]]={from:t[i]};else if(d(t))for(var a in t){var o=t[a];r[a]=d(o)?$({from:a},o):{from:o}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=Ln(n,e.extends,t)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)n=Ln(n,e.mixins[r],t);var a,o={};for(a in n)s(a);for(a in e)k(n,a)||s(a);function s(r){var i=zn[r]||Pn;o[r]=i(n[r],e[r],t,r)}return o}function Hn(n,e,t,r){if("string"==typeof t){var i=n[e];if(k(i,t))return i[t];var a=A(t);if(k(i,a))return i[a];var o=_(a);return k(i,o)?i[o]:i[t]||i[a]||i[o]}}function Mn(n,e,t,r){var i=e[n],a=!k(t,n),o=t[n],s=Un(Boolean,i.type);if(s>-1)if(a&&!k(i,"default"))o=!1;else if(""===o||o===j(n)){var c=Un(String,i.type);(c<0||s<c)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!k(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Nn(e.type)?r.call(n):r}(r,i,n);var l=An;_n(!0),jn(o),_n(l)}return o}var Rn=/^\s*function (\w+)/;function Nn(n){var e=n&&n.toString().match(Rn);return e?e[1]:""}function Fn(n,e){return Nn(n)===Nn(e)}function Un(n,e){if(!Array.isArray(e))return Fn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Fn(e[t],n))return t;return-1}function qn(n,e,t){mn();try{if(e)for(var r=e;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var a=0;a<i.length;a++)try{if(!1===i[a].call(r,n,e,t))return}catch(n){Wn(n,r,"errorCaptured hook")}}Wn(n,e,t)}finally{gn()}}function Vn(n,e,t,r,i){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(n){return qn(n,r,i+" (Promise/async)")})),a._handled=!0)}catch(n){qn(n,r,i)}return a}function Wn(n,e,t){if(M.errorHandler)try{return M.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Yn(e,null,"config.errorHandler")}Yn(n,e,t)}function Yn(n,e,t){if(!V&&!W||"undefined"==typeof console)throw n;console.error(n)}var Jn,Zn=!1,Kn=[],Xn=!1;function Qn(){Xn=!1;var n=Kn.slice(0);Kn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&sn(Promise)){var ne=Promise.resolve();Jn=function(){ne.then(Qn),Q&&setTimeout(z)},Zn=!0}else if(Z||"undefined"==typeof MutationObserver||!sn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Jn="undefined"!=typeof setImmediate&&sn(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var ee=1,te=new MutationObserver(Qn),re=document.createTextNode(String(ee));te.observe(re,{characterData:!0}),Jn=function(){ee=(ee+1)%2,re.data=String(ee)},Zn=!0}function ie(n,e){var t;if(Kn.push((function(){if(n)try{n.call(e)}catch(n){qn(n,e,"nextTick")}else t&&t(e)})),Xn||(Xn=!0,Jn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var ae=new cn;function oe(n){!function n(e,t){var r,i,a=Array.isArray(e);if(!a&&!l(e)||Object.isFrozen(e)||e instanceof fn)return;if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(a)for(r=e.length;r--;)n(e[r],t);else for(i=Object.keys(e),r=i.length;r--;)n(e[i[r]],t)}(n,ae),ae.clear()}var se=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function ce(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Vn(r,null,arguments,e,"v-on handler");for(var i=r.slice(),a=0;a<i.length;a++)Vn(i[a],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,r,i,o){var c,l,u,d;for(c in n)l=n[c],u=e[c],d=se(c),a(l)||(a(u)?(a(l.fns)&&(l=n[c]=ce(l,o)),s(d.once)&&(l=n[c]=i(d.name,l,d.capture)),t(d.name,l,d.capture,d.passive,d.params)):l!==u&&(u.fns=l,n[c]=u));for(c in e)a(n[c])&&r((d=se(c)).name,e[c],d.capture)}function ue(n,e,t){var r;n instanceof fn&&(n=n.data.hook||(n.data.hook={}));var i=n[e];function c(){t.apply(this,arguments),y(r.fns,c)}a(i)?r=ce([c]):o(i.fns)&&s(i.merged)?(r=i).fns.push(c):r=ce([i,c]),r.merged=!0,n[e]=r}function de(n,e,t,r,i){if(o(e)){if(k(e,t))return n[t]=e[t],i||delete e[t],!0;if(k(e,r))return n[t]=e[r],i||delete e[r],!0}return!1}function pe(n){return c(n)?[yn(n)]:Array.isArray(n)?function n(e,t){var r,i,l,u,d=[];for(r=0;r<e.length;r++)a(i=e[r])||"boolean"==typeof i||(l=d.length-1,u=d[l],Array.isArray(i)?i.length>0&&(he((i=n(i,(t||"")+"_"+r))[0])&&he(u)&&(d[l]=yn(u.text+i[0].text),i.shift()),d.push.apply(d,i)):c(i)?he(u)?d[l]=yn(u.text+i):""!==i&&d.push(yn(i)):he(i)&&he(u)?d[l]=yn(u.text+i.text):(s(e._isVList)&&o(i.tag)&&a(i.key)&&o(t)&&(i.key="__vlist"+t+"_"+r+"__"),d.push(i)));return d}(n):void 0}function he(n){return o(n)&&o(n.text)&&!1===n.isComment}function me(n,e){if(n){for(var t=Object.create(null),r=ln?Reflect.ownKeys(n):Object.keys(n),i=0;i<r.length;i++){var a=r[i];if("__ob__"!==a){for(var o=n[a].from,s=e;s;){if(s._provided&&k(s._provided,o)){t[a]=s._provided[o];break}s=s.$parent}if(!s)if("default"in n[a]){var c=n[a].default;t[a]="function"==typeof c?c.call(e):c}else 0}}return t}}function ge(n,e){if(!n||!n.length)return{};for(var t={},r=0,i=n.length;r<i;r++){var a=n[r],o=a.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,a.context!==e&&a.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(a);else{var s=o.slot,c=t[s]||(t[s]=[]);"template"===a.tag?c.push.apply(c,a.children||[]):c.push(a)}}for(var l in t)t[l].every(fe)&&delete t[l];return t}function fe(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n){return n.isComment&&n.asyncFactory}function be(n,e,t){var r,a=Object.keys(e).length>0,o=n?!!n.$stable:!a,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(o&&t&&t!==i&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var c in r={},n)n[c]&&"$"!==c[0]&&(r[c]=ye(e,c,n[c]))}else r={};for(var l in e)l in r||(r[l]=xe(e,l));return n&&Object.isExtensible(n)&&(n._normalized=r),N(r,"$stable",o),N(r,"$key",s),N(r,"$hasNormal",a),r}function ye(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:pe(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!ve(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function xe(n,e){return function(){return n[e]}}function ke(n,e){var t,r,i,a,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,i=n.length;r<i;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),u=c.next();!u.done;)t.push(e(u.value,t.length)),u=c.next()}else for(a=Object.keys(n),t=new Array(a.length),r=0,i=a.length;r<i;r++)s=a[r],t[r]=e(n[s],s,r);return o(t)||(t=[]),t._isVList=!0,t}function we(n,e,t,r){var i,a=this.$scopedSlots[n];a?(t=t||{},r&&(t=$($({},r),t)),i=a(t)||("function"==typeof e?e():e)):i=this.$slots[n]||("function"==typeof e?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},i):i}function Ee(n){return Hn(this.$options,"filters",n)||G}function Ae(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function _e(n,e,t,r,i){var a=M.keyCodes[e]||t;return i&&r&&!M.keyCodes[e]?Ae(i,r):a?Ae(a,n):r?j(r)!==e:void 0===n}function Te(n,e,t,r,i){if(t)if(l(t)){var a;Array.isArray(t)&&(t=I(t));var o=function(o){if("class"===o||"style"===o||b(o))a=n;else{var s=n.attrs&&n.attrs.type;a=r||M.mustUseProp(e,s,o)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var c=A(o),l=j(o);c in a||l in a||(a[o]=t[o],i&&((n.on||(n.on={}))["update:"+o]=function(n){t[o]=n}))};for(var s in t)o(s)}else;return n}function je(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Ce(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Se(n,e,t){return Ce(n,"__once__"+e+(t?"_"+t:""),!0),n}function Ce(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&$e(n[r],e+"_"+r,t);else $e(n,e,t)}function $e(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Ie(n,e){if(e)if(d(e)){var t=n.on=n.on?$({},n.on):{};for(var r in e){var i=t[r],a=e[r];t[r]=i?[].concat(i,a):a}}else;return n}function ze(n,e,t,r){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var a=n[i];Array.isArray(a)?ze(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function Oe(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Ge(n,e){return"string"==typeof n?e+n:n}function De(n){n._o=Se,n._n=f,n._s=g,n._l=ke,n._t=we,n._q=D,n._i=B,n._m=je,n._f=Ee,n._k=_e,n._b=Te,n._v=yn,n._e=bn,n._u=ze,n._g=Ie,n._d=Oe,n._p=Ge}function Be(n,e,t,r,a){var o,c=this,l=a.options;k(r,"_uid")?(o=Object.create(r))._original=r:(o=r,r=r._original);var u=s(l._compiled),d=!u;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||i,this.injections=me(l.inject,r),this.slots=function(){return c.$slots||be(n.scopedSlots,c.$slots=ge(t,r)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return be(n.scopedSlots,this.slots())}}),u&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=be(n.scopedSlots,this.$slots)),l._scopeId?this._c=function(n,e,t,i){var a=Fe(o,n,e,t,i,d);return a&&!Array.isArray(a)&&(a.fnScopeId=l._scopeId,a.fnContext=r),a}:this._c=function(n,e,t,r){return Fe(o,n,e,t,r,d)}}function Pe(n,e,t,r,i){var a=xn(n);return a.fnContext=t,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function Le(n,e){for(var t in e)n[A(t)]=e[t]}De(Be.prototype);var He={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;He.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Xe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,a){0;var o=r.data.scopedSlots,s=n.$scopedSlots,c=!!(o&&!o.$stable||s!==i&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),l=!!(a||n.$options._renderChildren||c);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=a,n.$attrs=r.data.attrs||i,n.$listeners=t||i,e&&n.$options.props){_n(!1);for(var u=n._props,d=n.$options._propKeys||[],p=0;p<d.length;p++){var h=d[p],m=n.$options.props;u[h]=Mn(h,m,e,n)}_n(!0),n.$options.propsData=e}t=t||i;var g=n.$options._parentListeners;n.$options._parentListeners=t,Ke(n,t,g),l&&(n.$slots=ge(a,r.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,tt(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,it.push(e)):et(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,nt(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);tt(e,"deactivated")}}(e,!0):e.$destroy())}},Me=Object.keys(He);function Re(n,e,t,r,c){if(!a(n)){var u=t.$options._base;if(l(n)&&(n=u.extend(n)),"function"==typeof n){var d;if(a(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=qe;t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(s(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],i=!0,c=null,u=null;t.$on("hook:destroyed",(function(){return y(r,t)}));var d=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},p=P((function(t){n.resolved=Ve(t,e),i?r.length=0:d(!0)})),h=P((function(e){o(n.errorComp)&&(n.error=!0,d(!0))})),g=n(p,h);return l(g)&&(m(g)?a(n.resolved)&&g.then(p,h):m(g.component)&&(g.component.then(p,h),o(g.error)&&(n.errorComp=Ve(g.error,e)),o(g.loading)&&(n.loadingComp=Ve(g.loading,e),0===g.delay?n.loading=!0:c=setTimeout((function(){c=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,d(!1))}),g.delay||200)),o(g.timeout)&&(u=setTimeout((function(){u=null,a(n.resolved)&&h(null)}),g.timeout)))),i=!1,n.loading?n.loadingComp:n.resolved}}(d=n,u)))return function(n,e,t,r,i){var a=bn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:r,tag:i},a}(d,e,t,r,c);e=e||{},At(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),a=i[r],s=e.model.callback;o(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[r]=[s].concat(a)):i[r]=s}(n.options,e);var p=function(n,e,t){var r=e.options.props;if(!a(r)){var i={},s=n.attrs,c=n.props;if(o(s)||o(c))for(var l in r){var u=j(l);de(i,c,l,u,!0)||de(i,s,l,u,!1)}return i}}(e,n);if(s(n.options.functional))return function(n,e,t,r,a){var s=n.options,c={},l=s.props;if(o(l))for(var u in l)c[u]=Mn(u,l,e||i);else o(t.attrs)&&Le(c,t.attrs),o(t.props)&&Le(c,t.props);var d=new Be(t,c,a,r,n),p=s.render.call(null,d._c,d);if(p instanceof fn)return Pe(p,t,d.parent,s,d);if(Array.isArray(p)){for(var h=pe(p)||[],m=new Array(h.length),g=0;g<h.length;g++)m[g]=Pe(h[g],t,d.parent,s,d);return m}}(n,p,e,t,r);var h=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Me.length;t++){var r=Me[t],i=e[r],a=He[r];i===a||i&&i._merged||(e[r]=i?Ne(a,i):a)}}(e);var f=n.options.name||c;return new fn("vue-component-"+n.cid+(f?"-"+f:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:p,listeners:h,tag:c,children:r},d)}}}function Ne(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function Fe(n,e,t,r,i,u){return(Array.isArray(t)||c(t))&&(i=r,r=t,t=void 0),s(u)&&(i=2),function(n,e,t,r,i){if(o(t)&&o(t.__ob__))return bn();o(t)&&o(t.is)&&(e=t.is);if(!e)return bn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===i?r=pe(r):1===i&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var c,u;if("string"==typeof e){var d;u=n.$vnode&&n.$vnode.ns||M.getTagNamespace(e),c=M.isReservedTag(e)?new fn(M.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(d=Hn(n.$options,"components",e))?new fn(e,t,r,void 0,void 0,n):Re(d,t,n,r,e)}else c=Re(e,t,n,r);return Array.isArray(c)?c:o(c)?(o(u)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var i=0,c=e.children.length;i<c;i++){var l=e.children[i];o(l.tag)&&(a(l.ns)||s(r)&&"svg"!==l.tag)&&n(l,t,r)}}(c,u),o(t)&&function(n){l(n.style)&&oe(n.style);l(n.class)&&oe(n.class)}(t),c):bn()}(n,e,t,r,i)}var Ue,qe=null;function Ve(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function We(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||ve(t)))return t}}function Ye(n,e){Ue.$on(n,e)}function Je(n,e){Ue.$off(n,e)}function Ze(n,e){var t=Ue;return function r(){var i=e.apply(null,arguments);null!==i&&t.$off(n,r)}}function Ke(n,e,t){Ue=n,le(e,t||{},Ye,Je,Ze,n),Ue=void 0}var Xe=null;function Qe(n){var e=Xe;return Xe=n,function(){Xe=e}}function nt(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function et(n,e){if(e){if(n._directInactive=!1,nt(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)et(n.$children[t]);tt(n,"activated")}}function tt(n,e){mn();var t=n.$options[e],r=e+" hook";if(t)for(var i=0,a=t.length;i<a;i++)Vn(t[i],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),gn()}var rt=[],it=[],at={},ot=!1,st=!1,ct=0;var lt=0,ut=Date.now;if(V&&!Z){var dt=window.performance;dt&&"function"==typeof dt.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return dt.now()})}function pt(){var n,e;for(lt=ut(),st=!0,rt.sort((function(n,e){return n.id-e.id})),ct=0;ct<rt.length;ct++)(n=rt[ct]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=it.slice(),r=rt.slice();ct=rt.length=it.length=0,at={},ot=st=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,et(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&tt(r,"updated")}}(r),on&&M.devtools&&on.emit("flush")}var ht=0,mt=function(n,e,t,r,i){this.vm=n,i&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++ht,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!F.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=z)),this.value=this.lazy?void 0:this.get()};mt.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;qn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&oe(n),gn(),this.cleanupDeps()}return n},mt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},mt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},mt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==at[e]){if(at[e]=!0,st){for(var t=rt.length-1;t>ct&&rt[t].id>n.id;)t--;rt.splice(t+1,0,n)}else rt.push(n);ot||(ot=!0,ie(pt))}}(this)},mt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Vn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},mt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},mt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var gt={enumerable:!0,configurable:!0,get:z,set:z};function ft(n,e,t){gt.get=function(){return this[e][t]},gt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,gt)}function vt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},i=n.$options._propKeys=[];n.$parent&&_n(!1);var a=function(a){i.push(a);var o=Mn(a,e,t,n);Sn(r,a,o),a in n||ft(n,"_props",a)};for(var o in e)a(o);_n(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?z:S(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;d(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return qn(n,e,"data()"),{}}finally{gn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,i=(n.$options.methods,t.length);for(;i--;){var a=t[i];0,r&&k(r,a)||(o=void 0,36!==(o=(a+"").charCodeAt(0))&&95!==o&&ft(n,"_data",a))}var o;jn(e,!0)}(n):jn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=an();for(var i in e){var a=e[i],o="function"==typeof a?a:a.get;0,r||(t[i]=new mt(n,o||z,z,bt)),i in n||yt(n,i,a)}}(n,e.computed),e.watch&&e.watch!==en&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var i=0;i<r.length;i++)wt(n,t,r[i]);else wt(n,t,r)}}(n,e.watch)}var bt={lazy:!0};function yt(n,e,t){var r=!an();"function"==typeof t?(gt.get=r?xt(e):kt(t),gt.set=z):(gt.get=t.get?r&&!1!==t.cache?xt(e):kt(t.get):z,gt.set=t.set||z),Object.defineProperty(n,e,gt)}function xt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),pn.target&&e.depend(),e.value}}function kt(n){return function(){return n.call(this,this)}}function wt(n,e,t,r){return d(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Et=0;function At(n){var e=n.options;if(n.super){var t=At(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var i in t)t[i]!==r[i]&&(e||(e={}),e[i]=t[i]);return e}(n);r&&$(n.extendOptions,r),(e=n.options=Ln(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function _t(n){this._init(n)}function Tt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,i=n._Ctor||(n._Ctor={});if(i[r])return i[r];var a=n.name||t.options.name;var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=Ln(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)ft(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)yt(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,L.forEach((function(n){o[n]=t[n]})),a&&(o.options.components[a]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=$({},o.options),i[r]=o,o}}function jt(n){return n&&(n.Ctor.options.name||n.tag)}function St(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!p(n)&&n.test(e)}function Ct(n,e){var t=n.cache,r=n.keys,i=n._vnode;for(var a in t){var o=t[a];if(o){var s=o.name;s&&!e(s)&&$t(t,a,r,i)}}}function $t(n,e,t,r){var i=n[e];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),n[e]=null,y(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Et++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var i=r.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Ln(At(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=ge(e._renderChildren,r),n.$scopedSlots=i,n._c=function(e,t,r,i){return Fe(n,e,t,r,i,!1)},n.$createElement=function(e,t,r,i){return Fe(n,e,t,r,i,!0)};var a=t&&t.data;Sn(n,"$attrs",a&&a.attrs||i,null,!0),Sn(n,"$listeners",e._parentListeners||i,null,!0)}(e),tt(e,"beforeCreate"),function(n){var e=me(n.$options.inject,n);e&&(_n(!1),Object.keys(e).forEach((function(t){Sn(n,t,e[t])})),_n(!0))}(e),vt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),tt(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(_t),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Cn,n.prototype.$delete=$n,n.prototype.$watch=function(n,e,t){if(d(e))return wt(this,n,e,t);(t=t||{}).user=!0;var r=new mt(this,n,e,t);if(t.immediate){var i='callback for immediate watcher "'+r.expression+'"';mn(),Vn(e,this,[r.value],this,i),gn()}return function(){r.teardown()}}}(_t),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var i=0,a=n.length;i<a;i++)r.$on(n[i],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,i=n.length;r<i;r++)t.$off(n[r],e);return t}var a,o=t._events[n];if(!o)return t;if(!e)return t._events[n]=null,t;for(var s=o.length;s--;)if((a=o[s])===e||a.fn===e){o.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?C(t):t;for(var r=C(arguments,1),i='event handler for "'+n+'"',a=0,o=t.length;a<o;a++)Vn(t[a],e,r,e,i)}return e}}(_t),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,i=t._vnode,a=Qe(t);t._vnode=n,t.$el=i?t.__patch__(i,n):t.__patch__(t.$el,n,e,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){tt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),tt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(_t),function(n){De(n.prototype),n.prototype.$nextTick=function(n){return ie(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,i=t._parentVnode;i&&(e.$scopedSlots=be(i.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=i;try{qe=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){qn(t,e,"render"),n=e._vnode}finally{qe=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof fn||(n=bn()),n.parent=i,n}}(_t);var It=[String,RegExp,Array],zt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:It,exclude:It,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var i=t.tag,a=t.componentInstance,o=t.componentOptions;n[r]={name:jt(o),tag:i,componentInstance:a},e.push(r),this.max&&e.length>parseInt(this.max)&&$t(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)$t(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Ct(n,(function(n){return St(e,n)}))})),this.$watch("exclude",(function(e){Ct(n,(function(n){return!St(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=We(n),t=e&&e.componentOptions;if(t){var r=jt(t),i=this.include,a=this.exclude;if(i&&(!r||!St(i,r))||a&&r&&St(a,r))return e;var o=this.cache,s=this.keys,c=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;o[c]?(e.componentInstance=o[c].componentInstance,y(s,c),s.push(c)):(this.vnodeToCache=e,this.keyToCache=c),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return M}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:$,mergeOptions:Ln,defineReactive:Sn},n.set=Cn,n.delete=$n,n.nextTick=ie,n.observable=function(n){return jn(n),n},n.options=Object.create(null),L.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,$(n.options.components,zt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=C(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Ln(this.options,n),this}}(n),Tt(n),function(n){L.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(_t),Object.defineProperty(_t.prototype,"$isServer",{get:an}),Object.defineProperty(_t.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(_t,"FunctionalRenderContext",{value:Be}),_t.version="2.6.14";var Ot=v("style,class"),Gt=v("input,textarea,option,select,progress"),Dt=v("contenteditable,draggable,spellcheck"),Bt=v("events,caret,typing,plaintext-only"),Pt=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Lt="http://www.w3.org/1999/xlink",Ht=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Mt=function(n){return Ht(n)?n.slice(6,n.length):""},Rt=function(n){return null==n||!1===n};function Nt(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Ft(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=Ft(e,t.data));return function(n,e){if(o(n)||o(e))return Ut(n,qt(e));return""}(e.staticClass,e.class)}function Ft(n,e){return{staticClass:Ut(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function Ut(n,e){return n?e?n+" "+e:n:e||""}function qt(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,i=n.length;r<i;r++)o(e=qt(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Vt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yt=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Jt=function(n){return Wt(n)||Yt(n)};var Zt=Object.create(null);var Kt=v("text,number,password,search,email,tel,url");var Xt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Vt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Qt={create:function(n,e){nr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(nr(n,!0),nr(e))},destroy:function(n){nr(n,!0)}};function nr(n,e){var t=n.data.ref;if(o(t)){var r=n.context,i=n.componentInstance||n.elm,a=r.$refs;e?Array.isArray(a[t])?y(a[t],i):a[t]===i&&(a[t]=void 0):n.data.refInFor?Array.isArray(a[t])?a[t].indexOf(i)<0&&a[t].push(i):a[t]=[i]:a[t]=i}}var er=new fn("",{},[]),tr=["create","activate","update","remove","destroy"];function rr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,i=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===i||Kt(r)&&Kt(i)}(n,e)||s(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function ir(n,e,t){var r,i,a={};for(r=e;r<=t;++r)o(i=n[r].key)&&(a[i]=r);return a}var ar={create:or,update:or,destroy:function(n){or(n,er)}};function or(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,i,a=n===er,o=e===er,s=cr(n.data.directives,n.context),c=cr(e.data.directives,e.context),l=[],u=[];for(t in c)r=s[t],i=c[t],r?(i.oldValue=r.value,i.oldArg=r.arg,ur(i,"update",e,n),i.def&&i.def.componentUpdated&&u.push(i)):(ur(i,"bind",e,n),i.def&&i.def.inserted&&l.push(i));if(l.length){var d=function(){for(var t=0;t<l.length;t++)ur(l[t],"inserted",e,n)};a?ue(e,"insert",d):d()}u.length&&ue(e,"postpatch",(function(){for(var t=0;t<u.length;t++)ur(u[t],"componentUpdated",e,n)}));if(!a)for(t in s)c[t]||ur(s[t],"unbind",n,n,o)}(n,e)}var sr=Object.create(null);function cr(n,e){var t,r,i=Object.create(null);if(!n)return i;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=sr),i[lr(r)]=r,r.def=Hn(e.$options,"directives",r.name);return i}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ur(n,e,t,r,i){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,r,i)}catch(r){qn(r,t.context,"directive "+n.name+" "+e+" hook")}}var dr=[Qt,ar];function pr(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var r,i,s=e.elm,c=n.data.attrs||{},l=e.data.attrs||{};for(r in o(l.__ob__)&&(l=e.data.attrs=$({},l)),l)i=l[r],c[r]!==i&&hr(s,r,i,e.data.pre);for(r in(Z||X)&&l.value!==c.value&&hr(s,"value",l.value),c)a(l[r])&&(Ht(r)?s.removeAttributeNS(Lt,Mt(r)):Dt(r)||s.removeAttribute(r))}}function hr(n,e,t,r){r||n.tagName.indexOf("-")>-1?mr(n,e,t):Pt(e)?Rt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):Dt(e)?n.setAttribute(e,function(n,e){return Rt(e)||"false"===e?"false":"contenteditable"===n&&Bt(e)?e:"true"}(e,t)):Ht(e)?Rt(t)?n.removeAttributeNS(Lt,Mt(e)):n.setAttributeNS(Lt,e,t):mr(n,e,t)}function mr(n,e,t){if(Rt(t))n.removeAttribute(e);else{if(Z&&!K&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var gr={create:pr,update:pr};function fr(n,e){var t=e.elm,r=e.data,i=n.data;if(!(a(r.staticClass)&&a(r.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=Nt(e),c=t._transitionClasses;o(c)&&(s=Ut(s,qt(c))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var vr,br={create:fr,update:fr};function yr(n,e,t){var r=vr;return function i(){var a=e.apply(null,arguments);null!==a&&wr(n,i,t,r)}}var xr=Zn&&!(nn&&Number(nn[1])<=53);function kr(n,e,t,r){if(xr){var i=lt,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=i||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}vr.addEventListener(n,e,tn?{capture:t,passive:r}:t)}function wr(n,e,t,r){(r||vr).removeEventListener(n,e._wrapper||e,t)}function Er(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},r=n.data.on||{};vr=e.elm,function(n){if(o(n.__r)){var e=Z?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,r,kr,wr,yr,e.context),vr=void 0}}var Ar,_r={create:Er,update:Er};function Tr(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,r,i=e.elm,s=n.data.domProps||{},c=e.data.domProps||{};for(t in o(c.__ob__)&&(c=e.data.domProps=$({},c)),s)t in c||(i[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var l=a(r)?"":String(r);jr(i,l)&&(i.value=l)}else if("innerHTML"===t&&Yt(i.tagName)&&a(i.innerHTML)){(Ar=Ar||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=Ar.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(r!==s[t])try{i[t]=r}catch(n){}}}}function jr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return f(t)!==f(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Sr={create:Tr,update:Tr},Cr=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function $r(n){var e=Ir(n.style);return n.staticStyle?$(n.staticStyle,e):e}function Ir(n){return Array.isArray(n)?I(n):"string"==typeof n?Cr(n):n}var zr,Or=/^--/,Gr=/\s*!important$/,Dr=function(n,e,t){if(Or.test(e))n.style.setProperty(e,t);else if(Gr.test(t))n.style.setProperty(j(e),t.replace(Gr,""),"important");else{var r=Pr(e);if(Array.isArray(t))for(var i=0,a=t.length;i<a;i++)n.style[r]=t[i];else n.style[r]=t}},Br=["Webkit","Moz","ms"],Pr=w((function(n){if(zr=zr||document.createElement("div").style,"filter"!==(n=A(n))&&n in zr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Br.length;t++){var r=Br[t]+e;if(r in zr)return r}}));function Lr(n,e){var t=e.data,r=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var i,s,c=e.elm,l=r.staticStyle,u=r.normalizedStyle||r.style||{},d=l||u,p=Ir(e.data.style)||{};e.data.normalizedStyle=o(p.__ob__)?$({},p):p;var h=function(n,e){var t,r={};if(e)for(var i=n;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=$r(i.data))&&$(r,t);(t=$r(n.data))&&$(r,t);for(var a=n;a=a.parent;)a.data&&(t=$r(a.data))&&$(r,t);return r}(e,!0);for(s in d)a(h[s])&&Dr(c,s,"");for(s in h)(i=h[s])!==d[s]&&Dr(c,s,null==i?"":i)}}var Hr={create:Lr,update:Lr},Mr=/\s+/;function Rr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Mr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Nr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Mr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Fr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&$(e,Ur(n.name||"v")),$(e,n),e}return"string"==typeof n?Ur(n):void 0}}var Ur=w((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),qr=V&&!K,Vr="transition",Wr="transitionend",Yr="animation",Jr="animationend";qr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Vr="WebkitTransition",Wr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Yr="WebkitAnimation",Jr="webkitAnimationEnd"));var Zr=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Kr(n){Zr((function(){Zr(n)}))}function Xr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Rr(n,e))}function Qr(n,e){n._transitionClasses&&y(n._transitionClasses,e),Nr(n,e)}function ni(n,e,t){var r=ti(n,e),i=r.type,a=r.timeout,o=r.propCount;if(!i)return t();var s="transition"===i?Wr:Jr,c=0,l=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++c>=o&&l()};setTimeout((function(){c<o&&l()}),a+1),n.addEventListener(s,u)}var ei=/\b(transform|all)(,|$)/;function ti(n,e){var t,r=window.getComputedStyle(n),i=(r[Vr+"Delay"]||"").split(", "),a=(r[Vr+"Duration"]||"").split(", "),o=ri(i,a),s=(r[Yr+"Delay"]||"").split(", "),c=(r[Yr+"Duration"]||"").split(", "),l=ri(s,c),u=0,d=0;return"transition"===e?o>0&&(t="transition",u=o,d=a.length):"animation"===e?l>0&&(t="animation",u=l,d=c.length):d=(t=(u=Math.max(o,l))>0?o>l?"transition":"animation":null)?"transition"===t?a.length:c.length:0,{type:t,timeout:u,propCount:d,hasTransform:"transition"===t&&ei.test(r[Vr+"Property"])}}function ri(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ii(e)+ii(n[t])})))}function ii(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function ai(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Fr(n.data.transition);if(!a(r)&&!o(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,u=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,h=r.appearToClass,m=r.appearActiveClass,g=r.beforeEnter,v=r.enter,b=r.afterEnter,y=r.enterCancelled,x=r.beforeAppear,k=r.appear,w=r.afterAppear,E=r.appearCancelled,A=r.duration,_=Xe,T=Xe.$vnode;T&&T.parent;)_=T.context,T=T.parent;var j=!_._isMounted||!n.isRootInsert;if(!j||k||""===k){var S=j&&p?p:c,C=j&&m?m:d,$=j&&h?h:u,I=j&&x||g,z=j&&"function"==typeof k?k:v,O=j&&w||b,G=j&&E||y,D=f(l(A)?A.enter:A);0;var B=!1!==i&&!K,L=ci(z),H=t._enterCb=P((function(){B&&(Qr(t,$),Qr(t,C)),H.cancelled?(B&&Qr(t,S),G&&G(t)):O&&O(t),t._enterCb=null}));n.data.show||ue(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),z&&z(t,H)})),I&&I(t),B&&(Xr(t,S),Xr(t,C),Kr((function(){Qr(t,S),H.cancelled||(Xr(t,$),L||(si(D)?setTimeout(H,D):ni(t,s,H)))}))),n.data.show&&(e&&e(),z&&z(t,H)),B||L||H()}}}function oi(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Fr(n.data.transition);if(a(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,u=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,h=r.leave,m=r.afterLeave,g=r.leaveCancelled,v=r.delayLeave,b=r.duration,y=!1!==i&&!K,x=ci(h),k=f(l(b)?b.leave:b);0;var w=t._leaveCb=P((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(Qr(t,u),Qr(t,d)),w.cancelled?(y&&Qr(t,c),g&&g(t)):(e(),m&&m(t)),t._leaveCb=null}));v?v(E):E()}function E(){w.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),y&&(Xr(t,c),Xr(t,d),Kr((function(){Qr(t,c),w.cancelled||(Xr(t,u),x||(si(k)?setTimeout(w,k):ni(t,s,w)))}))),h&&h(t,w),y||x||w())}}function si(n){return"number"==typeof n&&!isNaN(n)}function ci(n){if(a(n))return!1;var e=n.fns;return o(e)?ci(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function li(n,e){!0!==e.data.show&&ai(e)}var ui=function(n){var e,t,r={},i=n.modules,l=n.nodeOps;for(e=0;e<tr.length;++e)for(r[tr[e]]=[],t=0;t<i.length;++t)o(i[t][tr[e]])&&r[tr[e]].push(i[t][tr[e]]);function u(n){var e=l.parentNode(n);o(e)&&l.removeChild(e,n)}function d(n,e,t,i,a,c,u){if(o(n.elm)&&o(c)&&(n=c[u]=xn(n)),n.isRootInsert=!a,!function(n,e,t,i){var a=n.data;if(o(a)){var c=o(n.componentInstance)&&a.keepAlive;if(o(a=a.hook)&&o(a=a.init)&&a(n,!1),o(n.componentInstance))return p(n,e),h(t,n.elm,i),s(c)&&function(n,e,t,i){var a,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(a=s.data)&&o(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](er,s);e.push(s);break}h(t,n.elm,i)}(n,e,t,i),!0}}(n,e,t,i)){var d=n.data,g=n.children,v=n.tag;o(v)?(n.elm=n.ns?l.createElementNS(n.ns,v):l.createElement(v,n),b(n),m(n,g,e),o(d)&&f(n,e),h(t,n.elm,i)):s(n.isComment)?(n.elm=l.createComment(n.text),h(t,n.elm,i)):(n.elm=l.createTextNode(n.text),h(t,n.elm,i))}}function p(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(f(n,e),b(n)):(nr(n),e.push(n))}function h(n,e,t){o(n)&&(o(t)?l.parentNode(t)===n&&l.insertBefore(n,e,t):l.appendChild(n,e))}function m(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)d(e[r],t,n.elm,null,!0,e,r)}else c(n.text)&&l.appendChild(n.elm,l.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function f(n,t){for(var i=0;i<r.create.length;++i)r.create[i](er,n);o(e=n.data.hook)&&(o(e.create)&&e.create(er,n),o(e.insert)&&t.push(n))}function b(n){var e;if(o(e=n.fnScopeId))l.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&l.setStyleScope(n.elm,e),t=t.parent;o(e=Xe)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&l.setStyleScope(n.elm,e)}function y(n,e,t,r,i,a){for(;r<=i;++r)d(t[r],a,n,e,!1,t,r)}function x(n){var e,t,i=n.data;if(o(i))for(o(e=i.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function k(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(w(r),x(r)):u(r.elm))}}function w(n,e){if(o(e)||o(n.data)){var t,i=r.remove.length+1;for(o(e)?e.listeners+=i:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,i),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&w(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else u(n.elm)}function E(n,e,t,r){for(var i=t;i<r;i++){var a=e[i];if(o(a)&&rr(n,a))return i}}function A(n,e,t,i,c,u){if(n!==e){o(e.elm)&&o(i)&&(e=i[c]=xn(e));var p=e.elm=n.elm;if(s(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?j(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,m=e.data;o(m)&&o(h=m.hook)&&o(h=h.prepatch)&&h(n,e);var f=n.children,v=e.children;if(o(m)&&g(e)){for(h=0;h<r.update.length;++h)r.update[h](n,e);o(h=m.hook)&&o(h=h.update)&&h(n,e)}a(e.text)?o(f)&&o(v)?f!==v&&function(n,e,t,r,i){var s,c,u,p=0,h=0,m=e.length-1,g=e[0],f=e[m],v=t.length-1,b=t[0],x=t[v],w=!i;for(0;p<=m&&h<=v;)a(g)?g=e[++p]:a(f)?f=e[--m]:rr(g,b)?(A(g,b,r,t,h),g=e[++p],b=t[++h]):rr(f,x)?(A(f,x,r,t,v),f=e[--m],x=t[--v]):rr(g,x)?(A(g,x,r,t,v),w&&l.insertBefore(n,g.elm,l.nextSibling(f.elm)),g=e[++p],x=t[--v]):rr(f,b)?(A(f,b,r,t,h),w&&l.insertBefore(n,f.elm,g.elm),f=e[--m],b=t[++h]):(a(s)&&(s=ir(e,p,m)),a(c=o(b.key)?s[b.key]:E(b,e,p,m))?d(b,r,n,g.elm,!1,t,h):rr(u=e[c],b)?(A(u,b,r,t,h),e[c]=void 0,w&&l.insertBefore(n,u.elm,g.elm)):d(b,r,n,g.elm,!1,t,h),b=t[++h]);p>m?y(n,a(t[v+1])?null:t[v+1].elm,t,h,v,r):h>v&&k(e,p,m)}(p,f,v,t,u):o(v)?(o(n.text)&&l.setTextContent(p,""),y(p,null,v,0,v.length-1,t)):o(f)?k(f,0,f.length-1):o(n.text)&&l.setTextContent(p,""):n.text!==e.text&&l.setTextContent(p,e.text),o(m)&&o(h=m.hook)&&o(h=h.postpatch)&&h(n,e)}}}function _(n,e,t){if(s(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var T=v("attrs,class,staticClass,staticStyle,key");function j(n,e,t,r){var i,a=e.tag,c=e.data,l=e.children;if(r=r||c&&c.pre,e.elm=n,s(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(c)&&(o(i=c.hook)&&o(i=i.init)&&i(e,!0),o(i=e.componentInstance)))return p(e,t),!0;if(o(a)){if(o(l))if(n.hasChildNodes())if(o(i=c)&&o(i=i.domProps)&&o(i=i.innerHTML)){if(i!==n.innerHTML)return!1}else{for(var u=!0,d=n.firstChild,h=0;h<l.length;h++){if(!d||!j(d,l[h],t,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else m(e,l,t);if(o(c)){var g=!1;for(var v in c)if(!T(v)){g=!0,f(e,t);break}!g&&c.class&&oe(c.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,i){if(!a(e)){var c,u=!1,p=[];if(a(n))u=!0,d(e,p);else{var h=o(n.nodeType);if(!h&&rr(n,e))A(n,e,p,null,null,i);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&j(n,e,p))return _(e,p,!0),n;c=n,n=new fn(l.tagName(c).toLowerCase(),{},[],void 0,c)}var m=n.elm,f=l.parentNode(m);if(d(e,p,m._leaveCb?null:f,l.nextSibling(m)),o(e.parent))for(var v=e.parent,b=g(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var w=0;w<r.create.length;++w)r.create[w](er,v);var E=v.data.hook.insert;if(E.merged)for(var T=1;T<E.fns.length;T++)E.fns[T]()}else nr(v);v=v.parent}o(f)?k([n],0,0):o(n.tag)&&x(n)}}return _(e,p,u),e.elm}o(n)&&x(n)}}({nodeOps:Xt,modules:[gr,br,_r,Sr,Hr,V?{create:li,activate:li,remove:function(n,e){!0!==n.data.show?oi(n,e):e()}}:{}].concat(dr)});K&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&bi(n,"input")}));var di={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ue(t,"postpatch",(function(){di.componentUpdated(n,e,t)})):pi(n,e,t.context),n._vOptions=[].map.call(n.options,gi)):("textarea"===t.tag||Kt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",fi),n.addEventListener("compositionend",vi),n.addEventListener("change",vi),K&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){pi(n,e,t.context);var r=n._vOptions,i=n._vOptions=[].map.call(n.options,gi);if(i.some((function(n,e){return!D(n,r[e])})))(n.multiple?e.value.some((function(n){return mi(n,i)})):e.value!==e.oldValue&&mi(e.value,i))&&bi(n,"change")}}};function pi(n,e,t){hi(n,e,t),(Z||X)&&setTimeout((function(){hi(n,e,t)}),0)}function hi(n,e,t){var r=e.value,i=n.multiple;if(!i||Array.isArray(r)){for(var a,o,s=0,c=n.options.length;s<c;s++)if(o=n.options[s],i)a=B(r,gi(o))>-1,o.selected!==a&&(o.selected=a);else if(D(gi(o),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));i||(n.selectedIndex=-1)}}function mi(n,e){return e.every((function(e){return!D(e,n)}))}function gi(n){return"_value"in n?n._value:n.value}function fi(n){n.target.composing=!0}function vi(n){n.target.composing&&(n.target.composing=!1,bi(n.target,"input"))}function bi(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function yi(n){return!n.componentInstance||n.data&&n.data.transition?n:yi(n.componentInstance._vnode)}var xi={model:di,show:{bind:function(n,e,t){var r=e.value,i=(t=yi(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&i?(t.data.show=!0,ai(t,(function(){n.style.display=a}))):n.style.display=r?a:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=yi(t)).data&&t.data.transition?(t.data.show=!0,r?ai(t,(function(){n.style.display=n.__vOriginalDisplay})):oi(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,i){i||(n.style.display=n.__vOriginalDisplay)}}},ki={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function wi(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?wi(We(e.children)):n}function Ei(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var i=t._parentListeners;for(var a in i)e[A(a)]=i[a];return e}function Ai(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var _i=function(n){return n.tag||ve(n)},Ti=function(n){return"show"===n.name},ji={name:"transition",props:ki,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(_i)).length){0;var r=this.mode;0;var i=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return i;var a=wi(i);if(!a)return i;if(this._leaving)return Ai(n,i);var o="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?o+"comment":o+a.tag:c(a.key)?0===String(a.key).indexOf(o)?a.key:o+a.key:a.key;var s=(a.data||(a.data={})).transition=Ei(this),l=this._vnode,u=wi(l);if(a.data.directives&&a.data.directives.some(Ti)&&(a.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,u)&&!ve(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=$({},s);if("out-in"===r)return this._leaving=!0,ue(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Ai(n,i);if("in-out"===r){if(ve(a))return l;var p,h=function(){p()};ue(s,"afterEnter",h),ue(s,"enterCancelled",h),ue(d,"delayLeave",(function(n){p=n}))}}return i}}},Si=$({tag:String,moveClass:String},ki);function Ci(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function $i(n){n.data.newPos=n.elm.getBoundingClientRect()}function Ii(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,i=e.top-t.top;if(r||i){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate("+r+"px,"+i+"px)",a.transitionDuration="0s"}}delete Si.mode;var zi={Transition:ji,TransitionGroup:{props:Si,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var i=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,i(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],a=this.children=[],o=Ei(this),s=0;s<i.length;s++){var c=i[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))a.push(c),t[c.key]=c,(c.data||(c.data={})).transition=o;else;}if(r){for(var l=[],u=[],d=0;d<r.length;d++){var p=r[d];p.data.transition=o,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?l.push(p):u.push(p)}this.kept=n(e,null,l),this.removed=u}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Ci),n.forEach($i),n.forEach(Ii),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Xr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Wr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Wr,n),t._moveCb=null,Qr(t,e))})}})))},methods:{hasMove:function(n,e){if(!qr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Nr(t,n)})),Rr(t,e),t.style.display="none",this.$el.appendChild(t);var r=ti(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};_t.config.mustUseProp=function(n,e,t){return"value"===t&&Gt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},_t.config.isReservedTag=Jt,_t.config.isReservedAttr=Ot,_t.config.getTagNamespace=function(n){return Yt(n)?"svg":"math"===n?"math":void 0},_t.config.isUnknownElement=function(n){if(!V)return!0;if(Jt(n))return!1;if(n=n.toLowerCase(),null!=Zt[n])return Zt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Zt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Zt[n]=/HTMLUnknownElement/.test(e.toString())},$(_t.options.directives,xi),$(_t.options.components,zi),_t.prototype.__patch__=V?ui:z,_t.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=bn),tt(n,"beforeMount"),r=function(){n._update(n._render(),t)},new mt(n,r,z,{before:function(){n._isMounted&&!n._isDestroyed&&tt(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,tt(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){M.devtools&&on&&on.emit("init",_t)}),0);var Oi=_t;
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function Gi(n,e){for(var t in e)n[t]=e[t];return n}var Di=/[!'()*]/g,Bi=function(n){return"%"+n.charCodeAt(0).toString(16)},Pi=/%2C/g,Li=function(n){return encodeURIComponent(n).replace(Di,Bi).replace(Pi,",")};function Hi(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Mi=function(n){return null==n||"object"==typeof n?n:String(n)};function Ri(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=Hi(t.shift()),i=t.length>0?Hi(t.join("=")):null;void 0===e[r]?e[r]=i:Array.isArray(e[r])?e[r].push(i):e[r]=[e[r],i]})),e):e}function Ni(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return Li(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(Li(e)):r.push(Li(e)+"="+Li(n)))})),r.join("&")}return Li(e)+"="+Li(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var Fi=/\/?$/;function Ui(n,e,t,r){var i=r&&r.options.stringifyQuery,a=e.query||{};try{a=qi(a)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:Yi(e,i),matched:n?Wi(n):[]};return t&&(o.redirectedFrom=Yi(t,i)),Object.freeze(o)}function qi(n){if(Array.isArray(n))return n.map(qi);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=qi(n[t]);return e}return n}var Vi=Ui(null,{path:"/"});function Wi(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Yi(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var i=n.hash;return void 0===i&&(i=""),(t||"/")+(e||Ni)(r)+i}function Ji(n,e,t){return e===Vi?n===e:!!e&&(n.path&&e.path?n.path.replace(Fi,"")===e.path.replace(Fi,"")&&(t||n.hash===e.hash&&Zi(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&Zi(n.query,e.query)&&Zi(n.params,e.params))))}function Zi(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,i){var a=n[t];if(r[i]!==t)return!1;var o=e[t];return null==a||null==o?a===o:"object"==typeof a&&"object"==typeof o?Zi(a,o):String(a)===String(o)}))}function Ki(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var i=t.instances[r],a=t.enteredCbs[r];if(i&&a){delete t.enteredCbs[r];for(var o=0;o<a.length;o++)i._isBeingDestroyed||a[o](i)}}}}var Xi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,i=e.parent,a=e.data;a.routerView=!0;for(var o=i.$createElement,s=t.name,c=i.$route,l=i._routerViewCache||(i._routerViewCache={}),u=0,d=!1;i&&i._routerRoot!==i;){var p=i.$vnode?i.$vnode.data:{};p.routerView&&u++,p.keepAlive&&i._directInactive&&i._inactive&&(d=!0),i=i.$parent}if(a.routerViewDepth=u,d){var h=l[s],m=h&&h.component;return m?(h.configProps&&Qi(m,a,h.route,h.configProps),o(m,a,r)):o()}var g=c.matched[u],f=g&&g.components[s];if(!g||!f)return l[s]=null,o();l[s]={component:f},a.registerRouteInstance=function(n,e){var t=g.instances[s];(e&&t!==n||!e&&t===n)&&(g.instances[s]=e)},(a.hook||(a.hook={})).prepatch=function(n,e){g.instances[s]=e.componentInstance},a.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[s]&&(g.instances[s]=n.componentInstance),Ki(c)};var v=g.props&&g.props[s];return v&&(Gi(l[s],{route:c,configProps:v}),Qi(f,a,c,v)),o(f,a,r)}};function Qi(n,e,t,r){var i=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(i){i=e.props=Gi({},i);var a=e.attrs=e.attrs||{};for(var o in i)n.props&&o in n.props||(a[o]=i[o],delete i[o])}}function na(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var i=e.split("/");t&&i[i.length-1]||i.pop();for(var a=n.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function ea(n){return n.replace(/\/+/g,"/")}var ta=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ra=va,ia=la,aa=function(n,e){return da(la(n,e),e)},oa=da,sa=fa,ca=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function la(n,e){for(var t,r=[],i=0,a=0,o="",s=e&&e.delimiter||"/";null!=(t=ca.exec(n));){var c=t[0],l=t[1],u=t.index;if(o+=n.slice(a,u),a=u+c.length,l)o+=l[1];else{var d=n[a],p=t[2],h=t[3],m=t[4],g=t[5],f=t[6],v=t[7];o&&(r.push(o),o="");var b=null!=p&&null!=d&&d!==p,y="+"===f||"*"===f,x="?"===f||"*"===f,k=t[2]||s,w=m||g;r.push({name:h||i++,prefix:p||"",delimiter:k,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:w?ha(w):v?".*":"[^"+pa(k)+"]+?"})}}return a<n.length&&(o+=n.substr(a)),o&&r.push(o),r}function ua(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function da(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",ga(e)));return function(e,r){for(var i="",a=e||{},o=(r||{}).pretty?ua:encodeURIComponent,s=0;s<n.length;s++){var c=n[s];if("string"!=typeof c){var l,u=a[c.name];if(null==u){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(ta(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(l=o(u[d]),!t[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");i+=(0===d?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(u),!t[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');i+=c.prefix+l}}else i+=c}return i}}function pa(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function ha(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function ma(n,e){return n.keys=e,n}function ga(n){return n&&n.sensitive?"":"i"}function fa(n,e,t){ta(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,i=!1!==t.end,a="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)a+=pa(s);else{var c=pa(s.prefix),l="(?:"+s.pattern+")";e.push(s),s.repeat&&(l+="(?:"+c+l+")*"),a+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=pa(t.delimiter||"/"),d=a.slice(-u.length)===u;return r||(a=(d?a.slice(0,-u.length):a)+"(?:"+u+"(?=$))?"),a+=i?"$":r&&d?"":"(?="+u+"|$)",ma(new RegExp("^"+a,ga(t)),e)}function va(n,e,t){return ta(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return ma(n,e)}(n,e):ta(n)?function(n,e,t){for(var r=[],i=0;i<n.length;i++)r.push(va(n[i],e,t).source);return ma(new RegExp("(?:"+r.join("|")+")",ga(t)),e)}(n,e,t):function(n,e,t){return fa(la(n,t),e,t)}(n,e,t)}ra.parse=ia,ra.compile=aa,ra.tokensToFunction=oa,ra.tokensToRegExp=sa;var ba=Object.create(null);function ya(n,e,t){e=e||{};try{var r=ba[n]||(ba[n]=ra.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function xa(n,e,t,r){var i="string"==typeof n?{path:n}:n;if(i._normalized)return i;if(i.name){var a=(i=Gi({},n)).params;return a&&"object"==typeof a&&(i.params=Gi({},a)),i}if(!i.path&&i.params&&e){(i=Gi({},i))._normalized=!0;var o=Gi(Gi({},e.params),i.params);if(e.name)i.name=e.name,i.params=o;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;i.path=ya(s,o,e.path)}else 0;return i}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var i=n.indexOf("?");return i>=0&&(t=n.slice(i+1),n=n.slice(0,i)),{path:n,query:t,hash:e}}(i.path||""),l=e&&e.path||"/",u=c.path?na(c.path,l,t||i.append):l,d=function(n,e,t){void 0===e&&(e={});var r,i=t||Ri;try{r=i(n||"")}catch(n){r={}}for(var a in e){var o=e[a];r[a]=Array.isArray(o)?o.map(Mi):Mi(o)}return r}(c.query,i.query,r&&r.options.parseQuery),p=i.hash||c.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:u,query:d,hash:p}}var ka,wa=function(){},Ea={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,i=t.resolve(this.to,r,this.append),a=i.location,o=i.route,s=i.href,c={},l=t.options.linkActiveClass,u=t.options.linkExactActiveClass,d=null==l?"router-link-active":l,p=null==u?"router-link-exact-active":u,h=null==this.activeClass?d:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,g=o.redirectedFrom?Ui(null,xa(o.redirectedFrom),null,t):o;c[m]=Ji(r,g,this.exactPath),c[h]=this.exact||this.exactPath?c[m]:function(n,e){return 0===n.path.replace(Fi,"/").indexOf(e.path.replace(Fi,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,g);var f=c[m]?this.ariaCurrentValue:null,v=function(n){Aa(n)&&(e.replace?t.replace(a,wa):t.push(a,wa))},b={click:Aa};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:c},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:v,isActive:c[h],isExactActive:c[m]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":f};else{var k=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var w=k.data=Gi({},k.data);for(var E in w.on=w.on||{},w.on){var A=w.on[E];E in b&&(w.on[E]=Array.isArray(A)?A:[A])}for(var _ in b)_ in w.on?w.on[_].push(b[_]):w.on[_]=v;var T=k.data.attrs=Gi({},k.data.attrs);T.href=s,T["aria-current"]=f}else y.on=b}return n(this.tag,y,this.$slots.default)}};function Aa(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var _a="undefined"!=typeof window;function Ta(n,e,t,r,i){var a=e||[],o=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,i,a,o){var s=i.path,c=i.name;0;var l=i.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ea(e.path+"/"+n)}(s,a,l.strict);"boolean"==typeof i.caseSensitive&&(l.sensitive=i.caseSensitive);var d={path:u,regex:ja(u,l),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:c,parent:a,matchAs:o,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var a=o?ea(o+"/"+i.path):void 0;n(e,t,r,i,d,a)}));t[d.path]||(e.push(d.path),t[d.path]=d);if(void 0!==i.alias)for(var p=Array.isArray(i.alias)?i.alias:[i.alias],h=0;h<p.length;++h){0;var m={path:p[h],children:i.children};n(e,t,r,m,a,d.path||"/")}c&&(r[c]||(r[c]=d))}(a,o,s,n,i)}));for(var c=0,l=a.length;c<l;c++)"*"===a[c]&&(a.push(a.splice(c,1)[0]),l--,c--);return{pathList:a,pathMap:o,nameMap:s}}function ja(n,e){return ra(n,[],e)}function Sa(n,e){var t=Ta(n),r=t.pathList,i=t.pathMap,a=t.nameMap;function o(n,t,o){var s=xa(n,t,!1,e),l=s.name;if(l){var u=a[l];if(!u)return c(null,s);var d=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=ya(u.path,s.params),c(u,s,o)}if(s.path){s.params={};for(var h=0;h<r.length;h++){var m=r[h],g=i[m];if(Ca(g.regex,s.path,s.params))return c(g,s,o)}}return c(null,s)}function s(n,t){var r=n.redirect,i="function"==typeof r?r(Ui(n,t,null,e)):r;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return c(null,t);var s=i,l=s.name,u=s.path,d=t.query,p=t.hash,h=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,l){a[l];return o({_normalized:!0,name:l,query:d,hash:p,params:h},void 0,t)}if(u){var m=function(n,e){return na(n,e.parent?e.parent.path:"/",!0)}(u,n);return o({_normalized:!0,path:ya(m,h),query:d,hash:p},void 0,t)}return c(null,t)}function c(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=o({_normalized:!0,path:ya(t,e.params)});if(r){var i=r.matched,a=i[i.length-1];return e.params=r.params,c(a,e)}return c(null,e)}(0,t,n.matchAs):Ui(n,t,r,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?a[n]:void 0;Ta([e||n],r,i,a,t),t&&t.alias.length&&Ta(t.alias.map((function(n){return{path:n,children:[e]}})),r,i,a,t)},getRoutes:function(){return r.map((function(n){return i[n]}))},addRoutes:function(n){Ta(n,r,i,a)}}}function Ca(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var i=1,a=r.length;i<a;++i){var o=n.keys[i-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[i]?Hi(r[i]):r[i])}return!0}var $a=_a&&window.performance&&window.performance.now?window.performance:Date;function Ia(){return $a.now().toFixed(3)}var za=Ia();function Oa(){return za}function Ga(n){return za=n}var Da=Object.create(null);function Ba(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=Gi({},window.history.state);return t.key=Oa(),window.history.replaceState(t,"",e),window.addEventListener("popstate",Ha),function(){window.removeEventListener("popstate",Ha)}}function Pa(n,e,t,r){if(n.app){var i=n.options.scrollBehavior;i&&n.app.$nextTick((function(){var a=function(){var n=Oa();if(n)return Da[n]}(),o=i.call(n,e,t,r?a:null);o&&("function"==typeof o.then?o.then((function(n){Ua(n,a)})).catch((function(n){0})):Ua(o,a))}))}}function La(){var n=Oa();n&&(Da[n]={x:window.pageXOffset,y:window.pageYOffset})}function Ha(n){La(),n.state&&n.state.key&&Ga(n.state.key)}function Ma(n){return Na(n.x)||Na(n.y)}function Ra(n){return{x:Na(n.x)?n.x:window.pageXOffset,y:Na(n.y)?n.y:window.pageYOffset}}function Na(n){return"number"==typeof n}var Fa=/^#\d/;function Ua(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var i=Fa.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(i){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(i,a={x:Na((t=a).x)?t.x:0,y:Na(t.y)?t.y:0})}else Ma(n)&&(e=Ra(n))}else r&&Ma(n)&&(e=Ra(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var qa,Va=_a&&((-1===(qa=window.navigator.userAgent).indexOf("Android 2.")&&-1===qa.indexOf("Android 4.0")||-1===qa.indexOf("Mobile Safari")||-1!==qa.indexOf("Chrome")||-1!==qa.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Wa(n,e){La();var t=window.history;try{if(e){var r=Gi({},t.state);r.key=Oa(),t.replaceState(r,"",n)}else t.pushState({key:Ga(Ia())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Ya(n){Wa(n,!0)}function Ja(n,e,t){var r=function(i){i>=n.length?t():n[i]?e(n[i],(function(){r(i+1)})):r(i+1)};r(0)}var Za={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ka(n,e){return Qa(n,e,Za.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return no.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function Xa(n,e){return Qa(n,e,Za.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Qa(n,e,t,r){var i=new Error(r);return i._isRouter=!0,i.from=n,i.to=e,i.type=t,i}var no=["params","query","hash"];function eo(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function to(n,e){return eo(n)&&n._isRouter&&(null==e||n.type===e)}function ro(n){return function(e,t,r){var i=!1,a=0,o=null;io(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){i=!0,a++;var c,l=so((function(e){var i;((i=e).__esModule||oo&&"Module"===i[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:ka.extend(e),t.components[s]=e,--a<=0&&r()})),u=so((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=eo(n)?n:new Error(e),r(o))}));try{c=n(l,u)}catch(n){u(n)}if(c)if("function"==typeof c.then)c.then(l,u);else{var d=c.component;d&&"function"==typeof d.then&&d.then(l,u)}}})),i||r()}}function io(n,e){return ao(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function ao(n){return Array.prototype.concat.apply([],n)}var oo="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function so(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var co=function(n,e){this.router=n,this.base=function(n){if(!n)if(_a){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Vi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function lo(n,e,t,r){var i=io(n,(function(n,r,i,a){var o=function(n,e){"function"!=typeof n&&(n=ka.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,r,i,a)})):t(o,r,i,a)}));return ao(r?i.reverse():i)}function uo(n,e){if(e)return function(){return n.apply(e,arguments)}}co.prototype.listen=function(n){this.cb=n},co.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},co.prototype.onError=function(n){this.errorCbs.push(n)},co.prototype.transitionTo=function(n,e,t){var r,i=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(r,(function(){i.updateRoute(r),e&&e(r),i.ensureURL(),i.router.afterHooks.forEach((function(n){n&&n(r,a)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!i.ready&&(to(n,Za.redirected)&&a===Vi||(i.ready=!0,i.readyErrorCbs.forEach((function(e){e(n)}))))}))},co.prototype.confirmTransition=function(n,e,t){var r=this,i=this.current;this.pending=n;var a,o,s=function(n){!to(n)&&eo(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},c=n.matched.length-1,l=i.matched.length-1;if(Ji(n,i)&&c===l&&n.matched[c]===i.matched[l])return this.ensureURL(),n.hash&&Pa(this.router,i,n,!1),s(((o=Qa(a=i,n,Za.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",o));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),d=u.updated,p=u.deactivated,h=u.activated,m=[].concat(function(n){return lo(n,"beforeRouteLeave",uo,!0)}(p),this.router.beforeHooks,function(n){return lo(n,"beforeRouteUpdate",uo)}(d),h.map((function(n){return n.beforeEnter})),ro(h)),g=function(e,t){if(r.pending!==n)return s(Xa(i,n));try{e(n,i,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return Qa(n,e,Za.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(i,n))):eo(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(Ka(i,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};Ja(m,g,(function(){Ja(function(n){return lo(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,i,a){return n(r,i,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,r)}))}(h).concat(r.router.resolveHooks),g,(function(){if(r.pending!==n)return s(Xa(i,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){Ki(n)}))}))}))},co.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},co.prototype.setupListeners=function(){},co.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Vi,this.pending=null};var po=function(n){function e(e,t){n.call(this,e,t),this._startLocation=ho(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=Va&&t;r&&this.listeners.push(Ba());var i=function(){var t=n.current,i=ho(n.base);n.current===Vi&&i===n._startLocation||n.transitionTo(i,(function(n){r&&Pa(e,n,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){Wa(ea(r.base+n.fullPath)),Pa(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){Ya(ea(r.base+n.fullPath)),Pa(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(ho(this.base)!==this.current.fullPath){var e=ea(this.base+this.current.fullPath);n?Wa(e):Ya(e)}},e.prototype.getCurrentLocation=function(){return ho(this.base)},e}(co);function ho(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(ea(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var mo=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=ho(n);if(!/^\/#/.test(e))return window.location.replace(ea(n+"/#"+e)),!0}(this.base)||go()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=Va&&e;t&&this.listeners.push(Ba());var r=function(){var e=n.current;go()&&n.transitionTo(fo(),(function(r){t&&Pa(n.router,r,e,!0),Va||yo(r.fullPath)}))},i=Va?"popstate":"hashchange";window.addEventListener(i,r),this.listeners.push((function(){window.removeEventListener(i,r)}))}},e.prototype.push=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){bo(n.fullPath),Pa(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){yo(n.fullPath),Pa(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;fo()!==e&&(n?bo(e):yo(e))},e.prototype.getCurrentLocation=function(){return fo()},e}(co);function go(){var n=fo();return"/"===n.charAt(0)||(yo("/"+n),!1)}function fo(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function vo(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function bo(n){Va?Wa(vo(n)):window.location.hash=n}function yo(n){Va?Ya(vo(n)):window.location.replace(vo(n))}var xo=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){to(n,Za.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(co),ko=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Sa(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!Va&&!1!==n.fallback,this.fallback&&(e="hash"),_a||(e="abstract"),this.mode=e,e){case"history":this.history=new po(this,n.base);break;case"hash":this.history=new mo(this,n.base,this.fallback);break;case"abstract":this.history=new xo(this,n.base);break;default:0}},wo={currentRoute:{configurable:!0}};function Eo(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}ko.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},wo.currentRoute.get=function(){return this.history&&this.history.current},ko.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof po||t instanceof mo){var r=function(n){t.setupListeners(),function(n){var r=t.current,i=e.options.scrollBehavior;Va&&i&&"fullPath"in n&&Pa(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},ko.prototype.beforeEach=function(n){return Eo(this.beforeHooks,n)},ko.prototype.beforeResolve=function(n){return Eo(this.resolveHooks,n)},ko.prototype.afterEach=function(n){return Eo(this.afterHooks,n)},ko.prototype.onReady=function(n,e){this.history.onReady(n,e)},ko.prototype.onError=function(n){this.history.onError(n)},ko.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},ko.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},ko.prototype.go=function(n){this.history.go(n)},ko.prototype.back=function(){this.go(-1)},ko.prototype.forward=function(){this.go(1)},ko.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},ko.prototype.resolve=function(n,e,t){var r=xa(n,e=e||this.history.current,t,this),i=this.match(r,e),a=i.redirectedFrom||i.fullPath;return{location:r,route:i,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?ea(n+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:i}},ko.prototype.getRoutes=function(){return this.matcher.getRoutes()},ko.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==Vi&&this.history.transitionTo(this.history.getCurrentLocation())},ko.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Vi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ko.prototype,wo),ko.install=function n(e){if(!n.installed||ka!==e){n.installed=!0,ka=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",Xi),e.component("RouterLink",Ea);var i=e.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},ko.version="3.5.3",ko.isNavigationFailure=to,ko.NavigationFailureType=Za,ko.START_LOCATION=Vi,_a&&window.Vue&&window.Vue.use(ko);var Ao=ko;t(231),t(179),t(264),t(105),t(266),t(36),t(37),t(267);function _o(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}t(81),t(94),t(126);function To(n){return(To="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var jo=t(75),So=(t(191),t(18),t(44),t(234),t(235),t(40),t(26),{NotFound:function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,495))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,494))}}),Co={"v-56f70e5a":function(){return t.e(6).then(t.bind(null,497))},"v-79658578":function(){return t.e(7).then(t.bind(null,498))},"v-635bdaa6":function(){return t.e(8).then(t.bind(null,499))},"v-a74a57ce":function(){return t.e(9).then(t.bind(null,500))},"v-3efc1ed4":function(){return t.e(10).then(t.bind(null,501))},"v-cfc173e0":function(){return t.e(11).then(t.bind(null,502))},"v-3b35692c":function(){return t.e(12).then(t.bind(null,503))},"v-2343a26e":function(){return t.e(13).then(t.bind(null,504))},"v-178901a6":function(){return t.e(14).then(t.bind(null,505))},"v-759bdef2":function(){return t.e(15).then(t.bind(null,506))},"v-784ff23a":function(){return t.e(16).then(t.bind(null,507))},"v-2deaaf56":function(){return t.e(17).then(t.bind(null,508))},"v-a713734c":function(){return t.e(18).then(t.bind(null,509))},"v-42c32c1c":function(){return t.e(19).then(t.bind(null,510))},"v-2d73f679":function(){return t.e(20).then(t.bind(null,511))},"v-d9a518f6":function(){return t.e(21).then(t.bind(null,512))},"v-5736fc35":function(){return t.e(22).then(t.bind(null,513))},"v-fa1b9a8a":function(){return t.e(23).then(t.bind(null,514))},"v-62d2e41f":function(){return t.e(24).then(t.bind(null,515))},"v-6850f8b0":function(){return t.e(25).then(t.bind(null,516))},"v-6a148190":function(){return t.e(26).then(t.bind(null,517))},"v-d2c868d8":function(){return t.e(27).then(t.bind(null,518))},"v-00e97d86":function(){return t.e(28).then(t.bind(null,519))},"v-6d272db9":function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,520))},"v-6668036c":function(){return t.e(29).then(t.bind(null,521))},"v-7ea387ea":function(){return t.e(30).then(t.bind(null,522))},"v-410ae0dc":function(){return t.e(31).then(t.bind(null,523))},"v-a09d3836":function(){return t.e(32).then(t.bind(null,524))},"v-cb42fa62":function(){return t.e(33).then(t.bind(null,525))},"v-068a4279":function(){return t.e(34).then(t.bind(null,526))},"v-f9b062a0":function(){return t.e(35).then(t.bind(null,527))},"v-3c49c683":function(){return t.e(36).then(t.bind(null,528))},"v-0356b071":function(){return t.e(37).then(t.bind(null,529))},"v-27cd55da":function(){return t.e(38).then(t.bind(null,530))},"v-e67dc632":function(){return t.e(39).then(t.bind(null,531))},"v-4e603eaa":function(){return t.e(40).then(t.bind(null,532))},"v-346aebdf":function(){return t.e(41).then(t.bind(null,533))},"v-7d6f7b6e":function(){return t.e(42).then(t.bind(null,496))},"v-53104ef6":function(){return t.e(44).then(t.bind(null,534))},"v-2a378a94":function(){return t.e(43).then(t.bind(null,535))},"v-1a9d53e5":function(){return t.e(45).then(t.bind(null,536))},"v-150b83f6":function(){return t.e(46).then(t.bind(null,537))},"v-95c08fd2":function(){return t.e(47).then(t.bind(null,538))},"v-77761d97":function(){return t.e(48).then(t.bind(null,539))},"v-a113e2c4":function(){return t.e(49).then(t.bind(null,540))},"v-5663e71d":function(){return t.e(50).then(t.bind(null,541))},"v-05714acb":function(){return t.e(51).then(t.bind(null,542))},"v-9c92ccb8":function(){return t.e(52).then(t.bind(null,543))},"v-95bf8eac":function(){return t.e(53).then(t.bind(null,544))},"v-dcde98f2":function(){return t.e(54).then(t.bind(null,545))},"v-3a58e5af":function(){return t.e(55).then(t.bind(null,546))},"v-1191ec14":function(){return t.e(56).then(t.bind(null,547))},"v-4067c8ac":function(){return t.e(57).then(t.bind(null,548))},"v-7ec0cbb8":function(){return t.e(58).then(t.bind(null,549))},"v-6ee24692":function(){return t.e(59).then(t.bind(null,550))},"v-5424fbce":function(){return t.e(60).then(t.bind(null,551))},"v-60ed664a":function(){return t.e(61).then(t.bind(null,552))},"v-03a9a258":function(){return t.e(62).then(t.bind(null,553))},"v-a682effa":function(){return t.e(63).then(t.bind(null,554))}};function $o(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var Io=/-(\w)/g,zo=$o((function(n){return n.replace(Io,(function(n,e){return e?e.toUpperCase():""}))})),Oo=/\B([A-Z])/g,Go=$o((function(n){return n.replace(Oo,"-$1").toLowerCase()})),Do=$o((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function Bo(n,e){if(e)return n(e)?n(e):e.includes("-")?n(Do(zo(e))):n(Do(e))||n(Go(e))}var Po=Object.assign({},So,Co),Lo=function(n){return Po[n]},Ho=function(n){return Co[n]},Mo=function(n){return So[n]},Ro=function(n){return Oi.component(n)};function No(n){return Bo(Ho,n)}function Fo(n){return Bo(Mo,n)}function Uo(n){return Bo(Lo,n)}function qo(n){return Bo(Ro,n)}function Vo(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(qo(e)||!Uo(e)){n.next=5;break}return n.next=3,Uo(e)();case 3:t=n.sent,Oi.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function Wo(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var Yo=t(137),Jo=(t(125),t(112),t(77),t(222)),Zo=t.n(Jo),Ko=t(223),Xo=t.n(Ko),Qo={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Yo.a)(n,1)[0]})).map((function(n){var e=Object(Yo.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(Xo()(n[t]),'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=es(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(jo.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=ts(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Zo()([{name:"description",content:this.$description}],n,this.siteMeta,rs)},updateCanonicalLink:function(){ns(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",es(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){ts(null,this.currentMetaTags),ns()}};function ns(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function es(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function ts(n,e){if(e&&Object(jo.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function rs(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(138);var is=t(152),as={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(is)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+r,o=0;o<t.length;o++){var s=t[o],c=t[o+1],l=0===o&&0===r||r>=s.parentElement.offsetTop+10&&(!c||r<c.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(l&&u!==decodeURIComponent(s.hash)){var d=s;if(a===i)for(var p=o+1;p<t.length;p++)if(u===decodeURIComponent(t[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},os=(t(108),t(102)),ss=t.n(os),cs={mounted:function(){var n=this;ss.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||Oi.component(n.name)||ss.a.start(),t()})),this.$router.afterEach((function(){ss.a.done(),n.isSidebarOpen=!1}))}};t(79),t(78),t(82),t(381);function ls(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(142);function us(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function ds(n,e,t){return e&&us(n.prototype,e),t&&us(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(382);var ps=function(){function n(){ls(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return ds(n,[{key:"show",value:function(n){var e=this,t=n.text,r=void 0===t?"":t,i=n.duration,a=void 0===i?3e3:i,o=document.createElement("div");o.className="message move-in",o.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(r,"</div>\n    "),this.containerEl.appendChild(o),a>0&&setTimeout((function(){e.close(o)}),a)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}(),hs={mounted:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new ps).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};t(237),t(103),t(104),t(139),t(384);!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===t&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=n:i.appendChild(document.createTextNode(n))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var ms={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},gs={},fs=function(n){return'<div id="app">\n'.concat(n,"\n</div>")},vs=function(n){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[n]?window.$VUEPRESS_DEMO_BLOCK[n]:ms[n]},bs=function n(e,t,r){var i=document.createElement(e);return t&&Object.keys(t).forEach((function(n){if(n.indexOf("data"))i[n]=t[n];else{var e=n.replace("data","");i.dataset[e]=t[n]}})),r&&r.forEach((function(e){var t=e.tag,r=e.attrs,a=e.children;i.appendChild(n(t,r,a))})),i},ys=function(n,e,t){var r,i=(r=n.querySelectorAll(".".concat(e)),Array.prototype.slice.call(r));return 1!==i.length||t?i:i[0]},xs=function(n,e){var t,r,i=n.match(/<style>([\s\S]+)<\/style>/),a=n.match(/<template>([\s\S]+)<\/template>/),o=n.match(/<script>([\s\S]+)<\/script>/),s={css:i&&i[1].replace(/^\n|\n$/g,""),html:a&&a[1].replace(/^\n|\n$/g,""),js:o&&o[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};s.htmlTpl=fs(s.html),s.jsTpl=(t=s.js,r=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(r,"\n})")),s.script=function(n,e){var t=n.split(/export\s+default/),r="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),i=window.Babel?window.Babel.transform(r,{presets:["es2015"]}).code:r,a=[eval][0](i);return a.template=e,a}(s.js,s.html);var c=vs("vue");return s.jsLib.unshift(c),s},ks=function(n,e){var t,r=n.match(/<style>([\s\S]+)<\/style>/),i=n.match(/<html>([\s\S]+)<\/html>/),a=n.match(/<script>([\s\S]+)<\/script>/),o={css:r&&r[1].replace(/^\n|\n$/g,""),html:i&&i[1].replace(/^\n|\n$/g,""),js:a&&a[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};return o.htmlTpl=o.html,o.jsTpl=o.js,o.script=(t=o.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),o},ws=function(n){return n=n.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),n+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function Es(){var n=ys(document,"vuepress-plugin-demo-block__wrapper",!0);n.length?n.forEach((function(n){if("true"!==n.dataset.created){n.style.display="block";var e=ys(n,"vuepress-plugin-demo-block__code"),t=ys(n,"vuepress-plugin-demo-block__display"),r=ys(n,"vuepress-plugin-demo-block__footer"),i=ys(t,"vuepress-plugin-demo-block__app"),a=decodeURIComponent(n.dataset.code),o=decodeURIComponent(n.dataset.config),s=decodeURIComponent(n.dataset.type);o=o?JSON.parse(o):{};var c=e.querySelector("div").clientHeight,l="react"===s?function(n,e){var t=(0,window.Babel.transform)(n,{presets:["es2015","react"]}).code,r="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),i=new Function("return ".concat(r))(),a={js:i,css:i.__style__||"",jsLib:e.jsLib||[],cssLib:e.cssLib||[],jsTpl:ws(n),htmlTpl:fs("")},o=vs("react"),s=vs("reactDOM");return a.jsLib.unshift(o,s),a}(a,o):"vanilla"===s?ks(a,o):xs(a,o),u=bs("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(r.appendChild(u),u.addEventListener("click",As.bind(null,u,c,e,r)),vs("jsfiddle")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,i=n.jsLib,a=n.cssLib,o=i.concat(a).concat(vs("cssLib")).concat(vs("jsLib")).join(",");return bs("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:e}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:r}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:o}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(l)),vs("codepen")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,i=n.jsLib,a=n.cssLib,o=JSON.stringify({css:e,html:t,js:r,js_external:i.concat(vs("jsLib")).join(";"),css_external:a.concat(vs("cssLib")).join(";"),layout:vs("codepenLayout"),js_pre_processor:vs("codepenJsProcessor"),editors:vs("codepenEditors")});return bs("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:o}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(l)),void 0!==o.horizontal?o.horizontal:vs("horizontal")){n.classList.add("vuepress-plugin-demo-block__horizontal");var d=e.firstChild.cloneNode(!0);d.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(d)}if(l.css&&function(n){if(!gs[n]){var e=bs("style",{innerHTML:n});document.body.appendChild(e),gs[n]=!0}}(l.css),"react"===s)ReactDOM.render(React.createElement(l.js),i);else if("vue"===s){var p=(new(Vue.extend(l.script))).$mount();i.appendChild(p.$el)}else"vanilla"===s&&(i.innerHTML=l.html,new Function("return (function(){".concat(l.script,"})()"))());n.dataset.created="true"}})):setTimeout((function(n){Es()}),300)}function As(n,e,t,r){var i="1"!==n.dataset.isExpand;t.style.height=i?"".concat(e,"px"):0,i?r.classList.add("vuepress-plugin-demo-block__show-link"):r.classList.remove("vuepress-plugin-demo-block__show-link"),n.dataset.isExpand=i?"1":"0"}var _s={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},Es()},updated:function(){Es()}},Ts=(t(226),"auto"),js="zoom-in",Ss="zoom-out",Cs="grab",$s="move";function Is(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i={passive:!1};r?n.addEventListener(e,t,i):n.removeEventListener(e,t,i)}function zs(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Os(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Gs(n,e,t){!function(n){var e=Ds,t=Bs;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var i=n.transform;delete n.transform,n[t]=i}}(e);var r=n.style,i={};for(var a in e)t&&(i[a]=r[a]||""),r[a]=e[a];return i}var Ds="transition",Bs="transform",Ps="transform",Ls="transitionend";var Hs=function(){},Ms={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Hs,onClose:Hs,onGrab:Hs,onMove:Hs,onRelease:Hs,onBeforeOpen:Hs,onBeforeClose:Hs,onBeforeGrab:Hs,onBeforeRelease:Hs,onImageLoading:Hs,onImageLoaded:Hs},Rs={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Fs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,i=this.lastScrollPosition.y-t,a=this.options.scrollThreshold;(Math.abs(i)>=a||Math.abs(r)>=a)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Ns(n)&&!Fs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Ns(n)&&!Fs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Ns(n){return 0===n.button}function Fs(n){return n.metaKey||n.ctrlKey}var Us={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Gs(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Is(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Gs(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},qs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Vs=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Ws=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Ys={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Os(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,i=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Cs:Ss,transition:Ps+"\n        "+r+"s\n        "+i,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Gs(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Gs(this.el,{transform:"none"})},grab:function(n,e,t){var r=Js(),i=r.x-n,a=r.y-e;Gs(this.el,{cursor:$s,transform:"translate3d(\n        "+(this.translate.x+i)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Js(),i=r.x-n,a=r.y-e;Gs(this.el,{transition:Ps,transform:"translate3d(\n        "+(this.translate.x+i)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Gs(this.el,this.styleClose)},restoreOpenStyle:function(){Gs(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Js(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,i=r.customSize,a=r.scaleBase;if(!i&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(i&&"object"===(void 0===i?"undefined":qs(i)))return{x:i.width/this.rect.width,y:i.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,c=Js(),l={x:c.x-o,y:c.y-s},u=l.x/o,d=l.y/s,p=a+Math.min(u,d);if(i&&"string"==typeof i){var h=t||this.el.naturalWidth,m=e||this.el.naturalHeight,g=parseFloat(i)*h/(100*this.rect.width),f=parseFloat(i)*m/(100*this.rect.height);if(p>g||p>f)return{x:g,y:f}}return{x:p,y:p}}};function Js(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Zs(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Is(n,r,e[r],t)}))}var Ks=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Ys),this.overlay=Object.create(Us),this.handler=Object.create(Rs),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Ws({},Ms,e),this.overlay.init(this),this.handler.init(this)}return Vs(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=js,Is(n,"click",this.handler.click),this.options.preloadImage&&zs(Os(n)));return this}},{key:"config",value:function(n){return n?(Ws(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var i=this.target.srcOriginal;null!=i&&(this.options.onImageLoading(r),zs(i,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Is(document,"scroll",this.handler.scroll),Is(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Is(window,"resize",this.handler.resizeWindow);var a=function n(){Is(r,Ls,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Zs(document,e.handler,!0),t(r)};return Is(r,Ls,a),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ts,this.overlay.fadeOut(),this.target.zoomOut(),Is(document,"scroll",this.handler.scroll,!1),Is(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Is(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Is(t,Ls,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Zs(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Is(t,Ls,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var i=this.target.el;this.options.onBeforeGrab(i),this.released=!1,this.target.grab(n,e,t);var a=function n(){Is(i,Ls,n,!1),r(i)};return Is(i,Ls,a),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=$s,this.target.move(n,e,t);var i=this.target.el,a=function n(){Is(i,Ls,n,!1),r(i)};return Is(i,Ls,a),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ts,this.target.restoreOpenStyle();var r=function r(){Is(t,Ls,r,!1),n.lock=!1,n.released=!0,e(t)};return Is(t,Ls,r),this}}}]),n}(),Xs=".theme-vdoing-content img:not(.no-zoom)",Qs=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),nc=Number("500"),ec=function(){function n(){ls(this,n),this.instance=new Ks(Qs)}return ds(n,[{key:"update",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xs;"undefined"!=typeof window&&this.instance.listen(n)}},{key:"updateDelay",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xs,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:nc;setTimeout((function(){return n.update(e)}),t)}}]),n}(),tc=[Qo,as,cs,hs,_s,{watch:{"$page.path":function(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted:function(){this.$vuepress.zooming=new ec,this.$vuepress.zooming.updateDelay()}}],rc={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Wo("layout",n),Oi.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},ic=t(30),ac=Object(ic.a)(rc,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(jo.a)(t));break;default:throw new Error("Unknown option name.")}}(ac,"mixins",tc);var oc=[{name:"v-56f70e5a",path:"/backend/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-56f70e5a").then(t)}},{path:"/backend/index.html",redirect:"/backend/"},{path:"/00.目录页/01.后端.html",redirect:"/backend/"},{name:"v-79658578",path:"/acm/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-79658578").then(t)}},{path:"/acm/index.html",redirect:"/acm/"},{path:"/00.目录页/02.算法.html",redirect:"/acm/"},{name:"v-635bdaa6",path:"/technology/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-635bdaa6").then(t)}},{path:"/technology/index.html",redirect:"/technology/"},{path:"/00.目录页/03.技术.html",redirect:"/technology/"},{name:"v-a74a57ce",path:"/more/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-a74a57ce").then(t)}},{path:"/more/index.html",redirect:"/more/"},{path:"/00.目录页/04.更多.html",redirect:"/more/"},{name:"v-3efc1ed4",path:"/solution/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-3efc1ed4").then(t)}},{path:"/solution/index.html",redirect:"/solution/"},{path:"/00.目录页/05.题解.html",redirect:"/solution/"},{name:"v-cfc173e0",path:"/pages/a61298/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-cfc173e0").then(t)}},{path:"/pages/a61298/index.html",redirect:"/pages/a61298/"},{path:"/01.后端/25.Java文章/10.toString()、String valueOf、(String)强转区别.html",redirect:"/pages/a61298/"},{name:"v-3b35692c",path:"/pages/56cd49/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-3b35692c").then(t)}},{path:"/pages/56cd49/index.html",redirect:"/pages/56cd49/"},{path:"/01.后端/30.MySQL/10.like结果包含反斜杠需要替换成四个反斜杠.html",redirect:"/pages/56cd49/"},{name:"v-2343a26e",path:"/pages/83965d/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-2343a26e").then(t)}},{path:"/pages/83965d/index.html",redirect:"/pages/83965d/"},{path:"/01.后端/35.系统设计/30.RESTful API.html",redirect:"/pages/83965d/"},{name:"v-178901a6",path:"/note/git/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-178901a6").then(t)}},{path:"/note/git/index.html",redirect:"/note/git/"},{path:"/01.后端/40.学习笔记/33.《Git》学习笔记.html",redirect:"/note/git/"},{name:"v-759bdef2",path:"/pages/b57980/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-759bdef2").then(t)}},{path:"/pages/b57980/index.html",redirect:"/pages/b57980/"},{path:"/02.算法/25.题解/25.LeetCode 433 最小基因变化 图论 最短路问题.html",redirect:"/pages/b57980/"},{name:"v-784ff23a",path:"/pages/9a7ee40fc232253e/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-784ff23a").then(t)}},{path:"/pages/9a7ee40fc232253e/index.html",redirect:"/pages/9a7ee40fc232253e/"},{path:"/03.技术/01.技术文档/01.Git使用手册.html",redirect:"/pages/9a7ee40fc232253e/"},{name:"v-2deaaf56",path:"/pages/ad247c4332211551/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-2deaaf56").then(t)}},{path:"/pages/ad247c4332211551/index.html",redirect:"/pages/ad247c4332211551/"},{path:"/03.技术/01.技术文档/02.Markdown使用教程.html",redirect:"/pages/ad247c4332211551/"},{name:"v-a713734c",path:"/pages/61f2f95fd7da14fd/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-a713734c").then(t)}},{path:"/pages/61f2f95fd7da14fd/index.html",redirect:"/pages/61f2f95fd7da14fd/"},{path:"/03.技术/01.技术文档/03.npm常用命令.html",redirect:"/pages/61f2f95fd7da14fd/"},{name:"v-42c32c1c",path:"/pages/dec4f3f00e71a312/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-42c32c1c").then(t)}},{path:"/pages/dec4f3f00e71a312/index.html",redirect:"/pages/dec4f3f00e71a312/"},{path:"/03.技术/01.技术文档/10.npm packageJson属性详解.html",redirect:"/pages/dec4f3f00e71a312/"},{name:"v-2d73f679",path:"/pages/4e8444e2d534d14f/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-2d73f679").then(t)}},{path:"/pages/4e8444e2d534d14f/index.html",redirect:"/pages/4e8444e2d534d14f/"},{path:"/03.技术/01.技术文档/15.yaml语言教程.html",redirect:"/pages/4e8444e2d534d14f/"},{name:"v-d9a518f6",path:"/pages/4c778760be26d8b3/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-d9a518f6").then(t)}},{path:"/pages/4c778760be26d8b3/index.html",redirect:"/pages/4c778760be26d8b3/"},{path:"/03.技术/02.GitHub技巧/01.GitHub高级搜索技巧.html",redirect:"/pages/4c778760be26d8b3/"},{name:"v-5736fc35",path:"/pages/6b9d359ec5aa5019/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-5736fc35").then(t)}},{path:"/pages/6b9d359ec5aa5019/index.html",redirect:"/pages/6b9d359ec5aa5019/"},{path:"/03.技术/02.GitHub技巧/02.GitHub Actions 实现自动部署静态博客.html",redirect:"/pages/6b9d359ec5aa5019/"},{name:"v-fa1b9a8a",path:"/pages/f44d2f9ad04ab8d3/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-fa1b9a8a").then(t)}},{path:"/pages/f44d2f9ad04ab8d3/index.html",redirect:"/pages/f44d2f9ad04ab8d3/"},{path:"/03.技术/02.GitHub技巧/03.GitHub Actions 定时运行代码：每天定时百度链接推送.html",redirect:"/pages/f44d2f9ad04ab8d3/"},{name:"v-62d2e41f",path:"/pages/95331c6a9613faf8/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-62d2e41f").then(t)}},{path:"/pages/95331c6a9613faf8/index.html",redirect:"/pages/95331c6a9613faf8/"},{path:"/03.技术/02.GitHub技巧/10.GitHub加速下载项目的方法.html",redirect:"/pages/95331c6a9613faf8/"},{name:"v-6850f8b0",path:"/pages/117708e0af7f0bd9/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-6850f8b0").then(t)}},{path:"/pages/117708e0af7f0bd9/index.html",redirect:"/pages/117708e0af7f0bd9/"},{path:"/03.技术/03.Nodejs/01.nodejs递归读取所有文件.html",redirect:"/pages/117708e0af7f0bd9/"},{name:"v-6a148190",path:"/pages/41f87d890d0a02af/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-6a148190").then(t)}},{path:"/pages/41f87d890d0a02af/index.html",redirect:"/pages/41f87d890d0a02af/"},{path:"/03.技术/04.博客搭建/01.解决百度无法收录搭建在GitHub上的个人博客的问题.html",redirect:"/pages/41f87d890d0a02af/"},{name:"v-d2c868d8",path:"/pages/1da0bf9a988eafe5/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-d2c868d8").then(t)}},{path:"/pages/1da0bf9a988eafe5/index.html",redirect:"/pages/1da0bf9a988eafe5/"},{path:"/03.技术/04.博客搭建/02.使用Gitalk实现静态博客无后台评论系统.html",redirect:"/pages/1da0bf9a988eafe5/"},{name:"v-00e97d86",path:"/pages/a5f73af5185fdf0a/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-00e97d86").then(t)}},{path:"/pages/a5f73af5185fdf0a/index.html",redirect:"/pages/a5f73af5185fdf0a/"},{path:"/03.技术/04.博客搭建/03.GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床.html",redirect:"/pages/a5f73af5185fdf0a/"},{name:"v-6d272db9",path:"/pages/d557b9a89a215d2e/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-6d272db9").then(t)}},{path:"/pages/d557b9a89a215d2e/index.html",redirect:"/pages/d557b9a89a215d2e/"},{path:"/03.技术/04.博客搭建/10.vdoing主题效果图.html",redirect:"/pages/d557b9a89a215d2e/"},{name:"v-6668036c",path:"/pages/f2a556/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-6668036c").then(t)}},{path:"/pages/f2a556/index.html",redirect:"/pages/f2a556/"},{path:"/04.更多/01.学习/00.费曼学习法.html",redirect:"/pages/f2a556/"},{name:"v-7ea387ea",path:"/pages/e60c81/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-7ea387ea").then(t)}},{path:"/pages/e60c81/index.html",redirect:"/pages/e60c81/"},{path:"/04.更多/01.学习/01.笔记方法.html",redirect:"/pages/e60c81/"},{name:"v-410ae0dc",path:"/pages/a8692ab3bdcb4588/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-410ae0dc").then(t)}},{path:"/pages/a8692ab3bdcb4588/index.html",redirect:"/pages/a8692ab3bdcb4588/"},{path:"/04.更多/01.学习/02.提高学习效率的策略.html",redirect:"/pages/a8692ab3bdcb4588/"},{name:"v-a09d3836",path:"/pages/996822b2a2ca6e3b/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-a09d3836").then(t)}},{path:"/pages/996822b2a2ca6e3b/index.html",redirect:"/pages/996822b2a2ca6e3b/"},{path:"/04.更多/01.学习/03.提高记忆的技巧.html",redirect:"/pages/996822b2a2ca6e3b/"},{name:"v-cb42fa62",path:"/pages/c3f302a03c8daf79/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-cb42fa62").then(t)}},{path:"/pages/c3f302a03c8daf79/index.html",redirect:"/pages/c3f302a03c8daf79/"},{path:"/04.更多/01.学习/04.自律小建议.html",redirect:"/pages/c3f302a03c8daf79/"},{name:"v-068a4279",path:"/pages/9ba2b8fb13de1957/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-068a4279").then(t)}},{path:"/pages/9ba2b8fb13de1957/index.html",redirect:"/pages/9ba2b8fb13de1957/"},{path:"/04.更多/01.学习/05.处理问题的思路.html",redirect:"/pages/9ba2b8fb13de1957/"},{name:"v-f9b062a0",path:"/pages/ce818a/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-f9b062a0").then(t)}},{path:"/pages/ce818a/index.html",redirect:"/pages/ce818a/"},{path:"/04.更多/01.学习/10.搜索引擎使用技巧.html",redirect:"/pages/ce818a/"},{name:"v-3c49c683",path:"/pages/aea6571b7a8bae86/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-3c49c683").then(t)}},{path:"/pages/aea6571b7a8bae86/index.html",redirect:"/pages/aea6571b7a8bae86/"},{path:"/04.更多/03.面试/01.面试问题集锦.html",redirect:"/pages/aea6571b7a8bae86/"},{name:"v-0356b071",path:"/pages/2d615df9a36a98ed/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-0356b071").then(t)}},{path:"/pages/2d615df9a36a98ed/index.html",redirect:"/pages/2d615df9a36a98ed/"},{path:"/04.更多/05.心情杂货/01.一个完美主义者的自我救赎.html",redirect:"/pages/2d615df9a36a98ed/"},{name:"v-27cd55da",path:"/pages/d6d331/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-27cd55da").then(t)}},{path:"/pages/d6d331/index.html",redirect:"/pages/d6d331/"},{path:"/04.更多/05.心情杂货/10.反向拆解让人上瘾的套路，找回自律.html",redirect:"/pages/d6d331/"},{name:"v-e67dc632",path:"/pages/baaa02/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-e67dc632").then(t)}},{path:"/pages/baaa02/index.html",redirect:"/pages/baaa02/"},{path:"/04.更多/10.实用技巧/01.2分钟规则.html",redirect:"/pages/baaa02/"},{name:"v-4e603eaa",path:"/pages/dcebaf/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-4e603eaa").then(t)}},{path:"/pages/dcebaf/index.html",redirect:"/pages/dcebaf/"},{path:"/04.更多/10.实用技巧/10.一行代码“黑”掉任意网站.html",redirect:"/pages/dcebaf/"},{name:"v-346aebdf",path:"/friends/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-346aebdf").then(t)}},{path:"/friends/index.html",redirect:"/friends/"},{path:"/04.更多/99.友情链接.html",redirect:"/friends/"},{name:"v-7d6f7b6e",path:"/about/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-7d6f7b6e").then(t)}},{path:"/about/index.html",redirect:"/about/"},{path:"/05.关于/01.关于.html",redirect:"/about/"},{name:"v-53104ef6",path:"/archives/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-53104ef6").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-2a378a94",path:"/pages/beb6c0bd8a66cea6/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-2a378a94").then(t)}},{path:"/pages/beb6c0bd8a66cea6/index.html",redirect:"/pages/beb6c0bd8a66cea6/"},{path:"/06.收藏夹/01.网站.html",redirect:"/pages/beb6c0bd8a66cea6/"},{name:"v-1a9d53e5",path:"/categories/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-1a9d53e5").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-150b83f6",path:"/tags/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-150b83f6").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-95c08fd2",path:"/pages/f2e63f/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-95c08fd2").then(t)}},{path:"/pages/f2e63f/index.html",redirect:"/pages/f2e63f/"},{path:"/_posts/随笔/你知道的越多，不知道的也就越多.html",redirect:"/pages/f2e63f/"},{name:"v-77761d97",path:"/pages/cd8bde/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-77761d97").then(t)}},{path:"/pages/cd8bde/index.html",redirect:"/pages/cd8bde/"},{path:"/_posts/随笔/拥抱生活，拥抱快乐.html",redirect:"/pages/cd8bde/"},{name:"v-a113e2c4",path:"/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-a113e2c4").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-5663e71d",path:"/pages/8292d8/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-5663e71d").then(t)}},{path:"/pages/8292d8/index.html",redirect:"/pages/8292d8/"},{path:"/《Git》学习笔记/10.手册/00.常用Git命令清单.html",redirect:"/pages/8292d8/"},{name:"v-05714acb",path:"/pages/c10281/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-05714acb").then(t)}},{path:"/pages/c10281/index.html",redirect:"/pages/c10281/"},{path:"/《Git》学习笔记/10.手册/03.Git变基合并.html",redirect:"/pages/c10281/"},{name:"v-9c92ccb8",path:"/pages/4cbc21/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-9c92ccb8").then(t)}},{path:"/pages/4cbc21/index.html",redirect:"/pages/4cbc21/"},{path:"/《Git》学习笔记/10.手册/06.Git命令思维导图.html",redirect:"/pages/4cbc21/"},{name:"v-95bf8eac",path:"/pages/635088/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-95bf8eac").then(t)}},{path:"/pages/635088/index.html",redirect:"/pages/635088/"},{path:"/《Git》学习笔记/20.文档笔记/10.Git基础与命令.html",redirect:"/pages/635088/"},{name:"v-dcde98f2",path:"/pages/1832fe/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-dcde98f2").then(t)}},{path:"/pages/1832fe/index.html",redirect:"/pages/1832fe/"},{path:"/《Git》学习笔记/20.文档笔记/100.Git工具-重写历史.html",redirect:"/pages/1832fe/"},{name:"v-3a58e5af",path:"/pages/d9e9c6/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-3a58e5af").then(t)}},{path:"/pages/d9e9c6/index.html",redirect:"/pages/d9e9c6/"},{path:"/《Git》学习笔记/20.文档笔记/110.Git工具-重置揭密.html",redirect:"/pages/d9e9c6/"},{name:"v-1191ec14",path:"/pages/4bef1a/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-1191ec14").then(t)}},{path:"/pages/4bef1a/index.html",redirect:"/pages/4bef1a/"},{path:"/《Git》学习笔记/20.文档笔记/20.Git分支-分支原理.html",redirect:"/pages/4bef1a/"},{name:"v-4067c8ac",path:"/pages/ea5a8c/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-4067c8ac").then(t)}},{path:"/pages/ea5a8c/index.html",redirect:"/pages/ea5a8c/"},{path:"/《Git》学习笔记/20.文档笔记/30.Git分支的新建与合并-分支操作.html",redirect:"/pages/ea5a8c/"},{name:"v-7ec0cbb8",path:"/pages/a399b3/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-7ec0cbb8").then(t)}},{path:"/pages/a399b3/index.html",redirect:"/pages/a399b3/"},{path:"/《Git》学习笔记/20.文档笔记/40.Git分支管理-查看分支.html",redirect:"/pages/a399b3/"},{name:"v-6ee24692",path:"/pages/49ee30/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-6ee24692").then(t)}},{path:"/pages/49ee30/index.html",redirect:"/pages/49ee30/"},{path:"/《Git》学习笔记/20.文档笔记/50.Git分支开发工作流.html",redirect:"/pages/49ee30/"},{name:"v-5424fbce",path:"/pages/574d62/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-5424fbce").then(t)}},{path:"/pages/574d62/index.html",redirect:"/pages/574d62/"},{path:"/《Git》学习笔记/20.文档笔记/60.Git分支-远程分支.html",redirect:"/pages/574d62/"},{name:"v-60ed664a",path:"/pages/3a3247/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-60ed664a").then(t)}},{path:"/pages/3a3247/index.html",redirect:"/pages/3a3247/"},{path:"/《Git》学习笔记/20.文档笔记/70.Git分支-变基.html",redirect:"/pages/3a3247/"},{name:"v-03a9a258",path:"/pages/c984d1/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-03a9a258").then(t)}},{path:"/pages/c984d1/index.html",redirect:"/pages/c984d1/"},{path:"/《Git》学习笔记/20.文档笔记/80.Git工具-查看修订版本.html",redirect:"/pages/c984d1/"},{name:"v-a682effa",path:"/pages/76d859/",component:ac,beforeEnter:function(n,e,t){Vo("Layout","v-a682effa").then(t)}},{path:"/pages/76d859/index.html",redirect:"/pages/76d859/"},{path:"/《Git》学习笔记/20.文档笔记/90.Git工具-交互式暂存.html",redirect:"/pages/76d859/"},{path:"*",component:ac}],sc={title:"",description:"",base:"/blog/",headTags:[["link",{rel:"icon",href:"/blog/img/favicon.ico"}],["meta",{name:"keywords",content:"前端博客,个人技术博客,前端,前端开发,前端框架,web前端,前端面试题,技术文档,学习,面试,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"}],["meta",{name:"baidu-site-verification",content:"7F55weZDDc"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"后端",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"01.后端",imgUrl:"/img/web.png",description:"Java、Spring框架等后端技术"}},title:"后端",date:"2022-02-20T15:28:53.000Z",permalink:"/backend",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/01.%E5%90%8E%E7%AB%AF.html",relativePath:"00.目录页/01.后端.md",key:"v-56f70e5a",path:"/backend/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"算法",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"02.算法",imgUrl:"/img/ui.png",description:"ACM，算法相关"}},title:"算法",date:"2022-02-20T21:50:54.000Z",permalink:"/acm",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/02.%E7%AE%97%E6%B3%95.html",relativePath:"00.目录页/02.算法.md",key:"v-79658578",path:"/acm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"技术",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"03.技术",imgUrl:"/img/other.png",description:"技术文档、教程、技巧、总结等文章"}},title:"技术",date:"2020-03-11T21:50:55.000Z",permalink:"/technology",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/03.%E6%8A%80%E6%9C%AF.html",relativePath:"00.目录页/03.技术.md",key:"v-635bdaa6",path:"/technology/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"更多",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"04.更多",imgUrl:"/img/more.png",description:"学习、面试、在线工具等更多文章和页面"}},title:"更多",date:"2020-03-11T21:50:56.000Z",permalink:"/more",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/04.%E6%9B%B4%E5%A4%9A.html",relativePath:"00.目录页/04.更多.md",key:"v-a74a57ce",path:"/more/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"题解",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"02.算法/25.题解",imgUrl:"/img/ui.png",description:"算法题解"}},title:"题解",date:"2022-02-20T21:50:54.000Z",permalink:"/solution",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/05.%E9%A2%98%E8%A7%A3.html",relativePath:"00.目录页/05.题解.md",key:"v-3efc1ed4",path:"/solution/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"面试被问：toString()、String.valueOf、(String)强转，有啥区别？",frontmatter:{title:"面试被问：toString()、String.valueOf、(String)强转，有啥区别？",date:"2021-11-02T09:51:37.000Z",permalink:"/pages/a61298/",categories:["后端","Java文章"],tags:["Java"],author:"哪 吒"},regularPath:"/01.%E5%90%8E%E7%AB%AF/25.Java%E6%96%87%E7%AB%A0/10.toString()%E3%80%81String%20valueOf%E3%80%81(String)%E5%BC%BA%E8%BD%AC%E5%8C%BA%E5%88%AB.html",relativePath:"01.后端/25.Java文章/10.toString()、String valueOf、(String)强转区别.md",key:"v-cfc173e0",path:"/pages/a61298/",headers:[{level:2,title:"一、前言",slug:"一、前言",normalizedTitle:"一、前言",charIndex:2},{level:2,title:"二、代码实例",slug:"二、代码实例",normalizedTitle:"二、代码实例",charIndex:94},{level:3,title:"1、基本类型",slug:"_1、基本类型",normalizedTitle:"1、基本类型",charIndex:105},{level:3,title:"2、封装类型",slug:"_2、封装类型",normalizedTitle:"2、封装类型",charIndex:359},{level:3,title:"3、null值问题",slug:"_3、null值问题",normalizedTitle:"3、null值问题",charIndex:431},{level:2,title:"三、源码分析",slug:"三、源码分析",normalizedTitle:"三、源码分析",charIndex:512},{level:3,title:"1、toString()",slug:"_1、tostring",normalizedTitle:"1、tostring()",charIndex:523},{level:3,title:"2、String.valueOf()",slug:"_2、string-valueof",normalizedTitle:"2、string.valueof()",charIndex:540},{level:2,title:"四、总结",slug:"四、总结",normalizedTitle:"四、总结",charIndex:706}],headersStr:"一、前言 二、代码实例 1、基本类型 2、封装类型 3、null值问题 三、源码分析 1、toString() 2、String.valueOf() 四、总结",content:'# 一、前言\n\n相信大家在日常开发中这三种方法用到的应该很多，尤其是前两种，经常在开发的时候，随心所欲，想用哪个用哪个，既然存在，那就应该有它存在的道理，那么什么情况下用哪个呢？\n\n\n# 二、代码实例\n\n\n# 1、基本类型\n\n（1）基本类型没有toString()方法\n\n（2）推荐使用\n\nint a = 0;\nString b = String.valueOf(a);\n\n\n1\n2\n\n\n（3）无法强转\n\n（String）是标准的类型转换，将Object类型转为String类型，使用(String)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出ClassCastException异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。\n\n\n# 2、封装类型\n\n（1）toString ok\n\n（2）String.valueOf()\n\n自然也是可以的。\n\n（3）封装类型也无法强转\n\n\n# 3、null值问题\n\n（1）toString()报空指针异常\n\n（2）String.valueOf()返回字符串“null”\n\n（3）null值强转成功\n\n\n# 三、源码分析\n\n\n# 1、toString()\n\n\n# 2、String.valueOf()\n\npublic static String valueOf(Object obj) {\n    return (obj == null) ? "null" : obj.toString();\n}\n\n\n1\n2\n3\n\n\nString.valueOf()比toString多了一个非空判断。\n\n\n# 四、总结\n\n1、toString()，可能会抛空指针异常 在这种使用方法中，因为java.lang.Object类里已有public方法.toString()，所以java对象都可以调用此方法。但在使用时要注意，必须保证object不是null值，否则将抛出NullPointerException异常。采用这种方法时，通常派生类会覆盖Object里的toString()方法。\n\n2、String.valueOf()，推荐使用，返回字符串“null” String.valueOf()方法是小编推荐使用的，因为它不会出现空指针异常，而且是静态的方法，直接通过String调用即可，只是有一点需要注意，就是上面提到的，如果为null，String.valueOf()返回结果是字符串“null”。而不是null。\n\n3、(String)强转，不推荐使用 （String）是标准的类型转换，将Object类型转为String类型，使用(String)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出ClassCastException异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。\n\n> 作者：哪 吒 链接：https://blog.csdn.net/guorui_java/article/details/117935620',normalizedContent:'# 一、前言\n\n相信大家在日常开发中这三种方法用到的应该很多，尤其是前两种，经常在开发的时候，随心所欲，想用哪个用哪个，既然存在，那就应该有它存在的道理，那么什么情况下用哪个呢？\n\n\n# 二、代码实例\n\n\n# 1、基本类型\n\n（1）基本类型没有tostring()方法\n\n（2）推荐使用\n\nint a = 0;\nstring b = string.valueof(a);\n\n\n1\n2\n\n\n（3）无法强转\n\n（string）是标准的类型转换，将object类型转为string类型，使用(string)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出classcastexception异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。\n\n\n# 2、封装类型\n\n（1）tostring ok\n\n（2）string.valueof()\n\n自然也是可以的。\n\n（3）封装类型也无法强转\n\n\n# 3、null值问题\n\n（1）tostring()报空指针异常\n\n（2）string.valueof()返回字符串“null”\n\n（3）null值强转成功\n\n\n# 三、源码分析\n\n\n# 1、tostring()\n\n\n# 2、string.valueof()\n\npublic static string valueof(object obj) {\n    return (obj == null) ? "null" : obj.tostring();\n}\n\n\n1\n2\n3\n\n\nstring.valueof()比tostring多了一个非空判断。\n\n\n# 四、总结\n\n1、tostring()，可能会抛空指针异常 在这种使用方法中，因为java.lang.object类里已有public方法.tostring()，所以java对象都可以调用此方法。但在使用时要注意，必须保证object不是null值，否则将抛出nullpointerexception异常。采用这种方法时，通常派生类会覆盖object里的tostring()方法。\n\n2、string.valueof()，推荐使用，返回字符串“null” string.valueof()方法是小编推荐使用的，因为它不会出现空指针异常，而且是静态的方法，直接通过string调用即可，只是有一点需要注意，就是上面提到的，如果为null，string.valueof()返回结果是字符串“null”。而不是null。\n\n3、(string)强转，不推荐使用 （string）是标准的类型转换，将object类型转为string类型，使用(string)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出classcastexception异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。\n\n> 作者：哪 吒 链接：https://blog.csdn.net/guorui_java/article/details/117935620',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Mysql like结果包含反斜杠\\，需替换成四个反斜杠\\\\\\\\",frontmatter:{title:"Mysql like结果包含反斜杠\\，需替换成四个反斜杠\\\\\\\\",date:"2022-02-20T10:50:03.000Z",titleTag:"转载",categories:["后端","MySQL"],tags:["MySQL"],permalink:"/pages/56cd49/"},regularPath:"/01.%E5%90%8E%E7%AB%AF/30.MySQL/10.like%E7%BB%93%E6%9E%9C%E5%8C%85%E5%90%AB%E5%8F%8D%E6%96%9C%E6%9D%A0%E9%9C%80%E8%A6%81%E6%9B%BF%E6%8D%A2%E6%88%90%E5%9B%9B%E4%B8%AA%E5%8F%8D%E6%96%9C%E6%9D%A0.html",relativePath:"01.后端/30.MySQL/10.like结果包含反斜杠需要替换成四个反斜杠.md",key:"v-3b35692c",path:"/pages/56cd49/",headers:[{level:2,title:"Mysql like查询语句中，结果包含反斜杠 ` 字符的，需要替换成四个反斜杠 \\\\\\`",slug:"mysql-like查询语句中-结果包含反斜杠-字符的-需要替换成四个反斜杠",normalizedTitle:"mysql like查询语句中，结果包含反斜杠 <code>字符的，需要替换成四个反斜杠 \\\\\\</code>",charIndex:null}],headersStr:"Mysql like查询语句中，结果包含反斜杠 ` 字符的，需要替换成四个反斜杠 \\\\\\`",content:'# Mysql like查询语句中，结果包含反斜杠 \\ 字符的，需要替换成四个反斜杠 \\\\\\\\\n\n当SQL语句中使用Like查询，且期望匹配的结果中含有\\的，应当把\\替换为\\\\\\\\。\n\n比如数据库中text字段有以下三行：\n\nid               text\n1                au1224 su5b9e1u9a8c\n2                \\24\\a su5b9e1u9a8c\n3                \\24\\\\a su5b9e1u9a8c\n\n\n1\n2\n3\n4\n\n\n当我们使用下面这三种方式查询时，都会得到id 为1，2，3三行\n\nselect * from test_table where text like "%\\24%";\nselect * from test_table where text like "%\\\\24%";\nselect * from test_table where text like "%\\\\\\24%";\n\n\n1\n2\n3\n\n\n只有像下面这样使用四个反斜杠\\\\\\\\查询时，才会得到期望的包含\\24的结果(id为2、3的两行)。\n\nselect * from test_table where text like "%24\\\\\\\\%";\n\n\n1\n\n\n进一步，如果期望查询到的结果更准确，比如只得到id为2的第二行，应该像下边这样查询。\n\nselect * from test_table where text like "%24\\\\\\\\a%";\n\n\n1\n\n\n同理，只得到id为3的第三行，匹配两个反斜杠\\\\，应该使用八个反斜杠\\\\\\\\\\\\\\\\:\n\nselect * from test_table where text like "%24\\\\\\\\\\\\\\\\a%";\n\n\n1\n\n\n原因其实很简单，在mysql中，反斜杠在字符串中是转义字符，在进行语法解析时会进行一次转义，所以当我们在insert字符时，insert \\\\ 在数据库中最终只会存储\\。而在mysql的like语法中，like后边的字符串除了会在语法解析时转义一次外，还会在正则匹配时进行第二次的转义。因此如果期望最终匹配到\\，就要反转义两次，也即由\\到\\\\再到\\\\\\\\。',normalizedContent:'# mysql like查询语句中，结果包含反斜杠 \\ 字符的，需要替换成四个反斜杠 \\\\\\\\\n\n当sql语句中使用like查询，且期望匹配的结果中含有\\的，应当把\\替换为\\\\\\\\。\n\n比如数据库中text字段有以下三行：\n\nid               text\n1                au1224 su5b9e1u9a8c\n2                \\24\\a su5b9e1u9a8c\n3                \\24\\\\a su5b9e1u9a8c\n\n\n1\n2\n3\n4\n\n\n当我们使用下面这三种方式查询时，都会得到id 为1，2，3三行\n\nselect * from test_table where text like "%\\24%";\nselect * from test_table where text like "%\\\\24%";\nselect * from test_table where text like "%\\\\\\24%";\n\n\n1\n2\n3\n\n\n只有像下面这样使用四个反斜杠\\\\\\\\查询时，才会得到期望的包含\\24的结果(id为2、3的两行)。\n\nselect * from test_table where text like "%24\\\\\\\\%";\n\n\n1\n\n\n进一步，如果期望查询到的结果更准确，比如只得到id为2的第二行，应该像下边这样查询。\n\nselect * from test_table where text like "%24\\\\\\\\a%";\n\n\n1\n\n\n同理，只得到id为3的第三行，匹配两个反斜杠\\\\，应该使用八个反斜杠\\\\\\\\\\\\\\\\:\n\nselect * from test_table where text like "%24\\\\\\\\\\\\\\\\a%";\n\n\n1\n\n\n原因其实很简单，在mysql中，反斜杠在字符串中是转义字符，在进行语法解析时会进行一次转义，所以当我们在insert字符时，insert \\\\ 在数据库中最终只会存储\\。而在mysql的like语法中，like后边的字符串除了会在语法解析时转义一次外，还会在正则匹配时进行第二次的转义。因此如果期望最终匹配到\\，就要反转义两次，也即由\\到\\\\再到\\\\\\\\。',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"RESTful API",frontmatter:{title:"RESTful API",categories:["后端","系统设计"],date:"2022-03-18T15:30:08.000Z",permalink:"/pages/83965d/",tags:[null]},regularPath:"/01.%E5%90%8E%E7%AB%AF/35.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/30.RESTful%20API.html",relativePath:"01.后端/35.系统设计/30.RESTful API.md",key:"v-2343a26e",path:"/pages/83965d/",headers:[{level:2,title:"何为API",slug:"何为api",normalizedTitle:"何为api",charIndex:2},{level:2,title:"何为RESTful API",slug:"何为restful-api",normalizedTitle:"何为restful api",charIndex:424},{level:2,title:"解读REST",slug:"解读rest",normalizedTitle:"解读rest",charIndex:592},{level:2,title:"基于HTTP设计REST API",slug:"基于http设计rest-api",normalizedTitle:"基于http设计rest api",charIndex:1474},{level:3,title:"域名",slug:"域名",normalizedTitle:"域名",charIndex:1495},{level:3,title:"路径",slug:"路径",normalizedTitle:"路径",charIndex:1616},{level:3,title:"HTTP动词",slug:"http动词",normalizedTitle:"http动词",charIndex:2147},{level:2,title:"参考链接",slug:"参考链接",normalizedTitle:"参考链接",charIndex:2513}],headersStr:"何为API 何为RESTful API 解读REST 基于HTTP设计REST API 域名 路径 HTTP动词 参考链接",content:'# 何为API\n\nAPI（Application Programming Interface） 翻译过来是“应用程序编程接口”的意思。是一组用于构建和集成应用软件的定义和协议。\n\nAPI 有时被视为合同，而合同文本则代表了各方之间的协议：如果一方以特定方式发送远程请求，该协议规定了另一方的软件将如何做出响应。\n\n但是， API 不仅仅代表后端系统暴露的接口，像框架中提供的方法也属于 API 的范畴。\n\n为了方便理解，我再列举几个例子 🌰：\n\n 1. 你通过某电商网站搜索某某商品，电商网站的前端就调用了后端提供了搜索商品相关的 API。\n 2. 你使用 JDK 开发 Java 程序，想要读取用户的输入的话，你就需要使用 JDK 提供的 IO 相关的 API。\n 3. ......\n\n你可以把 API 理解为程序与程序之间通信的桥梁。另外，API 的使用也不是没有章法的，它的规则（比如数据输入和输出的格式）由API 提供方制定。\n\n\n# 何为RESTful API\n\n举个例子\n\nGET    /classes：列出所有班级\nPOST   /classes：新建一个班级\n\n\n1\n2\n\n\nRESTful API 可以让你看到 URL+Http Method 就知道这个 URL 是干什么的，让你看到了 HTTP 状态码（status code）就知道请求结果如何。\n\n\n# 解读REST\n\nREST 的全称是 Resource Representational State Transfer ，直白地翻译过来就是 “资源”在网络传输中以某种“表现形式”进行“状态转移” 。如果还是不能继续理解，请继续往下看，相信下面的讲解一定能让你理解到底啥是 REST 。\n\n我们分别对上面涉及到的概念进行解读，以便加深理解，实际上你不需要搞懂下面这些概念，也能看懂我下一部分要介绍到的内容。不过，为了更好地能跟别人扯扯 “RESTful API”我建议你还是要好好理解一下！\n\n * 资源（Resource）：我们可以把真实的对象数据称为资源。一个资源既可以是一个集合，也可以是单个个体。比如我们的班级 classes 是代表一个集合形式的资源，而特定的 class 代表单个个体资源。每一种资源都有特定的 URI（统一资源标识符）与之对应，如果我们需要获取这个资源，访问这个 URI 就可以了，比如获取特定的班级：/class/12。另外，资源也可以包含子资源，比如 /classes/classId/teachers：列出某个指定班级的所有老师的信息\n * 表现形式（Representational）："资源"是一种信息实体，它可以有多种外在表现形式。我们把"资源"具体呈现出来的形式比如 json，xml，image,txt 等等叫做它的"表现层/表现形式"。\n * 状态转移（State Transfer）：大白话来说 REST 中的状态转移更多地描述的服务器端资源的状态，比如你通过增删改查（通过 HTTP 动词实现）引起资源状态的改变。ps:互联网通信协议 HTTP 协议，是一个无状态协议，所有的资源状态都保存在服务器端。\n\n综合上面的解释，我们总结一下什么是 RESTful 架构：\n\n 1. 每一个 URI 代表一种资源；\n 2. 客户端和服务器之间，传递这种资源的某种表现形式比如 json，xml，image,txt 等等；\n 3. 客户端通过特定的 HTTP 动词，对服务器端资源进行操作，实现"表现层状态转化"。\n\n\n# 基于HTTP设计REST API\n\n\n# 域名\n\n应该尽量将API部署在专用域名之下。\n\nhttps://api.example.com\n\n\n1\n\n\n如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下。\n\nhttps://example.org/api/\n\n\n1\n\n\n\n# 路径\n\n路径又称"终点"（endpoint），表示 API 的具体网址。\n\n 1. 网址中不能有动词\n\n在RESTful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的"集合"（collection），所以API中的名词也应该使用复数。\n\n举例来说，有一个API提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。\n\nhttps://api.example.com/v1/zoos\nhttps://api.example.com/v1/animals\nhttps://api.example.com/v1/employees\n\n\n1\n2\n3\n\n 2. 版本\n\n应该将API的版本号放入URL。\n\nhttps://api.example.com/v1/\n\n\n1\n\n\n另一种做法是，将版本号放在HTTP头信息中，但不如放入URL方便和直观。Github采用这种做法。\n\n 3. 不用大写字母，建议用中杠 - 不用下杠 _。\n\n比如邀请码写成 invitation-code而不是 invitation_code\n\n\n# HTTP动词\n\n * GET：请求从服务器获取特定资源。举个例子：GET /classes（获取所有班级）\n * POST ：在服务器上创建一个新的资源。举个例子：POST /classes（创建班级）\n * PUT ：更新服务器上的资源（客户端提供更新后的整个资源）。举个例子：PUT /classes/12（更新编号为 12 的班级）\n * PATCH ：更新服务器上的资源（客户端提供更改的属性，可以看做作是部分更新），使用的比较少，这里就不举例子了。\n * DELETE ：从服务器删除特定的资源。举个例子：DELETE /classes/12（删除编号为 12 的班级）\n\n还有两个不常用的HTTP动词\n\n * HEAD：获取资源的元数据。\n * OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。\n\n\n# 参考链接\n\n * https://RESTfulapi.net/\n\n * https://www.ruanyifeng.com/blog/2014/05/restful_api.html\n\n * https://juejin.im/entry/59e460c951882542f578f2f0\n\n * https://phauer.com/2016/testing-RESTful-services-java-best-practices/\n\n * https://www.seobility.net/en/wiki/REST_API\n\n * https://dev.to/duomly/rest-api-vs-graphql-comparison-3j6g',normalizedContent:'# 何为api\n\napi（application programming interface） 翻译过来是“应用程序编程接口”的意思。是一组用于构建和集成应用软件的定义和协议。\n\napi 有时被视为合同，而合同文本则代表了各方之间的协议：如果一方以特定方式发送远程请求，该协议规定了另一方的软件将如何做出响应。\n\n但是， api 不仅仅代表后端系统暴露的接口，像框架中提供的方法也属于 api 的范畴。\n\n为了方便理解，我再列举几个例子 🌰：\n\n 1. 你通过某电商网站搜索某某商品，电商网站的前端就调用了后端提供了搜索商品相关的 api。\n 2. 你使用 jdk 开发 java 程序，想要读取用户的输入的话，你就需要使用 jdk 提供的 io 相关的 api。\n 3. ......\n\n你可以把 api 理解为程序与程序之间通信的桥梁。另外，api 的使用也不是没有章法的，它的规则（比如数据输入和输出的格式）由api 提供方制定。\n\n\n# 何为restful api\n\n举个例子\n\nget    /classes：列出所有班级\npost   /classes：新建一个班级\n\n\n1\n2\n\n\nrestful api 可以让你看到 url+http method 就知道这个 url 是干什么的，让你看到了 http 状态码（status code）就知道请求结果如何。\n\n\n# 解读rest\n\nrest 的全称是 resource representational state transfer ，直白地翻译过来就是 “资源”在网络传输中以某种“表现形式”进行“状态转移” 。如果还是不能继续理解，请继续往下看，相信下面的讲解一定能让你理解到底啥是 rest 。\n\n我们分别对上面涉及到的概念进行解读，以便加深理解，实际上你不需要搞懂下面这些概念，也能看懂我下一部分要介绍到的内容。不过，为了更好地能跟别人扯扯 “restful api”我建议你还是要好好理解一下！\n\n * 资源（resource）：我们可以把真实的对象数据称为资源。一个资源既可以是一个集合，也可以是单个个体。比如我们的班级 classes 是代表一个集合形式的资源，而特定的 class 代表单个个体资源。每一种资源都有特定的 uri（统一资源标识符）与之对应，如果我们需要获取这个资源，访问这个 uri 就可以了，比如获取特定的班级：/class/12。另外，资源也可以包含子资源，比如 /classes/classid/teachers：列出某个指定班级的所有老师的信息\n * 表现形式（representational）："资源"是一种信息实体，它可以有多种外在表现形式。我们把"资源"具体呈现出来的形式比如 json，xml，image,txt 等等叫做它的"表现层/表现形式"。\n * 状态转移（state transfer）：大白话来说 rest 中的状态转移更多地描述的服务器端资源的状态，比如你通过增删改查（通过 http 动词实现）引起资源状态的改变。ps:互联网通信协议 http 协议，是一个无状态协议，所有的资源状态都保存在服务器端。\n\n综合上面的解释，我们总结一下什么是 restful 架构：\n\n 1. 每一个 uri 代表一种资源；\n 2. 客户端和服务器之间，传递这种资源的某种表现形式比如 json，xml，image,txt 等等；\n 3. 客户端通过特定的 http 动词，对服务器端资源进行操作，实现"表现层状态转化"。\n\n\n# 基于http设计rest api\n\n\n# 域名\n\n应该尽量将api部署在专用域名之下。\n\nhttps://api.example.com\n\n\n1\n\n\n如果确定api很简单，不会有进一步扩展，可以考虑放在主域名下。\n\nhttps://example.org/api/\n\n\n1\n\n\n\n# 路径\n\n路径又称"终点"（endpoint），表示 api 的具体网址。\n\n 1. 网址中不能有动词\n\n在restful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的"集合"（collection），所以api中的名词也应该使用复数。\n\n举例来说，有一个api提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。\n\nhttps://api.example.com/v1/zoos\nhttps://api.example.com/v1/animals\nhttps://api.example.com/v1/employees\n\n\n1\n2\n3\n\n 2. 版本\n\n应该将api的版本号放入url。\n\nhttps://api.example.com/v1/\n\n\n1\n\n\n另一种做法是，将版本号放在http头信息中，但不如放入url方便和直观。github采用这种做法。\n\n 3. 不用大写字母，建议用中杠 - 不用下杠 _。\n\n比如邀请码写成 invitation-code而不是 invitation_code\n\n\n# http动词\n\n * get：请求从服务器获取特定资源。举个例子：get /classes（获取所有班级）\n * post ：在服务器上创建一个新的资源。举个例子：post /classes（创建班级）\n * put ：更新服务器上的资源（客户端提供更新后的整个资源）。举个例子：put /classes/12（更新编号为 12 的班级）\n * patch ：更新服务器上的资源（客户端提供更改的属性，可以看做作是部分更新），使用的比较少，这里就不举例子了。\n * delete ：从服务器删除特定的资源。举个例子：delete /classes/12（删除编号为 12 的班级）\n\n还有两个不常用的http动词\n\n * head：获取资源的元数据。\n * options：获取信息，关于资源的哪些属性是客户端可以改变的。\n\n\n# 参考链接\n\n * https://restfulapi.net/\n\n * https://www.ruanyifeng.com/blog/2014/05/restful_api.html\n\n * https://juejin.im/entry/59e460c951882542f578f2f0\n\n * https://phauer.com/2016/testing-restful-services-java-best-practices/\n\n * https://www.seobility.net/en/wiki/rest_api\n\n * https://dev.to/duomly/rest-api-vs-graphql-comparison-3j6g',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"《Git》学习笔记",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《Git》学习笔记",imgUrl:"https://avatars3.githubusercontent.com/u/18133?s=200&v=4",description:"<a href='https://git-scm.com/book/zh/v2' target='_blank'>Git官网文档</a>的学习笔记，以官方文档为准。"}},title:"《Git》学习笔记",date:"2020-11-18T17:40:48.000Z",permalink:"/note/git",article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/01.%E5%90%8E%E7%AB%AF/40.%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/33.%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",relativePath:"01.后端/40.学习笔记/33.《Git》学习笔记.md",key:"v-178901a6",path:"/note/git/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"LeetCode 433.最小基因变化 图论 最短路问题",frontmatter:{title:"LeetCode 433.最小基因变化 图论 最短路问题",date:"2022-05-14T12:03:26.000Z",permalink:"/pages/b57980/",categories:["算法","题解"],tags:["最短路","图论","BFS","Floyd"]},regularPath:"/02.%E7%AE%97%E6%B3%95/25.%E9%A2%98%E8%A7%A3/25.LeetCode%20433%20%E6%9C%80%E5%B0%8F%E5%9F%BA%E5%9B%A0%E5%8F%98%E5%8C%96%20%E5%9B%BE%E8%AE%BA%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98.html",relativePath:"02.算法/25.题解/25.LeetCode 433 最小基因变化 图论 最短路问题.md",key:"v-759bdef2",path:"/pages/b57980/",headers:[{level:2,title:"题意",slug:"题意",normalizedTitle:"题意",charIndex:2},{level:2,title:"思路1（我的思路）：",slug:"思路1-我的思路",normalizedTitle:"思路1（我的思路）：",charIndex:135},{level:2,title:"思路二 广度优先搜索 BFS",slug:"思路二-广度优先搜索-bfs",normalizedTitle:"思路二 广度优先搜索 bfs",charIndex:2014},{level:3,title:"官方题解的解法一",slug:"官方题解的解法一",normalizedTitle:"官方题解的解法一",charIndex:2033},{level:3,title:"预处理优化",slug:"预处理优化",normalizedTitle:"预处理优化",charIndex:3783}],headersStr:"题意 思路1（我的思路）： 思路二 广度优先搜索 BFS 官方题解的解法一 预处理优化",content:"# 题意\n\n首先一定要好好读题，刚开始没理解题乱写一通。\n\n题意：给字符串start和end，字符串一个字符发生变化为一次变化。给定一个字符串数组，每次变化后的字符串必须是字符串数组中的一个，从start变为end最少需要变化几次？如果无法完成变化，返回-1。\n\n\n# 思路1（我的思路）：\n\n可以将每个字符串看作图中一个顶点，如果字符串A变化一个字符可以变为B，则A到B有一条边，度为1。建图，用求最短路办法求解，如Dijkstra算法、Bellman-Ford算法、Floyd算法等。\n\n由于Floyd最简单，就选用了效率低一点的Floyd算法。\n\n我的AC代码：\n\nimport java.util.List;\nclass Solution {\n\n    public int minMutation(String start, String end, String[] bank) {\n        if (bank.length == 0) {\n            return -1;\n        }\n        int startIdx = bank.length;\n        int len = bank.length+1;\n        String[] nBank = new String[len];\n        for (int i = 0; i < bank.length;++i) {\n            nBank[i] = bank[i];\n        }\n        nBank[startIdx] = start;\n        bank = nBank;\n        int endIdx = -1;\n        for (int i = 0; i < len; ++i) {\n            if (end.equals(bank[i])) {\n                endIdx = i;\n            }\n        }\n        if (endIdx == -1){\n            return -1;\n        }\n        int[][] d = new int[len][len];\n        for (int i = 0; i < len; ++i) {\n            for(int j = 0; j < len; ++j) {\n                if (judge(bank[i], bank[j]))\n                    d[i][j] = 1;\n                else\n                    d[i][j] = 100000000;\n            }\n        }\n        for (int k = 0; k < len; ++k) {\n            for (int i = 0; i < len; ++i) {\n                for (int j = 0; j < len; ++j) {\n                    d[i][j] = Math.min(d[i][j], d[i][k]+d[k][j]);\n                }\n            }\n        }\n        return d[startIdx][endIdx]==100000000?-1:d[startIdx][endIdx];\n    }\n\n    boolean judge(String s1, String s2) {\n        int cnt = 0;\n        for (int i = 0; i < 8; ++i) {\n            if (s1.charAt(i) != s2.charAt(i)) {\n                cnt++;\n                if (cnt > 1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 思路二 广度优先搜索 BFS\n\n\n# 官方题解的解法一\n\n从字符串start开始，变化每一位，广度优先搜索字符串end，搜索时还需判断当前字符串在不在给定字符串数组中。\n\nclass Solution {\n    public int minMutation(String start, String end, String[] bank) {\n        Set<String> cnt = new HashSet<String>();\n        Set<String> visited = new HashSet<String>();\n        char[] keys = {'A', 'C', 'G', 'T'};        \n        for (String w : bank) {\n            cnt.add(w);\n        }\n        if (start.equals(end)) {\n            return 0;\n        }\n        if (!cnt.contains(end)) {\n            return -1;\n        }\n        Queue<String> queue = new ArrayDeque<String>();\n        queue.offer(start);\n        visited.add(start);\n        int step = 1;\n        while (!queue.isEmpty()) {\n            int sz = queue.size();\n            for (int i = 0; i < sz; i++) {\n                String curr = queue.poll();\n                for (int j = 0; j < 8; j++) {\n                    for (int k = 0; k < 4; k++) {\n                        if (keys[k] != curr.charAt(j)) {\n                            StringBuffer sb = new StringBuffer(curr);\n                            sb.setCharAt(j, keys[k]);\n                            String next = sb.toString();\n                            if (!visited.contains(next) && cnt.contains(next)) {\n                                if (next.equals(end)) {\n                                    return step;\n                                }\n                                queue.offer(next);\n                                visited.add(next);\n                            }\n                        }\n                    }\n                }\n            }\n            step++;\n        }\n        return -1;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 预处理优化\n\n在解法一的基础上，对给定字符串数据进行预处理，找到每种合法变换，存在邻接表中，每次搜索只在邻接表中进行。",normalizedContent:"# 题意\n\n首先一定要好好读题，刚开始没理解题乱写一通。\n\n题意：给字符串start和end，字符串一个字符发生变化为一次变化。给定一个字符串数组，每次变化后的字符串必须是字符串数组中的一个，从start变为end最少需要变化几次？如果无法完成变化，返回-1。\n\n\n# 思路1（我的思路）：\n\n可以将每个字符串看作图中一个顶点，如果字符串a变化一个字符可以变为b，则a到b有一条边，度为1。建图，用求最短路办法求解，如dijkstra算法、bellman-ford算法、floyd算法等。\n\n由于floyd最简单，就选用了效率低一点的floyd算法。\n\n我的ac代码：\n\nimport java.util.list;\nclass solution {\n\n    public int minmutation(string start, string end, string[] bank) {\n        if (bank.length == 0) {\n            return -1;\n        }\n        int startidx = bank.length;\n        int len = bank.length+1;\n        string[] nbank = new string[len];\n        for (int i = 0; i < bank.length;++i) {\n            nbank[i] = bank[i];\n        }\n        nbank[startidx] = start;\n        bank = nbank;\n        int endidx = -1;\n        for (int i = 0; i < len; ++i) {\n            if (end.equals(bank[i])) {\n                endidx = i;\n            }\n        }\n        if (endidx == -1){\n            return -1;\n        }\n        int[][] d = new int[len][len];\n        for (int i = 0; i < len; ++i) {\n            for(int j = 0; j < len; ++j) {\n                if (judge(bank[i], bank[j]))\n                    d[i][j] = 1;\n                else\n                    d[i][j] = 100000000;\n            }\n        }\n        for (int k = 0; k < len; ++k) {\n            for (int i = 0; i < len; ++i) {\n                for (int j = 0; j < len; ++j) {\n                    d[i][j] = math.min(d[i][j], d[i][k]+d[k][j]);\n                }\n            }\n        }\n        return d[startidx][endidx]==100000000?-1:d[startidx][endidx];\n    }\n\n    boolean judge(string s1, string s2) {\n        int cnt = 0;\n        for (int i = 0; i < 8; ++i) {\n            if (s1.charat(i) != s2.charat(i)) {\n                cnt++;\n                if (cnt > 1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 思路二 广度优先搜索 bfs\n\n\n# 官方题解的解法一\n\n从字符串start开始，变化每一位，广度优先搜索字符串end，搜索时还需判断当前字符串在不在给定字符串数组中。\n\nclass solution {\n    public int minmutation(string start, string end, string[] bank) {\n        set<string> cnt = new hashset<string>();\n        set<string> visited = new hashset<string>();\n        char[] keys = {'a', 'c', 'g', 't'};        \n        for (string w : bank) {\n            cnt.add(w);\n        }\n        if (start.equals(end)) {\n            return 0;\n        }\n        if (!cnt.contains(end)) {\n            return -1;\n        }\n        queue<string> queue = new arraydeque<string>();\n        queue.offer(start);\n        visited.add(start);\n        int step = 1;\n        while (!queue.isempty()) {\n            int sz = queue.size();\n            for (int i = 0; i < sz; i++) {\n                string curr = queue.poll();\n                for (int j = 0; j < 8; j++) {\n                    for (int k = 0; k < 4; k++) {\n                        if (keys[k] != curr.charat(j)) {\n                            stringbuffer sb = new stringbuffer(curr);\n                            sb.setcharat(j, keys[k]);\n                            string next = sb.tostring();\n                            if (!visited.contains(next) && cnt.contains(next)) {\n                                if (next.equals(end)) {\n                                    return step;\n                                }\n                                queue.offer(next);\n                                visited.add(next);\n                            }\n                        }\n                    }\n                }\n            }\n            step++;\n        }\n        return -1;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 预处理优化\n\n在解法一的基础上，对给定字符串数据进行预处理，找到每种合法变换，存在邻接表中，每次搜索只在邻接表中进行。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git使用手册",frontmatter:{title:"Git使用手册",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/9a7ee40fc232253e",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/01.Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html",relativePath:"03.技术/01.技术文档/01.Git使用手册.md",key:"v-784ff23a",path:"/pages/9a7ee40fc232253e/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:14},{level:2,title:"创建版本库（仓库）",slug:"创建版本库-仓库",normalizedTitle:"创建版本库（仓库）",charIndex:296},{level:2,title:"添加文件到仓库",slug:"添加文件到仓库",normalizedTitle:"添加文件到仓库",charIndex:478},{level:2,title:"版本管理",slug:"版本管理",normalizedTitle:"版本管理",charIndex:819},{level:2,title:"远程仓库",slug:"远程仓库",normalizedTitle:"远程仓库",charIndex:1714},{level:2,title:"分支管理",slug:"分支管理",normalizedTitle:"分支管理",charIndex:2960},{level:2,title:"帮助命令",slug:"帮助命令",normalizedTitle:"帮助命令",charIndex:3360},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:7031}],excerpt:'<h1 id="git使用手册"><a class="header-anchor" href="#git使用手册">#</a> Git使用手册</h1>\n<h2 id="安装"><a class="header-anchor" href="#安装">#</a> 安装</h2>\n<p>官网下载：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">https://git-scm.com/downloads<OutboundLink/></a> 下载完成后使用默认进行安装。</p>\n<p>安装完成后，在开始菜单里找到 <code>Git</code> -&gt; <code>Git Bash</code>，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n还需要最后一步设置，在命令行输入：</p>\n\x3c!--beforebegin--\x3e<div class="language-bash line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-bash"><code><span class="token function">git</span> config --global user.name <span class="token string">"Your Name"</span>\n<span class="token function">git</span> config --global user.email <span class="token string">"email@example.com"</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p>\n',headersStr:"安装 创建版本库（仓库） 添加文件到仓库 版本管理 远程仓库 分支管理 帮助命令 参考文档",content:"# Git使用手册\n\n\n# 安装\n\n官网下载：https://git-scm.com/downloads 下载完成后使用默认进行安装。\n\n安装完成后，在开始菜单里找到 Git -> Git Bash，蹦出一个类似命令行窗口的东西，就说明Git安装成功！ 还需要最后一步设置，在命令行输入：\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"email@example.com\"\n\n\n1\n2\n\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。\n\n\n# 创建版本库（仓库）\n\n# 创建仓库\nmkdir <仓库name> \n\n# 进入仓库\ncd <仓库name>\n\n# 此命令用于显示当前目录\npwd\n\n# 把当前目录初始化成Git仓库\ngit init\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录直接git init也是可以的。\n\n\n# 添加文件到仓库\n\n在仓库目录下放入文件，如新建一个test.txt文件，然后使用git add test.txt命令告诉Git，把文件添加到缓存区，然后使用git commit -m \"提交描述\"告诉Git，把文件提交到仓库。\n\n# 添加指定文件或文件夹到缓存区，文件需添加后缀\ngit add <文件或文件夹name>                   # 单个文件\ngit add <文件或文件夹name> <文件或文件夹name>  # 多个文件\n\n# 或 全部文件同时添加到缓存区\ngit add .\n\n# 把文件从缓存区提交至仓库\ngit commit -m \"提交描述\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 提交描述规范\n\n在提交代码时输入清晰的说明有利于版本管理，建议搭配如下关键字编写提交描述\n\n# 新建(add)\n# 删除(rm)\n# 更新(update)\n# 改动(change)\n# 实现\n# 发布\n# 修复\n...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 版本管理\n\n# 提交修改\n\n如修改test.txt的内容后，运行git status命令看看被修改的文件，然后再使用git add test.txt、 git commit -m \"修改描述\"把修改后的文件提交到仓库，提交后可再次使用git status查看当前状态。\n\n# 显示 新增/删除/被改动等 的文件\ngit status\n\n\n1\n2\n\n\n# 查看版本记录\n\n# 查看版本记录\ngit log   # 显示版本号、提交时间等信息\n\n\n1\n2\n\n\n> 也可使用可视化工具查看Git版本历史： 在仓库目录右键 > Git BUI Here\n\n# 回退版本\n\n首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。\n\n# 回退到上一个版本\n$ git reset --hard HEAD^\n\n\n1\n2\n\n\n此时查看git log记录发现，原来最新的版本已经没有了，想回到原来最新的版本怎么办？这就需要知道最新的版本的版本号\n\n# 跳转到指定版本\ngit reset --hard <版本号前几位>\n\n\n1\n2\n\n\n但是不知道版本号怎么办？Git提供了一个命令git reflog用来记录你的每一次命令\n\ngit reflog\n\n\n1\n\n\n# 撤销修改\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/897889638509536\n\n# 删除文件\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/900002180232448\n\n\n# 远程仓库\n\n# SSH验证\n\n使本机能关联远程仓库，首次需要SSH验证\n\n * 第1步：创建SSH Key。在用户主（C:\\Users\\dell）目录下，看看有没有.ssh目录， 如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。 如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：\n\n# 创建SSH Key\nssh-keygen -t rsa -C \"邮件地址\"\n\n\n1\n2\n\n * 第2步：登陆GitHub，右上角头像 > settings > SSH and GPG keys >Add SSH Key，在key的文本框里粘贴id_rsa.pub文件的内容\n\n# 关联远程仓库\n\nSSH验证完成后，在github创建仓库，创建仓库时记得取消 Initialize this repository with a README的勾选，然后在本地命令：\n\n# 关联远程仓库，仓库名一般使用origin\ngit remote add <仓库名> <远程仓库地址>\n\n# 示例\ngit remote add origin git@github.com:xugaoyi/test.git\n\n\n1\n2\n3\n4\n5\n\n\n下一步，就可以把本地库的所有内容推送到远程库上\n\n# 把文件推送到远程仓库\ngit push -u <仓库名> <分支名>\n\n# 示例\ngit push -u origin master\n\n\n1\n2\n3\n4\n5\n\n\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n> 前提是目录已经git init初始化成仓库，并且git status状态是没有改动的，如果有改动则先git add .添加至缓存区，git commit -m '提交描述'提交至仓库，然后执行上面命令。\n> \n> 如创建仓库时勾选了 Initialize this repository with a README 则需先拉取README.md文件到本地仓库git pull\n> \n> 可关联多个远程仓库，注意给不同的远程仓库取不一样的名称，提交是分别按名称提交到不一样的远程仓库。\n\n# 简化的推送命令\ngit push\n\n\n1\n2\n\n\n# 查看远程仓库\n\n# 查看远程仓库\ngit remote -v\n\n\n1\n2\n\n\n# 删除远程仓库\n\n# 删除远程仓库\ngit remote rm <仓库名>\n\n\n1\n2\n\n\n# 从远程库克隆项目\n\n# 从远程库克隆项目\ngit clone <仓库地址>\n\n\n1\n2\n\n\n# 克隆指定分支\n\n# 克隆指定分支\ngit clone -b <分支名> <仓库地址>\n\n\n1\n2\n\n\n\n# 分支管理\n\n# 创建分支\n\n# 创建分支\ngit checkout -b <分支名>\n\n\n1\n2\n\n\n# 查看分支\n\n# 查看分支\ngit branch\n\n\n1\n2\n\n\n查看分支时，在分支前带 * 号的表示当前的分支\n\n# 切换分支\n\n# 切换分支\ngit checkout <分支名>\n\n\n1\n2\n\n\n# 合并分支\n\n# 合并本地的分支\ngit merge <分支名>\n\n# 合并远程的分支\ngit merge <远程仓库名>/<分支名>\n\n\n1\n2\n3\n4\n5\n\n\n注意，是将指定分支合并到当前分支，并非当前分支合并到指定分支。\n\n一般情况下是把当前分支切换到主分支，然后把子分支合并到主分支。\n\n# 删除分支\n\n# 删除分支\ngit branch -d <分支名>\n\n\n1\n2\n\n\n# 修改分支名\n\n# 修改分支名\ngit branch -m <原分支名> <新分支名>\n\n\n1\n2\n\n\n\n# 帮助命令\n\n如对命令不清楚时，可使用git help命令显示出git命令介绍。\n\n# 帮助命令\ngit help\n\n\n1\n2\n\n\n$ git help\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   reset      Reset current HEAD to the specified state\n   rm         Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     Use binary search to find the commit that introduced a bug\n   grep       Print lines matching a pattern\n   log        Show commit logs\n   show       Show various types of objects\n   status     Show the working tree status\n\ngrow, mark and tweak your common history\n   branch     List, create, or delete branches\n   checkout   Switch branches or restore working tree files\n   commit     Record changes to the repository\n   diff       Show changes between commits, commit and working tree, etc\n   merge      Join two or more development histories together\n   rebase     Reapply commits on top of another base tip\n   tag        Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch      Download objects and refs from another repository\n   pull       Fetch from and integrate with another repository or a local branch\n   push       Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n翻译工具翻译中文\n\n$ git help\n使用：git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\n这些是在各种情况下使用的通用Git命令：\n\nstart a working area (参见命令: git help tutorial)\n   clone      将存储库克隆到新目录中\n   init       创建一个空的Git存储库或重新初始化一个现有的存储库\n\nwork on the current change (参见命令: git help everyday)\n   add        将文件内容添加到索引中\n   mv         移动或重命名文件、目录或符号链接\n   reset      将当前磁头重置为指定状态\n   rm         从工作树和索引中删除文件\n\nexamine the history and state (参见命令: git help revisions)\n   bisect     使用二分查找查找引入错误的提交\n   grep       打印与模式匹配的行\n   log        显示提交日志\n   show       显示各种类型的对象\n   status     显示工作树状态\n\ngrow, mark and tweak your common history\n   branch     列出、创建或删除分支\n   checkout   切换分支或还原工作树文件\n   commit     记录对存储库的更改\n   diff       显示提交、提交和工作树等之间的更改\n   merge      将两个或多个开发历史连接在一起\n   rebase     在另一个基本提示之上重新应用提交\n   tag        创建、列表、删除或验证用GPG签名的标记对象\n\ncollaborate (参见命令: git help workflows)\n   fetch      从另一个存储库下载对象和引用\n   pull       从另一个存储库或本地分支获取并与之集成\n   push       更新远程引用和相关对象\n\n'git help -a' 和 'git help -g' 列出可用的子命令和一些概念指导。\n命令'git help <command>' 或 'git help <concept>' 查看特定子命令或概念.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 参考文档\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600",normalizedContent:"# git使用手册\n\n\n# 安装\n\n官网下载：https://git-scm.com/downloads 下载完成后使用默认进行安装。\n\n安装完成后，在开始菜单里找到 git -> git bash，蹦出一个类似命令行窗口的东西，就说明git安装成功！ 还需要最后一步设置，在命令行输入：\n\ngit config --global user.name \"your name\"\ngit config --global user.email \"email@example.com\"\n\n\n1\n2\n\n\n因为git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和email地址。\n\n\n# 创建版本库（仓库）\n\n# 创建仓库\nmkdir <仓库name> \n\n# 进入仓库\ncd <仓库name>\n\n# 此命令用于显示当前目录\npwd\n\n# 把当前目录初始化成git仓库\ngit init\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 也不一定必须在空目录下创建git仓库，选择一个已经有东西的目录直接git init也是可以的。\n\n\n# 添加文件到仓库\n\n在仓库目录下放入文件，如新建一个test.txt文件，然后使用git add test.txt命令告诉git，把文件添加到缓存区，然后使用git commit -m \"提交描述\"告诉git，把文件提交到仓库。\n\n# 添加指定文件或文件夹到缓存区，文件需添加后缀\ngit add <文件或文件夹name>                   # 单个文件\ngit add <文件或文件夹name> <文件或文件夹name>  # 多个文件\n\n# 或 全部文件同时添加到缓存区\ngit add .\n\n# 把文件从缓存区提交至仓库\ngit commit -m \"提交描述\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 提交描述规范\n\n在提交代码时输入清晰的说明有利于版本管理，建议搭配如下关键字编写提交描述\n\n# 新建(add)\n# 删除(rm)\n# 更新(update)\n# 改动(change)\n# 实现\n# 发布\n# 修复\n...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 版本管理\n\n# 提交修改\n\n如修改test.txt的内容后，运行git status命令看看被修改的文件，然后再使用git add test.txt、 git commit -m \"修改描述\"把修改后的文件提交到仓库，提交后可再次使用git status查看当前状态。\n\n# 显示 新增/删除/被改动等 的文件\ngit status\n\n\n1\n2\n\n\n# 查看版本记录\n\n# 查看版本记录\ngit log   # 显示版本号、提交时间等信息\n\n\n1\n2\n\n\n> 也可使用可视化工具查看git版本历史： 在仓库目录右键 > git bui here\n\n# 回退版本\n\n首先，git必须知道当前版本是哪个版本，在git中，用head表示当前版本，也就是最新的提交1094adb...（注意我的提交id和你的肯定不一样），上一个版本就是head^，上上一个版本就是head^^，当然往上100个版本写100个^比较容易数不过来，所以写成head~100。\n\n# 回退到上一个版本\n$ git reset --hard head^\n\n\n1\n2\n\n\n此时查看git log记录发现，原来最新的版本已经没有了，想回到原来最新的版本怎么办？这就需要知道最新的版本的版本号\n\n# 跳转到指定版本\ngit reset --hard <版本号前几位>\n\n\n1\n2\n\n\n但是不知道版本号怎么办？git提供了一个命令git reflog用来记录你的每一次命令\n\ngit reflog\n\n\n1\n\n\n# 撤销修改\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/897889638509536\n\n# 删除文件\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/900002180232448\n\n\n# 远程仓库\n\n# ssh验证\n\n使本机能关联远程仓库，首次需要ssh验证\n\n * 第1步：创建ssh key。在用户主（c:\\users\\dell）目录下，看看有没有.ssh目录， 如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。 如果没有，打开shell（windows下打开git bash），创建ssh key：\n\n# 创建ssh key\nssh-keygen -t rsa -c \"邮件地址\"\n\n\n1\n2\n\n * 第2步：登陆github，右上角头像 > settings > ssh and gpg keys >add ssh key，在key的文本框里粘贴id_rsa.pub文件的内容\n\n# 关联远程仓库\n\nssh验证完成后，在github创建仓库，创建仓库时记得取消 initialize this repository with a readme的勾选，然后在本地命令：\n\n# 关联远程仓库，仓库名一般使用origin\ngit remote add <仓库名> <远程仓库地址>\n\n# 示例\ngit remote add origin git@github.com:xugaoyi/test.git\n\n\n1\n2\n3\n4\n5\n\n\n下一步，就可以把本地库的所有内容推送到远程库上\n\n# 把文件推送到远程仓库\ngit push -u <仓库名> <分支名>\n\n# 示例\ngit push -u origin master\n\n\n1\n2\n3\n4\n5\n\n\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n> 前提是目录已经git init初始化成仓库，并且git status状态是没有改动的，如果有改动则先git add .添加至缓存区，git commit -m '提交描述'提交至仓库，然后执行上面命令。\n> \n> 如创建仓库时勾选了 initialize this repository with a readme 则需先拉取readme.md文件到本地仓库git pull\n> \n> 可关联多个远程仓库，注意给不同的远程仓库取不一样的名称，提交是分别按名称提交到不一样的远程仓库。\n\n# 简化的推送命令\ngit push\n\n\n1\n2\n\n\n# 查看远程仓库\n\n# 查看远程仓库\ngit remote -v\n\n\n1\n2\n\n\n# 删除远程仓库\n\n# 删除远程仓库\ngit remote rm <仓库名>\n\n\n1\n2\n\n\n# 从远程库克隆项目\n\n# 从远程库克隆项目\ngit clone <仓库地址>\n\n\n1\n2\n\n\n# 克隆指定分支\n\n# 克隆指定分支\ngit clone -b <分支名> <仓库地址>\n\n\n1\n2\n\n\n\n# 分支管理\n\n# 创建分支\n\n# 创建分支\ngit checkout -b <分支名>\n\n\n1\n2\n\n\n# 查看分支\n\n# 查看分支\ngit branch\n\n\n1\n2\n\n\n查看分支时，在分支前带 * 号的表示当前的分支\n\n# 切换分支\n\n# 切换分支\ngit checkout <分支名>\n\n\n1\n2\n\n\n# 合并分支\n\n# 合并本地的分支\ngit merge <分支名>\n\n# 合并远程的分支\ngit merge <远程仓库名>/<分支名>\n\n\n1\n2\n3\n4\n5\n\n\n注意，是将指定分支合并到当前分支，并非当前分支合并到指定分支。\n\n一般情况下是把当前分支切换到主分支，然后把子分支合并到主分支。\n\n# 删除分支\n\n# 删除分支\ngit branch -d <分支名>\n\n\n1\n2\n\n\n# 修改分支名\n\n# 修改分支名\ngit branch -m <原分支名> <新分支名>\n\n\n1\n2\n\n\n\n# 帮助命令\n\n如对命令不清楚时，可使用git help命令显示出git命令介绍。\n\n# 帮助命令\ngit help\n\n\n1\n2\n\n\n$ git help\nusage: git [--version] [--help] [-c <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -p | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nthese are common git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      clone a repository into a new directory\n   init       create an empty git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        add file contents to the index\n   mv         move or rename a file, a directory, or a symlink\n   reset      reset current head to the specified state\n   rm         remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     use binary search to find the commit that introduced a bug\n   grep       print lines matching a pattern\n   log        show commit logs\n   show       show various types of objects\n   status     show the working tree status\n\ngrow, mark and tweak your common history\n   branch     list, create, or delete branches\n   checkout   switch branches or restore working tree files\n   commit     record changes to the repository\n   diff       show changes between commits, commit and working tree, etc\n   merge      join two or more development histories together\n   rebase     reapply commits on top of another base tip\n   tag        create, list, delete or verify a tag object signed with gpg\n\ncollaborate (see also: git help workflows)\n   fetch      download objects and refs from another repository\n   pull       fetch from and integrate with another repository or a local branch\n   push       update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. see 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n翻译工具翻译中文\n\n$ git help\n使用：git [--version] [--help] [-c <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -p | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\n这些是在各种情况下使用的通用git命令：\n\nstart a working area (参见命令: git help tutorial)\n   clone      将存储库克隆到新目录中\n   init       创建一个空的git存储库或重新初始化一个现有的存储库\n\nwork on the current change (参见命令: git help everyday)\n   add        将文件内容添加到索引中\n   mv         移动或重命名文件、目录或符号链接\n   reset      将当前磁头重置为指定状态\n   rm         从工作树和索引中删除文件\n\nexamine the history and state (参见命令: git help revisions)\n   bisect     使用二分查找查找引入错误的提交\n   grep       打印与模式匹配的行\n   log        显示提交日志\n   show       显示各种类型的对象\n   status     显示工作树状态\n\ngrow, mark and tweak your common history\n   branch     列出、创建或删除分支\n   checkout   切换分支或还原工作树文件\n   commit     记录对存储库的更改\n   diff       显示提交、提交和工作树等之间的更改\n   merge      将两个或多个开发历史连接在一起\n   rebase     在另一个基本提示之上重新应用提交\n   tag        创建、列表、删除或验证用gpg签名的标记对象\n\ncollaborate (参见命令: git help workflows)\n   fetch      从另一个存储库下载对象和引用\n   pull       从另一个存储库或本地分支获取并与之集成\n   push       更新远程引用和相关对象\n\n'git help -a' 和 'git help -g' 列出可用的子命令和一些概念指导。\n命令'git help <command>' 或 'git help <concept>' 查看特定子命令或概念.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 参考文档\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Markdown使用教程",frontmatter:{title:"Markdown使用教程",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/ad247c4332211551",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/02.Markdown%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html",relativePath:"03.技术/01.技术文档/02.Markdown使用教程.md",key:"v-2deaaf56",path:"/pages/ad247c4332211551/",headers:[{level:2,title:"一、Markdown",slug:"一、markdown",normalizedTitle:"一、markdown",charIndex:19},{level:3,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:34},{level:3,title:"应用",slug:"应用",normalizedTitle:"应用",charIndex:87},{level:3,title:"编辑器",slug:"编辑器",normalizedTitle:"编辑器",charIndex:152},{level:2,title:"二、徽章",slug:"二、徽章",normalizedTitle:"二、徽章",charIndex:194},{level:2,title:"三、设置目录",slug:"三、设置目录",normalizedTitle:"三、设置目录",charIndex:579},{level:2,title:"四、标题",slug:"四、标题",normalizedTitle:"四、标题",charIndex:1197},{level:2,title:"二级标题",slug:"二级标题",normalizedTitle:"二级标题",charIndex:1215},{level:3,title:"三级标题",slug:"三级标题",normalizedTitle:"三级标题",charIndex:1227},{level:2,title:"五、文本",slug:"五、文本",normalizedTitle:"五、文本",charIndex:1285},{level:3,title:"段落",slug:"段落",normalizedTitle:"段落",charIndex:1297},{level:3,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:1307},{level:3,title:"删除线",slug:"删除线",normalizedTitle:"删除线",charIndex:1317},{level:3,title:"下划线",slug:"下划线",normalizedTitle:"下划线",charIndex:1328},{level:3,title:"文字高亮",slug:"文字高亮",normalizedTitle:"文字高亮",charIndex:1339},{level:3,title:"分隔线",slug:"分隔线",normalizedTitle:"分隔线",charIndex:1351},{level:3,title:"脚注",slug:"脚注",normalizedTitle:"脚注",charIndex:1362},{level:2,title:"六、列表",slug:"六、列表",normalizedTitle:"六、列表",charIndex:1370},{level:3,title:"无序列表",slug:"无序列表",normalizedTitle:"无序列表",charIndex:1382},{level:3,title:"有序列表",slug:"有序列表",normalizedTitle:"有序列表",charIndex:1394},{level:3,title:"折叠列表",slug:"折叠列表",normalizedTitle:"折叠列表",charIndex:1406},{level:3,title:"带复选框列表",slug:"带复选框列表",normalizedTitle:"带复选框列表",charIndex:1418},{level:3,title:"列表嵌套",slug:"列表嵌套",normalizedTitle:"列表嵌套",charIndex:1432},{level:2,title:"七、区块引用",slug:"七、区块引用",normalizedTitle:"七、区块引用",charIndex:1442},{level:2,title:"八、代码",slug:"八、代码",normalizedTitle:"八、代码",charIndex:1496},{level:3,title:"代码区块",slug:"代码区块",normalizedTitle:"代码区块",charIndex:1508},{level:2,title:"九、链接",slug:"九、链接",normalizedTitle:"九、链接",charIndex:1518},{level:3,title:"变量链接",slug:"变量链接",normalizedTitle:"变量链接",charIndex:1530},{level:3,title:"Github仓库中使用内部链接",slug:"github仓库中使用内部链接",normalizedTitle:"github仓库中使用内部链接",charIndex:4923},{level:3,title:"锚点链接",slug:"锚点链接",normalizedTitle:"锚点链接",charIndex:1563},{level:2,title:"十、图片",slug:"十、图片",normalizedTitle:"十、图片",charIndex:1573},{level:3,title:"图片宽高",slug:"图片宽高",normalizedTitle:"图片宽高",charIndex:1585},{level:3,title:"相对路径以及Github中使用图片",slug:"相对路径以及github中使用图片",normalizedTitle:"相对路径以及github中使用图片",charIndex:1597},{level:2,title:"十一、表格",slug:"十一、表格",normalizedTitle:"十一、表格",charIndex:1620},{level:2,title:"十二、Emoji表情包",slug:"十二、emoji表情包",normalizedTitle:"十二、emoji表情包",charIndex:1631},{level:2,title:"十三、其他技巧",slug:"十三、其他技巧",normalizedTitle:"十三、其他技巧",charIndex:1648},{level:3,title:"支持的 HTML 元素",slug:"支持的-html-元素",normalizedTitle:"支持的 html 元素",charIndex:1663},{level:3,title:"转义",slug:"转义",normalizedTitle:"转义",charIndex:1682},{level:3,title:"数学公式",slug:"数学公式",normalizedTitle:"数学公式",charIndex:1692},{level:3,title:"图表",slug:"图表",normalizedTitle:"图表",charIndex:1704},{level:3,title:"流程图",slug:"流程图",normalizedTitle:"流程图",charIndex:1714},{level:3,title:"时序图",slug:"时序图",normalizedTitle:"时序图",charIndex:1725},{level:3,title:"甘特图",slug:"甘特图",normalizedTitle:"甘特图",charIndex:1736}],excerpt:'<h1 id="markdown使用教程"><a class="header-anchor" href="#markdown使用教程">#</a> Markdown使用教程</h1>\n<h2 id="一、markdown"><a class="header-anchor" href="#一、markdown">#</a> 一、Markdown</h2>\n<h3 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h3>\n<p><img src="https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png" alt="logo"></p>\n<p><code>Markdown</code> 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p>\n',headersStr:"一、Markdown 简介 应用 编辑器 二、徽章 三、设置目录 四、标题 二级标题 三级标题 五、文本 段落 字体 删除线 下划线 文字高亮 分隔线 脚注 六、列表 无序列表 有序列表 折叠列表 带复选框列表 列表嵌套 七、区块引用 八、代码 代码区块 九、链接 变量链接 Github仓库中使用内部链接 锚点链接 十、图片 图片宽高 相对路径以及Github中使用图片 十一、表格 十二、Emoji表情包 十三、其他技巧 支持的 HTML 元素 转义 数学公式 图表 流程图 时序图 甘特图",content:"# Markdown使用教程\n\n\n# 一、Markdown\n\n\n# 简介\n\n\n\nMarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n\n\n# 应用\n\n当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、知乎等\n\n\n# 编辑器\n\n推荐使用Typora，官网：https://typora.io/\n\n\n# 二、徽章\n\n# 什么是徽章\n\n徽章是一种小巧精美的小图标，一般配有相关文字进行辅助说明，可对数据进行监控，链接跳转等，富有表现力。\n\n常见于github项目主页，但其不仅出现于 github 项目主页，凡是能够表现图片的地方都可以出现徽章。\n\n# 徽章的使用\n\n * 在markdown中使用\n\n格式:\n[![图片文字说明](图片源地址)](超链接地址)  # 即超链接内部嵌套图片\n\n语法：\n[![github](https://img.shields.io/badge/github-xugaoyi-brightgreen.svg)](https://github.com/xugaoyi)\n\n\n1\n2\n3\n4\n5\n\n\n\n\n徽章生成网站：https://shields.io/\n\n本文档主要介绍markdown，不对徽章做过多介绍，详细介绍请 戳我 了解。\n\n\n# 三、设置目录\n\n设置之后会根据分级标题来自动生成目录。\n\n[TOC]\n\n\n1\n\n\n> 注：github暂未支持。\n\n[TOC]\n\n在github生成TOC的方法：https://github.com/ekalinin/github-markdown-toc\n\nwindows系统需要基于golang实现的工具：https://github.com/ekalinin/github-markdown-toc.go\n\n> 如果你有GO语言的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。\n> \n> 如windows系统64位 下载：gh-md-toc.windows.amd64.tgz （386 是32位，amd64是64位）\n> \n> 下载解压后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。\n> \n> 使用方法：\n> \n>  1. 首先将.md文档复制到gh-md-toc.exe的根目录下\n>  2. 在该目录下打开系统命令行，输入命令：gh-md-toc.exe README.MD 生成目录\n>  3. 把生成的目录复制到.md文件即可。\n\n这是gh-md-toc生成的目录：\n\n * 一、Markdown\n   * 简介\n   * 应用\n   * 编辑器\n * 二、徽章\n   * 什么是徽章\n   * 徽章的使用\n * 三、设置目录\n * 四、标题\n * 一级标题\n   * 二级标题\n     * 三级标题\n       * 四级标题\n         * 五级标题\n           * 六级标题\n   * 五、文本\n     * 段落\n     * 字体\n     * 删除线\n     * 下划线\n     * 文字高亮\n     * 分隔线\n     * 脚注\n   * 六、列表\n     * 无序列表\n     * 有序列表\n     * 折叠列表\n     * 带复选框列表\n     * 列表嵌套\n   * 七、区块引用\n     * 区块嵌套\n     * 区块中使用列表\n     * 列表中使用区块\n   * 八、代码\n     * 代码区块\n   * 九、链接\n     * 变量链接\n     * Github中使用内部链接\n     * 锚点链接\n   * 十、图片\n     * 图片宽高\n     * 相对路径以及Github中使用图片\n   * 十一、表格\n   * 十二、Emoji表情包\n   * 十三、其他技巧\n     * 支持的 HTML 元素\n     * 转义\n     * 数学公式\n     * 图表\n     * 流程图\n     * 时序图\n     * 甘特图\n\n\n# 四、标题\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 五、文本\n\n\n# 段落\n\nMarkdown 段落没有特殊的格式，直接编写文字，需要段落缩进时使用2个Tab\n\n\n# 字体\n\n*斜体文本*\n或 _斜体文本_\n**粗体文本**\n或  __粗体文本__\n***粗斜体文本***\n或 ___粗斜体文本___\n\n\n1\n2\n3\n4\n5\n6\n\n\n斜体文本\n\n斜体文本\n\n粗体文本\n\n粗体文本\n\n粗斜体文本\n\n粗斜体文本\n\n\n# 删除线\n\n如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\n~~BAIDU.COM~~\n\n\n1\n\n\nBAIDU.COM\n\n\n# 下划线\n\n下划线可以通过 HTML 的<u> 标签来实现：\n\n<u>带下划线的文本</u>\n\n\n1\n\n\n带下划线的文本\n\n\n# 文字高亮\n\n文字高亮能使行内部分文字高亮，使用一对反引号。\n\n`html` `css` `javascript`\n\n\n1\n\n\nhtml css javascript\n\n\n# 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n***\n\n*****\n\n- - -\n\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n----------------------------------------\n\n\n# 脚注\n\n脚注是对文本的补充说明。\n\n[^变量]\n在文档结尾或其他位置給变量赋值：\n[^变量]: 注明框内显示的内容\n\n鼠标移到这里> [^哈喽]\n[^哈喽]: 注明框内显示的内容\n\n\n1\n2\n3\n4\n5\n6\n\n\n> 注：在部分线上预览未支持\n\n鼠标移到这里> ^哈喽\n\n\n# 六、列表\n\n\n# 无序列表\n\n使用星号*、加号+或是减号-作为列表标记：\n\n* 第一项\n* 第二项\n\n+ 第一项\n+ 第二项\n\n- 第一项\n- 第二项\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 第一项\n * 第二项\n\n\n# 有序列表\n\n使用数字并加上. 号来表示\n\n1. 第一项\n2. 第二项\n\n\n1\n2\n\n 1. 第一项\n 2. 第二项\n\n\n# 折叠列表\n\n<details>\n<summary>点我打开关闭折叠</summary>\n 折叠内容\n <ul>\n     <li>1</li>\n     <li>2</li>\n     <li>3</li>\n </ul>\n</details>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意：<details> 标签内写markdown代码无效，可写html代码，如ul>li、table等\n\n点我打开关闭折叠 折叠内容\n * 1\n * 2\n * 3\n\n包含table的折叠\n\n分类        例词\n人称代词-主格   I我，you你，he他，she她，they他们， we我们\n人称代词-宾格   me我， you你， him他， her她， them他们， us我们\n物主代词      my我的， his他的， your你的（your你们的）， their他们的， hers她的\n指示代词      this这， that那， these这些， those 那些\n反身代词      myself我自己， himself他自己， themselves他们自己，\n          yourself你(们)自己，herself她自己\n疑问代词      who谁， what什么， which哪个\n不定代词      some一些， many许多， both两个、两个都， any许多\n关系代词      which……的物， who……的人， that……的人或物， who谁， that引导定语从句\n相互代词      each other 互相， one another互相\n连接代词      who,whom,whose,what,which,whatever,whichever,whoever,whomever\n替代词       one（单数），ones（复数）\n\n\n# 带复选框列表\n\n* [x] 第一项\n* [ ] 第二项\n* [ ] 第三项\n\n\n1\n2\n3\n\n\n> 注：在部分线上预览未支持\n\n * [x] 第一项\n\n * [ ] 第二项\n\n * [ ] 第三项\n\n\n# 列表嵌套\n\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n       - 第三层嵌套\n\n\n1\n2\n3\n4\n5\n6\n\n 1. 第一项\n    * 嵌套1\n    * 嵌套2\n 2. 第二项\n    * 嵌套1\n      * 嵌套2\n\n\n# 七、区块引用\n\n区块引用是在段落开头使用 >符号 ，然后后面紧跟一个空格符号：\n\n> 区块引用\n\n\n1\n\n\n> 区块引用\n> \n> Typora中回车键自动延伸区块\n\n# 区块嵌套\n\n> 第一层\n> > 第二层\n> > > 第三层\n\n\n1\n2\n3\n\n\n> 第一层\n> \n> > 第二层\n> > \n> > > 第三层\n\n# 区块中使用列表\n\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> * 111\n> * 222\n\n\n1\n2\n3\n4\n5\n\n\n> 区块中使用列表\n> \n>  1. 第一项\n>  2. 第二项\n>     * 111\n>     * 222\n\n# 列表中使用区块\n\n* 第一项\n    > 区块\n* 第二项\n\n\n1\n2\n3\n\n\n * 第一项\n   \n   > 区块\n   > \n   > 区块\n\n * 第二项\n\n\n# 八、代码\n\n如果是段落上的一个代码片段可以用反引号把它包起来（`），示例：\n\n`alert()`\n\n\n1\n\n\nalert()\n\n\n# 代码区块\n\n用三个反引号 ``` 包裹一段代码，并指定一种语言（也可以不指定），指定代码语言后会有代码的颜色高亮\n\n本代码区块为示例说明：\n\n​```javascript\nfunction test() {\n\talert('test')\n}\n​```\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\nfunction test() {\n\talert('test')\n}\n\n\n1\n2\n3\n\n\n\n# 九、链接\n\n格式：\n\n[链接名称](链接地址)\n\n[链接名称](链接地址,可选的alt)\n\n或\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n示例：\n\n[百度](http://www.baidu.com,'百度')\n\n\n1\n\n\n百度\n\n直接显示链接地址：\n\n<http://www.baidu.com>\n\n\n1\n\n\nhttp://www.baidu.com\n\n\n# 变量链接\n\n链接可以用变量来代替，文档末尾或其他位置附带变量地址：\n\n这个链接用 1 作为网址变量 [Google][1]\n这个链接用 baidu 作为网址变量 [Baidu][baidu]\n\n然后在文档的结尾或其他位置给变量赋值（网址）\n  [1]: http://www.google.com/\n  [baidu]: http://www.baidu.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n这个链接用 1 作为网址变量 Google\n\n这个链接用 baidu 作为网址变量 Baidu\n\n\n# Github仓库中使用内部链接\n\n可使用相对路径（前提是有该路径下的文件）\n[test](test.md)\n\n\n1\n2\n\n\ntest\n\n\n# 锚点链接\n\n本文件中每一个标题都是一个锚点，和HTML的锚点（#）类似\n\n[Markdown](#Markdown)\n\n\n1\n\n\n> 注： github对含有标点符号的标题进行锚点时会忽略掉标点符号， 本页中，如果这样写则无法跳转：[链接](#九、链接) 正确写法：[链接](#九链接)\n\nMarkdown\n\n链接\n\n流程图\n\n\n# 十、图片\n\n和链接的区别是前面多一个感叹号!\n\n![图片名](图片链接)\n\n\n1\n\n\n当然，你也可以像链接那样对图片地址使用变量:\n\n这里链接用 img 作为图片地址变量\n然后在文档的结尾或其他位置给变量赋值（图片地址）\n![RUNOOB][img]\n[img]: https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 图片宽高\n\n如下想设置图片宽高，可以使用 <img> 标签。\n\n<img src=\"https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\" width=\"50px\" height=\"30px\">\n\n\n1\n\n\n\n# 相对路径以及Github中使用图片\n\n不管是在本地还是在github同一个仓库中，如果图片存在，可以使用相对路径。\n\n相对路径图片：\n\n![头像图片](./md-img/test.jpg)\n\n\n1\n\n\ngithub上如果引用其他github仓库中的图片则要注意地址格式：仓库地址/raw/分支名/图片路径 或 https://raw.githubusercontent.com/用户名/仓库名/分支名/图片路径\n\n![其他仓库的图片1](https://github.com/xugaoyi/vue-music/raw/master/src/common/image/default.png)\n或\n![其他仓库的图片2](https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png)\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 十一、表格\n\n制作表格使用 |来分隔不同的单元格，使用-来分隔表头和其他行。\n\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n\n1\n2\n3\n4\n\n\n表头    表头\n单元格   单元格\n单元格   单元格\n\n对齐方式\n\n * -: 设置内容和标题栏居右对齐\n * :- 设置内容和标题栏居左对齐\n * :-: 设置内容和标题栏居中对齐\n\n| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n\n\n1\n2\n3\n4\n\n\n左对齐   右对齐   居中对齐\n单元格   单元格   单元格\n单元格   单元格   单元格\n\n\n# 十二、Emoji表情包\n\nEmoji表情英文名的前后加冒号，Typore上先输入冒号再输入首字母有表情提示\n\n:smirk:\n\n\n1\n\n\n💋 😸🙈🐴 😏😊😃😄 ☀️\n\n更多表情名称请查看：表情包清单\n\n\n# 十三、其他技巧\n\n\n# 支持的 HTML 元素\n\n不在 Markdown 语法涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n\n目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等等 ，如：\n\n使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑\n\n\n1\n\n\n使用 Ctrl+Alt+Del 重启电脑\n\n我是使用b标签的加粗字体\n\n\n# 转义\n\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用反斜杠转义字符：\n\n**未转义星号显示加粗**\n\\*\\* 转义显示星号 \\*\\*\n\n\n1\n2\n\n\n未转义星号显示加粗 ** 转义显示星号 **\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n*** 以下部分在Github或其他在线预览中暂未支持 ***\n\n----------------------------------------\n\n\n# 数学公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n$$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n$$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\ \\frac{\\partial X}{\\partial u} & \\frac{\\partial Y}{\\partial u} & 0 \\ \\frac{\\partial X}{\\partial v} & \\frac{\\partial Y}{\\partial v} & 0 \\ \\end{vmatrix} $$\n\n\n# 图表\n\n​```chart\n,Budget,Income,Expenses,Debt\nJune,5000,8000,4000,6000\nJuly,3000,1000,4000,3000\nAug,5000,7000,6000,3000\nSep,7000,2000,3000,1000\nOct,6000,5000,4000,2000\nNov,4000,3000,5000,\n\ntype: pie\ntitle: Monthly Revenue\nx.title: Amount\ny.title: Month\ny.suffix: $\n​```\n​```mermaid\nsequenceDiagram\nA->>B: 是否已收到消息？\nB--\x3e>A: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n> 注：在Typora中未支持\n\n\n# 流程图\n\n语法：\n​```mermaid\ngraph TD\nA[模块A] --\x3e|A1| B(模块B)\nB --\x3e C{判断条件C}\nC --\x3e|条件C1| D[模块D]\nC --\x3e|条件C2| E[模块E]\nC --\x3e|条件C3| F[模块F]\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n流程图相关文章：\n\nhttps://www.jianshu.com/p/b421cc723da5\n\nhttp://www.imooc.com/article/292708\n\n\n# 时序图\n\n​```mermaid\nsequenceDiagram\nA->>B: 是否已收到消息？\nB--\x3e>A: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n\n\n\n# 甘特图\n\n​```mermaid\ngantt\ntitle 甘特图\ndateFormat  YYYY-MM-DD\nsection 项目A\n任务1           :a1, 2018-06-06, 30d\n任务2     :after a1  , 20d\nsection 项目B\n任务3      :2018-06-12  , 12d\n任务4      : 24d\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n回到顶部",normalizedContent:"# markdown使用教程\n\n\n# 一、markdown\n\n\n# 简介\n\n\n\nmarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n\n\n# 应用\n\n当前许多网站都广泛使用 markdown 来撰写帮助文档或是用于论坛上发表消息。例如：github、简书、知乎等\n\n\n# 编辑器\n\n推荐使用typora，官网：https://typora.io/\n\n\n# 二、徽章\n\n# 什么是徽章\n\n徽章是一种小巧精美的小图标，一般配有相关文字进行辅助说明，可对数据进行监控，链接跳转等，富有表现力。\n\n常见于github项目主页，但其不仅出现于 github 项目主页，凡是能够表现图片的地方都可以出现徽章。\n\n# 徽章的使用\n\n * 在markdown中使用\n\n格式:\n[![图片文字说明](图片源地址)](超链接地址)  # 即超链接内部嵌套图片\n\n语法：\n[![github](https://img.shields.io/badge/github-xugaoyi-brightgreen.svg)](https://github.com/xugaoyi)\n\n\n1\n2\n3\n4\n5\n\n\n\n\n徽章生成网站：https://shields.io/\n\n本文档主要介绍markdown，不对徽章做过多介绍，详细介绍请 戳我 了解。\n\n\n# 三、设置目录\n\n设置之后会根据分级标题来自动生成目录。\n\n[toc]\n\n\n1\n\n\n> 注：github暂未支持。\n\n[toc]\n\n在github生成toc的方法：https://github.com/ekalinin/github-markdown-toc\n\nwindows系统需要基于golang实现的工具：https://github.com/ekalinin/github-markdown-toc.go\n\n> 如果你有go语言的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。\n> \n> 如windows系统64位 下载：gh-md-toc.windows.amd64.tgz （386 是32位，amd64是64位）\n> \n> 下载解压后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。\n> \n> 使用方法：\n> \n>  1. 首先将.md文档复制到gh-md-toc.exe的根目录下\n>  2. 在该目录下打开系统命令行，输入命令：gh-md-toc.exe readme.md 生成目录\n>  3. 把生成的目录复制到.md文件即可。\n\n这是gh-md-toc生成的目录：\n\n * 一、markdown\n   * 简介\n   * 应用\n   * 编辑器\n * 二、徽章\n   * 什么是徽章\n   * 徽章的使用\n * 三、设置目录\n * 四、标题\n * 一级标题\n   * 二级标题\n     * 三级标题\n       * 四级标题\n         * 五级标题\n           * 六级标题\n   * 五、文本\n     * 段落\n     * 字体\n     * 删除线\n     * 下划线\n     * 文字高亮\n     * 分隔线\n     * 脚注\n   * 六、列表\n     * 无序列表\n     * 有序列表\n     * 折叠列表\n     * 带复选框列表\n     * 列表嵌套\n   * 七、区块引用\n     * 区块嵌套\n     * 区块中使用列表\n     * 列表中使用区块\n   * 八、代码\n     * 代码区块\n   * 九、链接\n     * 变量链接\n     * github中使用内部链接\n     * 锚点链接\n   * 十、图片\n     * 图片宽高\n     * 相对路径以及github中使用图片\n   * 十一、表格\n   * 十二、emoji表情包\n   * 十三、其他技巧\n     * 支持的 html 元素\n     * 转义\n     * 数学公式\n     * 图表\n     * 流程图\n     * 时序图\n     * 甘特图\n\n\n# 四、标题\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 五、文本\n\n\n# 段落\n\nmarkdown 段落没有特殊的格式，直接编写文字，需要段落缩进时使用2个tab\n\n\n# 字体\n\n*斜体文本*\n或 _斜体文本_\n**粗体文本**\n或  __粗体文本__\n***粗斜体文本***\n或 ___粗斜体文本___\n\n\n1\n2\n3\n4\n5\n6\n\n\n斜体文本\n\n斜体文本\n\n粗体文本\n\n粗体文本\n\n粗斜体文本\n\n粗斜体文本\n\n\n# 删除线\n\n如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\n~~baidu.com~~\n\n\n1\n\n\nbaidu.com\n\n\n# 下划线\n\n下划线可以通过 html 的<u> 标签来实现：\n\n<u>带下划线的文本</u>\n\n\n1\n\n\n带下划线的文本\n\n\n# 文字高亮\n\n文字高亮能使行内部分文字高亮，使用一对反引号。\n\n`html` `css` `javascript`\n\n\n1\n\n\nhtml css javascript\n\n\n# 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n***\n\n*****\n\n- - -\n\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n----------------------------------------\n\n\n# 脚注\n\n脚注是对文本的补充说明。\n\n[^变量]\n在文档结尾或其他位置給变量赋值：\n[^变量]: 注明框内显示的内容\n\n鼠标移到这里> [^哈喽]\n[^哈喽]: 注明框内显示的内容\n\n\n1\n2\n3\n4\n5\n6\n\n\n> 注：在部分线上预览未支持\n\n鼠标移到这里> ^哈喽\n\n\n# 六、列表\n\n\n# 无序列表\n\n使用星号*、加号+或是减号-作为列表标记：\n\n* 第一项\n* 第二项\n\n+ 第一项\n+ 第二项\n\n- 第一项\n- 第二项\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 第一项\n * 第二项\n\n\n# 有序列表\n\n使用数字并加上. 号来表示\n\n1. 第一项\n2. 第二项\n\n\n1\n2\n\n 1. 第一项\n 2. 第二项\n\n\n# 折叠列表\n\n<details>\n<summary>点我打开关闭折叠</summary>\n 折叠内容\n <ul>\n     <li>1</li>\n     <li>2</li>\n     <li>3</li>\n </ul>\n</details>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意：<details> 标签内写markdown代码无效，可写html代码，如ul>li、table等\n\n点我打开关闭折叠 折叠内容\n * 1\n * 2\n * 3\n\n包含table的折叠\n\n分类        例词\n人称代词-主格   i我，you你，he他，she她，they他们， we我们\n人称代词-宾格   me我， you你， him他， her她， them他们， us我们\n物主代词      my我的， his他的， your你的（your你们的）， their他们的， hers她的\n指示代词      this这， that那， these这些， those 那些\n反身代词      myself我自己， himself他自己， themselves他们自己，\n          yourself你(们)自己，herself她自己\n疑问代词      who谁， what什么， which哪个\n不定代词      some一些， many许多， both两个、两个都， any许多\n关系代词      which……的物， who……的人， that……的人或物， who谁， that引导定语从句\n相互代词      each other 互相， one another互相\n连接代词      who,whom,whose,what,which,whatever,whichever,whoever,whomever\n替代词       one（单数），ones（复数）\n\n\n# 带复选框列表\n\n* [x] 第一项\n* [ ] 第二项\n* [ ] 第三项\n\n\n1\n2\n3\n\n\n> 注：在部分线上预览未支持\n\n * [x] 第一项\n\n * [ ] 第二项\n\n * [ ] 第三项\n\n\n# 列表嵌套\n\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n       - 第三层嵌套\n\n\n1\n2\n3\n4\n5\n6\n\n 1. 第一项\n    * 嵌套1\n    * 嵌套2\n 2. 第二项\n    * 嵌套1\n      * 嵌套2\n\n\n# 七、区块引用\n\n区块引用是在段落开头使用 >符号 ，然后后面紧跟一个空格符号：\n\n> 区块引用\n\n\n1\n\n\n> 区块引用\n> \n> typora中回车键自动延伸区块\n\n# 区块嵌套\n\n> 第一层\n> > 第二层\n> > > 第三层\n\n\n1\n2\n3\n\n\n> 第一层\n> \n> > 第二层\n> > \n> > > 第三层\n\n# 区块中使用列表\n\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> * 111\n> * 222\n\n\n1\n2\n3\n4\n5\n\n\n> 区块中使用列表\n> \n>  1. 第一项\n>  2. 第二项\n>     * 111\n>     * 222\n\n# 列表中使用区块\n\n* 第一项\n    > 区块\n* 第二项\n\n\n1\n2\n3\n\n\n * 第一项\n   \n   > 区块\n   > \n   > 区块\n\n * 第二项\n\n\n# 八、代码\n\n如果是段落上的一个代码片段可以用反引号把它包起来（`），示例：\n\n`alert()`\n\n\n1\n\n\nalert()\n\n\n# 代码区块\n\n用三个反引号 ``` 包裹一段代码，并指定一种语言（也可以不指定），指定代码语言后会有代码的颜色高亮\n\n本代码区块为示例说明：\n\n​```javascript\nfunction test() {\n\talert('test')\n}\n​```\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\nfunction test() {\n\talert('test')\n}\n\n\n1\n2\n3\n\n\n\n# 九、链接\n\n格式：\n\n[链接名称](链接地址)\n\n[链接名称](链接地址,可选的alt)\n\n或\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n示例：\n\n[百度](http://www.baidu.com,'百度')\n\n\n1\n\n\n百度\n\n直接显示链接地址：\n\n<http://www.baidu.com>\n\n\n1\n\n\nhttp://www.baidu.com\n\n\n# 变量链接\n\n链接可以用变量来代替，文档末尾或其他位置附带变量地址：\n\n这个链接用 1 作为网址变量 [google][1]\n这个链接用 baidu 作为网址变量 [baidu][baidu]\n\n然后在文档的结尾或其他位置给变量赋值（网址）\n  [1]: http://www.google.com/\n  [baidu]: http://www.baidu.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n这个链接用 1 作为网址变量 google\n\n这个链接用 baidu 作为网址变量 baidu\n\n\n# github仓库中使用内部链接\n\n可使用相对路径（前提是有该路径下的文件）\n[test](test.md)\n\n\n1\n2\n\n\ntest\n\n\n# 锚点链接\n\n本文件中每一个标题都是一个锚点，和html的锚点（#）类似\n\n[markdown](#markdown)\n\n\n1\n\n\n> 注： github对含有标点符号的标题进行锚点时会忽略掉标点符号， 本页中，如果这样写则无法跳转：[链接](#九、链接) 正确写法：[链接](#九链接)\n\nmarkdown\n\n链接\n\n流程图\n\n\n# 十、图片\n\n和链接的区别是前面多一个感叹号!\n\n![图片名](图片链接)\n\n\n1\n\n\n当然，你也可以像链接那样对图片地址使用变量:\n\n这里链接用 img 作为图片地址变量\n然后在文档的结尾或其他位置给变量赋值（图片地址）\n![runoob][img]\n[img]: https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 图片宽高\n\n如下想设置图片宽高，可以使用 <img> 标签。\n\n<img src=\"https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\" width=\"50px\" height=\"30px\">\n\n\n1\n\n\n\n# 相对路径以及github中使用图片\n\n不管是在本地还是在github同一个仓库中，如果图片存在，可以使用相对路径。\n\n相对路径图片：\n\n![头像图片](./md-img/test.jpg)\n\n\n1\n\n\ngithub上如果引用其他github仓库中的图片则要注意地址格式：仓库地址/raw/分支名/图片路径 或 https://raw.githubusercontent.com/用户名/仓库名/分支名/图片路径\n\n![其他仓库的图片1](https://github.com/xugaoyi/vue-music/raw/master/src/common/image/default.png)\n或\n![其他仓库的图片2](https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png)\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 十一、表格\n\n制作表格使用 |来分隔不同的单元格，使用-来分隔表头和其他行。\n\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n\n1\n2\n3\n4\n\n\n表头    表头\n单元格   单元格\n单元格   单元格\n\n对齐方式\n\n * -: 设置内容和标题栏居右对齐\n * :- 设置内容和标题栏居左对齐\n * :-: 设置内容和标题栏居中对齐\n\n| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n\n\n1\n2\n3\n4\n\n\n左对齐   右对齐   居中对齐\n单元格   单元格   单元格\n单元格   单元格   单元格\n\n\n# 十二、emoji表情包\n\nemoji表情英文名的前后加冒号，typore上先输入冒号再输入首字母有表情提示\n\n:smirk:\n\n\n1\n\n\n💋 😸🙈🐴 😏😊😃😄 ☀️\n\n更多表情名称请查看：表情包清单\n\n\n# 十三、其他技巧\n\n\n# 支持的 html 元素\n\n不在 markdown 语法涵盖范围之内的标签，都可以直接在文档里面用 html 撰写。\n\n目前支持的 html 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等等 ，如：\n\n使用 <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd> 重启电脑\n\n\n1\n\n\n使用 ctrl+alt+del 重启电脑\n\n我是使用b标签的加粗字体\n\n\n# 转义\n\nmarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用反斜杠转义字符：\n\n**未转义星号显示加粗**\n\\*\\* 转义显示星号 \\*\\*\n\n\n1\n2\n\n\n未转义星号显示加粗 ** 转义显示星号 **\n\nmarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n*** 以下部分在github或其他在线预览中暂未支持 ***\n\n----------------------------------------\n\n\n# 数学公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 tex 或 latex 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 mathjax 对数学公式进行渲染。如：\n\n$$\n\\mathbf{v}_1 \\times \\mathbf{v}_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial x}{\\partial u} &  \\frac{\\partial y}{\\partial u} & 0 \\\\\n\\frac{\\partial x}{\\partial v} &  \\frac{\\partial y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n$$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n$$ \\mathbf{v}_1 \\times \\mathbf{v}_2 = \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\ \\frac{\\partial x}{\\partial u} & \\frac{\\partial y}{\\partial u} & 0 \\ \\frac{\\partial x}{\\partial v} & \\frac{\\partial y}{\\partial v} & 0 \\ \\end{vmatrix} $$\n\n\n# 图表\n\n​```chart\n,budget,income,expenses,debt\njune,5000,8000,4000,6000\njuly,3000,1000,4000,3000\naug,5000,7000,6000,3000\nsep,7000,2000,3000,1000\noct,6000,5000,4000,2000\nnov,4000,3000,5000,\n\ntype: pie\ntitle: monthly revenue\nx.title: amount\ny.title: month\ny.suffix: $\n​```\n​```mermaid\nsequencediagram\na->>b: 是否已收到消息？\nb--\x3e>a: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n> 注：在typora中未支持\n\n\n# 流程图\n\n语法：\n​```mermaid\ngraph td\na[模块a] --\x3e|a1| b(模块b)\nb --\x3e c{判断条件c}\nc --\x3e|条件c1| d[模块d]\nc --\x3e|条件c2| e[模块e]\nc --\x3e|条件c3| f[模块f]\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n流程图相关文章：\n\nhttps://www.jianshu.com/p/b421cc723da5\n\nhttp://www.imooc.com/article/292708\n\n\n# 时序图\n\n​```mermaid\nsequencediagram\na->>b: 是否已收到消息？\nb--\x3e>a: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n\n\n\n# 甘特图\n\n​```mermaid\ngantt\ntitle 甘特图\ndateformat  yyyy-mm-dd\nsection 项目a\n任务1           :a1, 2018-06-06, 30d\n任务2     :after a1  , 20d\nsection 项目b\n任务3      :2018-06-12  , 12d\n任务4      : 24d\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n回到顶部",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"npm常用命令",frontmatter:{title:"npm常用命令",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/61f2f95fd7da14fd",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/03.npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",relativePath:"03.技术/01.技术文档/03.npm常用命令.md",key:"v-a713734c",path:"/pages/61f2f95fd7da14fd/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:14},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:5},{level:2,title:"使用技巧",slug:"使用技巧",normalizedTitle:"使用技巧",charIndex:1761},{level:2,title:"npm发布包教程",slug:"npm发布包教程",normalizedTitle:"npm发布包教程",charIndex:1912},{level:2,title:"nrm的作用与使用",slug:"nrm的作用与使用",normalizedTitle:"nrm的作用与使用",charIndex:1935}],excerpt:'<h1 id="npm常用命令"><a class="header-anchor" href="#npm常用命令">#</a> npm常用命令</h1>\n<h2 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h2>\n<p>npm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：</p>\n<ul>\n<li>允许用户从npm服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。</li>\n</ul>\n',headersStr:"简介 常用命令 使用技巧 npm发布包教程 nrm的作用与使用",content:'# npm常用命令\n\n\n# 简介\n\nnpm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：\n\n * 允许用户从npm服务器下载别人编写的第三方包到本地使用。\n * 允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。\n * 允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。\n\n\n# 常用命令\n\n# 检测是否安装及版本\n\nnpm -v # 显示版本号说明已经安装相应的版本\n\n\n1\n\n\n# 生成package.json文件\n\nnpm init\n\n\n1\n\n\n> package.json用来描述项目中用到的模块和其他信息\n\n# 安装模块\n\nnpm install # 安装package.json定义好的模块，简写 npm i\n\n# 安装包指定模块\nnpm i <ModuleName>\n\n# 全局安装\nnpm i <ModuleName> -g \n\n# 安装包的同时，将信息写入到package.json中的 dependencies 配置中\nnpm i <ModuleName> --save\n\n# 安装包的同时，将信息写入到package.json中的 devDependencies 配置中\nnpm i <ModuleName> --save-dev\n\n# 安装多模块\nnpm i <ModuleName1> <ModuleName2>\n\n# 安装方式参数：\n-save # 简写-S，加入到生产依赖中\n-save-dev # 简写-D，加入到开发依赖中\n-g # 全局安装 将安装包放在 /usr/local 下或者你 node 的安装目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 查看\n\n# 查看所有全局安装的包\nnpm ls -g\n\n# 查看本地项目中安装的包\nnpm ls\n\n# 查看包的 package.json文件\nnpm view <ModuleName>\n\n# 查看包的依赖关系\nnpm view <ModuleName> dependencies\n\n# 查看包的源文件地址\nnpm view <ModuleName> repository.url\n\n# 查看包所依赖的node版本\nnpm view <ModuleName> engines\n\n# 查看帮助\nnpm help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 更新模块\n\n# 更新本地模块\nnpm update <ModuleName>\n\n# 更新全局模块\nnpm update -g <ModuleName> # 更新全局软件包。\nnpm update -g # 更新所有的全局软件包。\nnpm outdated -g --depth=0 # 找出需要更新的包。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 卸载模块\n\n# 卸载本地模块\nnpm uninstall <ModuleName>\n\n# 卸载全局模块\nnpm uninstall -g <ModuleName> # 卸载全局软件包。\n\n\n1\n2\n3\n4\n5\n\n\n# 清空缓存\n\n# 清空npm缓存\nnpm cache clear\n\n\n1\n2\n\n\n# 使用淘宝镜像\n\n# 使用淘宝镜像\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n\n1\n2\n\n\n# 其他\n\n# 更改包内容后进行重建\nnpm rebuild <ModuleName>\n\n# 检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新\nnpm outdated\n\n# 访问npm的json文件，此命令将会打开一个网页\nnpm help json\n\n# 发布一个包的时候，需要检验某个包名是否存在\nnpm search <ModuleName>\n\n# 撤销自己发布过的某个版本代码\nnpm unpublish <package> <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 使用技巧\n\n# 多次安装不成功尝试先清除缓存\n\nnpm cache clean -f\n\n\n1\n\n\n# 查看已安装的依赖包版本号\n\nnpm ls <ModuleName>\n\n\n1\n\n\n> 注意：用此方法才能准确的知道项目使用的版本号，查看package.json时，有“^" 符号表示大于此版本\n\n\n# npm发布包教程\n\nnpm发布包教程\n\n\n# nrm的作用与使用\n\n# nrm是什么？\n\nnrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换\n\n# nrm的安装\n\nnpm install -g nrm\n\n\n1\n\n\n# nrm命令\n\nnrm ls　#查看可用的源（有*号的表示当前所使用的源,以下<registry>表示源的名称）\nnrm use <registry> # 将npm下载源切换成指定的源\nnrm add <registry> <url> # 添加源，url为源的路径\nnrm del <registry> # 删除源\nnrm test <registry> # 测试源的响应时间，可以作为使用哪个源的参考\n\nnrm help　# 查看nrm帮助\nnrm home <registry>　# 跳转到指定源的官网\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# nrm使用\n\n如果在你的网络不太理想或者受到其他网络限制导致不能使用npm原本的源进行下载时，nrm就非常有用了，你只需要：\n\nnrm ls # 查看可用的源\nnrm use <registry>　# 切换到指定源\n\n\n1\n2\n',normalizedContent:'# npm常用命令\n\n\n# 简介\n\nnpm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：\n\n * 允许用户从npm服务器下载别人编写的第三方包到本地使用。\n * 允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。\n * 允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。\n\n\n# 常用命令\n\n# 检测是否安装及版本\n\nnpm -v # 显示版本号说明已经安装相应的版本\n\n\n1\n\n\n# 生成package.json文件\n\nnpm init\n\n\n1\n\n\n> package.json用来描述项目中用到的模块和其他信息\n\n# 安装模块\n\nnpm install # 安装package.json定义好的模块，简写 npm i\n\n# 安装包指定模块\nnpm i <modulename>\n\n# 全局安装\nnpm i <modulename> -g \n\n# 安装包的同时，将信息写入到package.json中的 dependencies 配置中\nnpm i <modulename> --save\n\n# 安装包的同时，将信息写入到package.json中的 devdependencies 配置中\nnpm i <modulename> --save-dev\n\n# 安装多模块\nnpm i <modulename1> <modulename2>\n\n# 安装方式参数：\n-save # 简写-s，加入到生产依赖中\n-save-dev # 简写-d，加入到开发依赖中\n-g # 全局安装 将安装包放在 /usr/local 下或者你 node 的安装目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 查看\n\n# 查看所有全局安装的包\nnpm ls -g\n\n# 查看本地项目中安装的包\nnpm ls\n\n# 查看包的 package.json文件\nnpm view <modulename>\n\n# 查看包的依赖关系\nnpm view <modulename> dependencies\n\n# 查看包的源文件地址\nnpm view <modulename> repository.url\n\n# 查看包所依赖的node版本\nnpm view <modulename> engines\n\n# 查看帮助\nnpm help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 更新模块\n\n# 更新本地模块\nnpm update <modulename>\n\n# 更新全局模块\nnpm update -g <modulename> # 更新全局软件包。\nnpm update -g # 更新所有的全局软件包。\nnpm outdated -g --depth=0 # 找出需要更新的包。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 卸载模块\n\n# 卸载本地模块\nnpm uninstall <modulename>\n\n# 卸载全局模块\nnpm uninstall -g <modulename> # 卸载全局软件包。\n\n\n1\n2\n3\n4\n5\n\n\n# 清空缓存\n\n# 清空npm缓存\nnpm cache clear\n\n\n1\n2\n\n\n# 使用淘宝镜像\n\n# 使用淘宝镜像\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n\n1\n2\n\n\n# 其他\n\n# 更改包内容后进行重建\nnpm rebuild <modulename>\n\n# 检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新\nnpm outdated\n\n# 访问npm的json文件，此命令将会打开一个网页\nnpm help json\n\n# 发布一个包的时候，需要检验某个包名是否存在\nnpm search <modulename>\n\n# 撤销自己发布过的某个版本代码\nnpm unpublish <package> <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 使用技巧\n\n# 多次安装不成功尝试先清除缓存\n\nnpm cache clean -f\n\n\n1\n\n\n# 查看已安装的依赖包版本号\n\nnpm ls <modulename>\n\n\n1\n\n\n> 注意：用此方法才能准确的知道项目使用的版本号，查看package.json时，有“^" 符号表示大于此版本\n\n\n# npm发布包教程\n\nnpm发布包教程\n\n\n# nrm的作用与使用\n\n# nrm是什么？\n\nnrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换\n\n# nrm的安装\n\nnpm install -g nrm\n\n\n1\n\n\n# nrm命令\n\nnrm ls　#查看可用的源（有*号的表示当前所使用的源,以下<registry>表示源的名称）\nnrm use <registry> # 将npm下载源切换成指定的源\nnrm add <registry> <url> # 添加源，url为源的路径\nnrm del <registry> # 删除源\nnrm test <registry> # 测试源的响应时间，可以作为使用哪个源的参考\n\nnrm help　# 查看nrm帮助\nnrm home <registry>　# 跳转到指定源的官网\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# nrm使用\n\n如果在你的网络不太理想或者受到其他网络限制导致不能使用npm原本的源进行下载时，nrm就非常有用了，你只需要：\n\nnrm ls # 查看可用的源\nnrm use <registry>　# 切换到指定源\n\n\n1\n2\n',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"npm packageJson属性详解",frontmatter:{author:{name:"xugaoyi",link:"https://github.com/xugaoyi"},title:"npm packageJson属性详解",date:"2020-04-08T17:16:38.000Z",permalink:"/pages/dec4f3f00e71a312",categories:["技术","技术文档"],tags:[null]},regularPath:"/03.%E6%8A%80%E6%9C%AF/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/10.npm%20packageJson%E5%B1%9E%E6%80%A7%E8%AF%A6%E8%A7%A3.html",relativePath:"03.技术/01.技术文档/10.npm packageJson属性详解.md",key:"v-42c32c1c",path:"/pages/dec4f3f00e71a312/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:86},{level:2,title:"name",slug:"name",normalizedTitle:"name",charIndex:160},{level:2,title:"version",slug:"version",normalizedTitle:"version",charIndex:191},{level:2,title:"description",slug:"description",normalizedTitle:"description",charIndex:1036},{level:2,title:"keywords",slug:"keywords",normalizedTitle:"keywords",charIndex:1081},{level:2,title:"homepage",slug:"homepage",normalizedTitle:"homepage",charIndex:1114},{level:2,title:"bugs",slug:"bugs",normalizedTitle:"bugs",charIndex:1266},{level:2,title:"license",slug:"license",normalizedTitle:"license",charIndex:1496},{level:2,title:"和用户相关的属性: author, contributors",slug:"和用户相关的属性-author-contributors",normalizedTitle:"和用户相关的属性: author, contributors",charIndex:1666},{level:2,title:"files",slug:"files",normalizedTitle:"files",charIndex:2037},{level:2,title:"main",slug:"main",normalizedTitle:"main",charIndex:2013},{level:2,title:"bin",slug:"bin",normalizedTitle:"bin",charIndex:2444},{level:2,title:"man",slug:"man",normalizedTitle:"man",charIndex:3180},{level:2,title:"directories",slug:"directories",normalizedTitle:"directories",charIndex:4055},{level:3,title:"directories.lib",slug:"directories-lib",normalizedTitle:"directories.lib",charIndex:4211},{level:3,title:"directories.bin",slug:"directories-bin",normalizedTitle:"directories.bin",charIndex:4282},{level:3,title:"directories.man",slug:"directories-man",normalizedTitle:"directories.man",charIndex:4383},{level:3,title:"directories.doc",slug:"directories-doc",normalizedTitle:"directories.doc",charIndex:4440},{level:3,title:"directories.example",slug:"directories-example",normalizedTitle:"directories.example",charIndex:4514},{level:2,title:"repository",slug:"repository",normalizedTitle:"repository",charIndex:4561},{level:2,title:"scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:5066},{level:2,title:"config",slug:"config",normalizedTitle:"config",charIndex:146},{level:2,title:"dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:1017},{level:2,title:"URLs as Dependencies",slug:"urls-as-dependencies",normalizedTitle:"urls as dependencies",charIndex:6629},{level:2,title:"Git URLs as Dependencies",slug:"git-urls-as-dependencies",normalizedTitle:"git urls as dependencies",charIndex:6706},{level:2,title:"GitHub URLs",slug:"github-urls",normalizedTitle:"github urls",charIndex:7059},{level:2,title:"Local Paths",slug:"local-paths",normalizedTitle:"local paths",charIndex:7300},{level:2,title:"devDependencies",slug:"devdependencies",normalizedTitle:"devdependencies",charIndex:7631},{level:2,title:"peerDependencies",slug:"peerdependencies",normalizedTitle:"peerdependencies",charIndex:8354},{level:2,title:"bundledDependencies",slug:"bundleddependencies",normalizedTitle:"bundleddependencies",charIndex:8793},{level:2,title:"optionalDependencies",slug:"optionaldependencies",normalizedTitle:"optionaldependencies",charIndex:8870},{level:2,title:"engines",slug:"engines",normalizedTitle:"engines",charIndex:594},{level:2,title:"engineStrict",slug:"enginestrict",normalizedTitle:"enginestrict",charIndex:9646},{level:2,title:"os",slug:"os",normalizedTitle:"os",charIndex:1394},{level:2,title:"cpu",slug:"cpu",normalizedTitle:"cpu",charIndex:9846},{level:2,title:"preferGlobal",slug:"preferglobal",normalizedTitle:"preferglobal",charIndex:9962},{level:2,title:"private",slug:"private",normalizedTitle:"private",charIndex:10079},{level:2,title:"publishConfig",slug:"publishconfig",normalizedTitle:"publishconfig",charIndex:10172},{level:2,title:"DEFAULT VALUES",slug:"default-values",normalizedTitle:"default values",charIndex:10286},{level:2,title:"参考文档列表(https://docs.npmjs.com/)",slug:"参考文档列表-https-docs-npmjs-com",normalizedTitle:"参考文档列表(https://docs.npmjs.com/)",charIndex:10599}],excerpt:'<h1 id="npm-package-json属性详解"><a class="header-anchor" href="#npm-package-json属性详解">#</a> npm package.json属性详解</h1>\n<blockquote>\n<p>本文转自<a href="https://www.cnblogs.com/tzyy/p/5193811.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/tzyy/p/5193811.html<OutboundLink/></a>，作者：TZYY</p>\n</blockquote>\n<h2 id="概述"><a class="header-anchor" href="#概述">#</a> 概述</h2>\n<p><code>package.json</code>必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过<code>npm-config</code>来生成</p>\n',headersStr:"概述 name version description keywords homepage bugs license 和用户相关的属性: author, contributors files main bin man directories directories.lib directories.bin directories.man directories.doc directories.example repository scripts config dependencies URLs as Dependencies Git URLs as Dependencies GitHub URLs Local Paths devDependencies peerDependencies bundledDependencies optionalDependencies engines engineStrict os cpu preferGlobal private publishConfig DEFAULT VALUES 参考文档列表(https://docs.npmjs.com/)",content:'# npm package.json属性详解\n\n> 本文转自https://www.cnblogs.com/tzyy/p/5193811.html，作者：TZYY\n\n\n# 概述\n\npackage.json必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过npm-config来生成\n\n\n# name\n\npackage.json中最重要的属性是name和version两个属性，这两个属性是必须要有的，否则模块就无法被安装，这两个属性一起形成了一个npm模块的唯一标识符。模块中内容变更的同时，模块版本也应该一起变化。 name属性就是你的模块名称，下面是一些命名规则:\n\n * name必须小于等于214个字节，包括前缀名称在内（如 xxx/xxxmodule）。\n\n * name不能以"_"或"."开头\n\n * 不能含有大写字母\n\n * name会成为url的一部分，不能含有url非法字符\n   \n   下面是官网文档的一些建议：\n\n * 不要使用和node核心模块一样的名称\n\n * name中不要含有"js"和"node"。 It\'s assumed that it\'s js, since you\'re writing a package.json file, and you can specify the engine using the "engines" field. (See below.)\n\n * name属性会成为模块url、命令行中的一个参数或者一个文件夹名称，任何非url安全的字符在name中都不能使用，也不能以"_"或"."开头\n\n * name属性也许会被写在require()的参数中，所以最好取个简短而语义化的值。\n\n * 创建一个模块前可以先到后边的网址查查name是否已经被占用. https://www.npmjs.com/\n   \n   * # 发布一个包的时候，需要检验某个包名是否存在\n     npm search <ModuleName>\n     \n     \n     1\n     2\n     \n\nname属性可以有一些前缀如 e.g. @myorg/mypackage.在npm-scope(7)的文档中可以看到详细说明\n\n\n# version\n\nversion必须可以被npm依赖的一个node-semver模块解析。具体规则见下面的dependencies模块\n\n\n# description\n\n一个描述，方便别人了解你的模块作用，搜索的时候也有用。\n\n\n# keywords\n\n一个字符串数组，方便别人搜索到本模块\n\n\n# homepage\n\n项目主页url 注意: 这个项目主页url和url属性不同，如果你填写了url属性，npm注册工具会认为你把项目发布到其他地方了，获取模块的时候不会从npm官方仓库获取，而是会重定向到url属性配置的地址。 （原文档中用了 spit(吐)这个单词，作者表示他不是在开玩笑:）\n\n\n# bugs\n\n填写一个bug提交地址或者一个邮箱，被你的模块坑到的人可以通过这里吐槽，例如：\n\n{\n    "url" : "https://github.com/owner/project/issues",\n    "email" : "project@hostname.com"\n}\n\n\n1\n2\n3\n4\n\n\nurl和email可以任意填或不填，如果只填一个，可以直接写成一个字符串而不是对象。如果填写了url，npm bugs命令会使用这个url。\n\n\n# license\n\n你应该为你的模块制定一个协议，让用户知道他们有何权限来使用你的模块，以及使用该模块有哪些限制。最简单的，例如你用BSD-3-Clause 或 MIT之类的协议，如下：\n\n{ "license" : "MIT" }\n\n\n1\n\n\n你可以在https://spdx.org/licenses/ 这个地址查阅协议列表 。\n\n\n# 和用户相关的属性: author, contributors\n\nauthor是一个码农， contributors是一个码农数组。 person是一个有一些描述属性的对象，如下 like this:\n\n{\n    "name" : "Barney Rubble",\n    "email" : "b@rubble.com",\n    "url" : "http://barnyrubble.tumblr.com/"\n}\n\n\n1\n2\n3\n4\n5\n\n\n也可以按如下格式缩写，npm会帮着转换:\n\n"Barney Rubble b@rubble.com (http://barnyrubble.tumblr.com/)"\n\n\n1\n\n\nemail和url属性实际上都是可以省略的。描述用户信息的还有一个maintainers（维护者）属性。\n\n\n# files\n\nfiles属性的值是一个数组，内容是模块下文件名或者文件夹名，如果是文件夹名，则文件夹下所有的文件也会被包含进来（除非文件被另一些配置排除了） 你也可以在模块根目录下创建一个.npmignore文件（windows下无法直接创建以"."开头的文件，使用linux命令行工具创建如git bash），写在这个文件里边的文件即便被写在files属性里边也会被排除在外，这个文件的写法".gitignore"类似。\n\n\n# main\n\nmain属性指定了程序的主入口文件。意思是，如果你的模块被命名为foo，用户安装了这个模块并通过require("foo")来使用这个模块，那么require返回的内容就是main属性指定的文件中 module.exports指向的对象。 它应该指向模块根目录下的一个文件。对大对数模块而言，这个属性更多的是让模块有一个主入口文件，然而很多模块并不写这个属性。\n\n\n# bin\n\n很多模块有一个或多个需要配置到PATH路径下的可执行模块，npm让这个工作变得十分简单（实际上npm本身也是通过bin属性安装为一个可执行命令的） 如果要用npm的这个功能，在package.json里边配置一个bin属性。bin属性是一个已命令名称为key，本地文件名称为value的map如下：\n\n{\n    "bin" : { "myapp" : "./cli.js" }\n}\n\n\n1\n2\n3\n\n\n模块安装的时候，若是全局安装，则npm会为bin中配置的文件在bin目录下创建一个软连接（对于windows系统，默认会在C:\\Users\\username\\AppData\\Roaming\\npm目录下），若是局部安装，则会在项目内的./node_modules/.bin/目录下创建一个软链接。 因此，按上面的例子，当你安装myapp的时候，npm就会为cli.js在/usr/local/bin/myapp路径创建一个软链接。 如果你的模块只有一个可执行文件，并且它的命令名称和模块名称一样，你可以只写一个字符串来代替上面那种配置，例如：\n\n{ \n    "name": "my-program",\n    "version": "1.2.5", \n    "bin": "./path/to/program"\n}\n\n\n1\n2\n3\n4\n5\n\n\n作用和如下写法相同:\n\n{ \n    "name": "my-program", \n    "version": "1.2.5", \n    "bin" : { \n        "my-program" : "./path/to/program" \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# man\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称。例如:\n\n{\n    "name" : "foo",\n    "version" : "1.2.3", \n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : "./man/doc.1"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n通过man foo命令会得到 ./man/doc.1 文件的内容。 如果man文件名称不是以模块名称开头的，安装的时候会给加上模块名称前缀。因此，下面这段配置：\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3", \n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建一些文件来作为man foo和man foo-bar命令的结果。 man文件必须以数字结尾，或者如果被压缩了，以.gz结尾。数字表示文件将被安装到man的哪个部分。\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3",\n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/foo.2" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建 man foo 和 man 2 foo 两条命令。\n\n\n# directories\n\nCommonJs通过directories来制定一些方法来描述模块的结构，看看npm的package.json文件https://registry.npmjs.org/npm/latest ，可以发现里边有这个字段的内容。 目前这个配置没有任何作用，将来可能会整出一些花样来。\n\n\n# directories.lib\n\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n\n# directories.bin\n\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n\n# directories.man\n\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n\n# directories.doc\n\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n\n# directories.example\n\n放一些示例脚本，或许某一天会有用 - -！\n\n\n# repository\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助。像这样：\n\n"repository" :\n  {\n      "type" : "git",\n      "url" : "https://github.com/npm/npm.git"\n  }\n\n"repository" :\n  { \n      "type" : "svn", \n      "url" : "https://v8.googlecode.com/svn/trunk/"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n若你的模块放在GitHub, GitHub gist, Bitbucket, or GitLab的仓库里，npm install的时候可以使用缩写标记来完成：\n\n"repository": "npm/npm"\n\n"repository": "gist:11081aaa281"\n\n"repository": "bitbucket:example/repo"\n\n"repository": "gitlab:another/repo"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# scripts\n\nscripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令。key是生命周期中的事件，value是要执行的命令。 具体的内容有 install start stop 等，详见 https://docs.npmjs.com/misc/scripts\n\n\n# config\n\n用来设置一些项目不怎么变化的项目配置，例如port等。 用户用的时候可以使用如下用法：\n\nhttp.createServer(...).listen(process.env.npm_package_config_port)\n\n\n1\n\n\n可以通过npm config set foo:port 80来修改config。详见https://docs.npmjs.com/misc/config\n\n{ \n    "name" : "foo", \n    "config" : { "port" : "8080" }\n}\n\n\n1\n2\n3\n4\n\n\n\n# dependencies\n\ndependencies属性是一个对象，配置模块依赖的模块列表，key是模块名称，value是版本范围，版本范围是一个字符，可以被一个或多个空格分割。 dependencies也可以被指定为一个git地址或者一个压缩包地址。 不要把测试工具或transpilers写到dependencies中。 下面是一些写法，详见https://docs.npmjs.com/misc/semver\n\n * version 精确匹配版本\n * >version 必须大于某个版本\n * >=version 大于等于\n * <version 小于\n * <=versionversion 小于\n * ~version "约等于"，具体规则详见semver文档\n * ^version "兼容版本"具体规则详见semver文档\n * 1.2.x 仅一点二点几的版本\n * http://... 见下面url作为denpendencies的说明\n * * 任何版本\n * "" 空字符，和*相同\n * version1 - version2 相当于 >=version1 <=version2.\n * range1 || range2 范围1和范围2满足任意一个都行\n * git... 见下面git url作为denpendencies的说明\n * user/repo See 见下面GitHub仓库的说明\n * tag 发布的一个特殊的标签，见npm-tag的文档 https://docs.npmjs.com/getting-started/using-tags\n * path/path/path 见下面本地模块的说明 下面的写法都是可以的:\n\n{ "dependencies" :\n  { "foo" : "1.0.0 - 2.9999.9999"\n  , "bar" : ">=1.0.2 <2.1.2"\n  , "baz" : ">1.0.2 <=2.3.4"\n  , "boo" : "2.0.1"\n  , "qux" : "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"\n  , "asd" : "http://asdf.com/asdf.tar.gz"\n  , "til" : "~1.2"\n  , "elf" : "~1.2.3"\n  , "two" : "2.x"\n  , "thr" : "3.3.x"\n  , "lat" : "latest"\n  , "dyl" : "file:../dyl"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# URLs as Dependencies\n\n在版本范围的地方可以写一个url指向一个压缩包，模块安装的时候会把这个压缩包下载下来安装到模块本地。\n\n\n# Git URLs as Dependencies\n\nGit url可以像下面一样:\n\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n\n\n1\n2\n3\n4\n5\n\n\ncommit-ish 可以是任意标签，哈希值，或者可以检出的分支，默认是master分支。\n\n\n# GitHub URLs\n\n支持github的 username/modulename 的写法，#后边可以加后缀写明分支hash或标签：\n\n{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "visionmedia/express",\n    "mocha": "visionmedia/mocha#4727d357ea"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Local Paths\n\nnpm2.0.0版本以上可以提供一个本地路径来安装一个本地的模块，通过npm install xxx --save 来安装，格式如下：\n\n../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n\n\n1\n2\n3\n4\n\n\npackage.json 生成的相对路径如下:\n\n{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n这种属性在离线开发或者测试需要用npm install的情况，又不想自己搞一个npm server的时候有用，但是发布模块到公共仓库时不应该使用这种属性。\n\n\n# devDependencies\n\n如果有人想要下载并使用你的模块，也许他们并不希望或需要下载一些你在开发过程中使用的额外的测试或者文档框架。 在这种情况下，最好的方法是把这些依赖添加到devDependencies属性的对象中。 这些模块会在npm link或者npm install的时候被安装，也可以像其他npm配置一样被管理，详见npm的config文档。 对于一些跨平台的构建任务，例如把CoffeeScript编译成JavaScript，就可以通过在package.json的script属性里边配置prepublish脚本来完成这个任务，然后需要依赖的coffee-script模块就写在devDependencies属性种。 例如:\n\n{ "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devDependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepublish": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nprepublish脚本会在发布之前运行，因此用户在使用之前就不用再自己去完成编译的过程了。在开发模式下，运行npm install也会执行这个脚本（见npm script文档），因此可以很方便的调试。\n\n\n# peerDependencies\n\n有时候做一些插件开发，比如grunt等工具的插件，它们往往是在grunt的某个版本的基础上开发的，而在他们的代码中并不会出现require("grunt")这样的依赖，dependencies配置里边也不会写上grunt的依赖，为了说明此模块只能作为插件跑在宿主的某个版本范围下，可以配置peerDependencies：\n\n{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerDependencies": {\n    "tea": "2.x"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面这个配置确保再npm install的时候tea-latte会和2.x版本的tea一起安装，而且它们两个的依赖关系是同级的： ├── tea-latte@1.3.5 └── tea@2.2.0 这个配置的目的是让npm知道，如果要使用此插件模块，请确保安装了兼容版本的宿主模块。\n\n\n# bundledDependencies\n\n上面的单词少个d，写成bundleDependencies也可以。 指定发布的时候会被一起打包的模块。\n\n\n# optionalDependencies\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionalDependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败。 当然，这种模块就需要你自己在代码中处理模块确实的情况了，例如：\n\ntry {\n  var foo = require(\'foo\')\n  var fooVersion = require(\'foo/package.json\').version\n} catch (er) {\n  foo = null\n}\nif ( notGoodFooVersion(fooVersion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.doFooThings()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\noptionalDependencies 中的配置会覆盖dependencies中的配置，最好只在一个地方写。\n\n\n# engines\n\n你可以指定项目运行的node版本范围，如下： { "engines" : { "node" : ">=0.10.3 <0.12" } } 和dependencies一样，如果你不指定版本范围或者指定为*，任何版本的node都可以。 也可以指定一些npm版本可以正确的安装你的模块，例如： { "engines" : { "npm" : "~1.0.20" } } 要注意的是，除非你设置了engine-strict属性，engines属性是仅供参考的。\n\n\n# engineStrict\n\n注意：这个属性已经弃用，将在npm 3.0.0 版本干掉。\n\n\n# os\n\n可以指定你的模块只能在哪个操作系统上跑： "os" : [ "darwin", "linux" ] 也可以指定黑名单而不是白名单： "os" : [ "!win32" ] 服务的操作系统是由process.platform来判断的，这个属性允许黑白名单同时存在，虽然没啥必要这样搞...\n\n\n# cpu\n\n限制模块只能在某某cpu架构下运行 "cpu" : [ "x64", "ia32" ] 同样可以设置黑名单: "cpu" : [ "!arm", "!mips" ] cpu架构通过 process.arch 判断\n\n\n# preferGlobal\n\n如果您的软件包主要用于安装到全局的命令行应用程序，那么该值设置为true ，如果它被安装在本地，则提供一个警告。实际上该配置并没有阻止用户把模块安装到本地，只是防止该模块被错误的使用引起一些问题。\n\n\n# private\n\n如果这个属性被设置为true，npm将拒绝发布它，这是为了防止一个私有模块被无意间发布出去。如果你只想让模块被发布到一个特定的npm仓库，如一个内部的仓库，可与在下面的publishConfig中配置仓库参数。\n\n\n# publishConfig\n\n这个配置是会在模块发布时用到的一些值的集合。如果你不想模块被默认被标记为最新的，或者默认发布到公共仓库，可以在这里配置tag或仓库地址。\n\n\n# DEFAULT VALUES\n\nnpm设置了一些默认参数，如： "scripts": {"start": "node server.js"} 如果模块根目录下有一个server.js文件，那么npm start会默认运行这个文件。 "scripts":{"preinstall": "node-gyp rebuild"} 如果模块根目录下有binding.gyp, npm将默认用node-gyp来编译preinstall的脚本 "contributors": [...] 若模块根目录下有AUTHORS 文件，则npm会按Name (url)格式解析每一行的数据添加到contributors中，可以用#添加行注释\n\n\n# 参考文档列表(https://docs.npmjs.com/)\n\nsemver(7) npm-init(1) npm-version(1) npm-config(1) npm-config(7) npm-help(1) npm-faq(7) npm-install(1) npm-publish(1) npm-rm(1)',normalizedContent:'# npm package.json属性详解\n\n> 本文转自https://www.cnblogs.com/tzyy/p/5193811.html，作者：tzyy\n\n\n# 概述\n\npackage.json必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过npm-config来生成\n\n\n# name\n\npackage.json中最重要的属性是name和version两个属性，这两个属性是必须要有的，否则模块就无法被安装，这两个属性一起形成了一个npm模块的唯一标识符。模块中内容变更的同时，模块版本也应该一起变化。 name属性就是你的模块名称，下面是一些命名规则:\n\n * name必须小于等于214个字节，包括前缀名称在内（如 xxx/xxxmodule）。\n\n * name不能以"_"或"."开头\n\n * 不能含有大写字母\n\n * name会成为url的一部分，不能含有url非法字符\n   \n   下面是官网文档的一些建议：\n\n * 不要使用和node核心模块一样的名称\n\n * name中不要含有"js"和"node"。 it\'s assumed that it\'s js, since you\'re writing a package.json file, and you can specify the engine using the "engines" field. (see below.)\n\n * name属性会成为模块url、命令行中的一个参数或者一个文件夹名称，任何非url安全的字符在name中都不能使用，也不能以"_"或"."开头\n\n * name属性也许会被写在require()的参数中，所以最好取个简短而语义化的值。\n\n * 创建一个模块前可以先到后边的网址查查name是否已经被占用. https://www.npmjs.com/\n   \n   * # 发布一个包的时候，需要检验某个包名是否存在\n     npm search <modulename>\n     \n     \n     1\n     2\n     \n\nname属性可以有一些前缀如 e.g. @myorg/mypackage.在npm-scope(7)的文档中可以看到详细说明\n\n\n# version\n\nversion必须可以被npm依赖的一个node-semver模块解析。具体规则见下面的dependencies模块\n\n\n# description\n\n一个描述，方便别人了解你的模块作用，搜索的时候也有用。\n\n\n# keywords\n\n一个字符串数组，方便别人搜索到本模块\n\n\n# homepage\n\n项目主页url 注意: 这个项目主页url和url属性不同，如果你填写了url属性，npm注册工具会认为你把项目发布到其他地方了，获取模块的时候不会从npm官方仓库获取，而是会重定向到url属性配置的地址。 （原文档中用了 spit(吐)这个单词，作者表示他不是在开玩笑:）\n\n\n# bugs\n\n填写一个bug提交地址或者一个邮箱，被你的模块坑到的人可以通过这里吐槽，例如：\n\n{\n    "url" : "https://github.com/owner/project/issues",\n    "email" : "project@hostname.com"\n}\n\n\n1\n2\n3\n4\n\n\nurl和email可以任意填或不填，如果只填一个，可以直接写成一个字符串而不是对象。如果填写了url，npm bugs命令会使用这个url。\n\n\n# license\n\n你应该为你的模块制定一个协议，让用户知道他们有何权限来使用你的模块，以及使用该模块有哪些限制。最简单的，例如你用bsd-3-clause 或 mit之类的协议，如下：\n\n{ "license" : "mit" }\n\n\n1\n\n\n你可以在https://spdx.org/licenses/ 这个地址查阅协议列表 。\n\n\n# 和用户相关的属性: author, contributors\n\nauthor是一个码农， contributors是一个码农数组。 person是一个有一些描述属性的对象，如下 like this:\n\n{\n    "name" : "barney rubble",\n    "email" : "b@rubble.com",\n    "url" : "http://barnyrubble.tumblr.com/"\n}\n\n\n1\n2\n3\n4\n5\n\n\n也可以按如下格式缩写，npm会帮着转换:\n\n"barney rubble b@rubble.com (http://barnyrubble.tumblr.com/)"\n\n\n1\n\n\nemail和url属性实际上都是可以省略的。描述用户信息的还有一个maintainers（维护者）属性。\n\n\n# files\n\nfiles属性的值是一个数组，内容是模块下文件名或者文件夹名，如果是文件夹名，则文件夹下所有的文件也会被包含进来（除非文件被另一些配置排除了） 你也可以在模块根目录下创建一个.npmignore文件（windows下无法直接创建以"."开头的文件，使用linux命令行工具创建如git bash），写在这个文件里边的文件即便被写在files属性里边也会被排除在外，这个文件的写法".gitignore"类似。\n\n\n# main\n\nmain属性指定了程序的主入口文件。意思是，如果你的模块被命名为foo，用户安装了这个模块并通过require("foo")来使用这个模块，那么require返回的内容就是main属性指定的文件中 module.exports指向的对象。 它应该指向模块根目录下的一个文件。对大对数模块而言，这个属性更多的是让模块有一个主入口文件，然而很多模块并不写这个属性。\n\n\n# bin\n\n很多模块有一个或多个需要配置到path路径下的可执行模块，npm让这个工作变得十分简单（实际上npm本身也是通过bin属性安装为一个可执行命令的） 如果要用npm的这个功能，在package.json里边配置一个bin属性。bin属性是一个已命令名称为key，本地文件名称为value的map如下：\n\n{\n    "bin" : { "myapp" : "./cli.js" }\n}\n\n\n1\n2\n3\n\n\n模块安装的时候，若是全局安装，则npm会为bin中配置的文件在bin目录下创建一个软连接（对于windows系统，默认会在c:\\users\\username\\appdata\\roaming\\npm目录下），若是局部安装，则会在项目内的./node_modules/.bin/目录下创建一个软链接。 因此，按上面的例子，当你安装myapp的时候，npm就会为cli.js在/usr/local/bin/myapp路径创建一个软链接。 如果你的模块只有一个可执行文件，并且它的命令名称和模块名称一样，你可以只写一个字符串来代替上面那种配置，例如：\n\n{ \n    "name": "my-program",\n    "version": "1.2.5", \n    "bin": "./path/to/program"\n}\n\n\n1\n2\n3\n4\n5\n\n\n作用和如下写法相同:\n\n{ \n    "name": "my-program", \n    "version": "1.2.5", \n    "bin" : { \n        "my-program" : "./path/to/program" \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# man\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称。例如:\n\n{\n    "name" : "foo",\n    "version" : "1.2.3", \n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : "./man/doc.1"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n通过man foo命令会得到 ./man/doc.1 文件的内容。 如果man文件名称不是以模块名称开头的，安装的时候会给加上模块名称前缀。因此，下面这段配置：\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3", \n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建一些文件来作为man foo和man foo-bar命令的结果。 man文件必须以数字结尾，或者如果被压缩了，以.gz结尾。数字表示文件将被安装到man的哪个部分。\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3",\n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/foo.2" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建 man foo 和 man 2 foo 两条命令。\n\n\n# directories\n\ncommonjs通过directories来制定一些方法来描述模块的结构，看看npm的package.json文件https://registry.npmjs.org/npm/latest ，可以发现里边有这个字段的内容。 目前这个配置没有任何作用，将来可能会整出一些花样来。\n\n\n# directories.lib\n\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n\n# directories.bin\n\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n\n# directories.man\n\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n\n# directories.doc\n\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n\n# directories.example\n\n放一些示例脚本，或许某一天会有用 - -！\n\n\n# repository\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助。像这样：\n\n"repository" :\n  {\n      "type" : "git",\n      "url" : "https://github.com/npm/npm.git"\n  }\n\n"repository" :\n  { \n      "type" : "svn", \n      "url" : "https://v8.googlecode.com/svn/trunk/"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n若你的模块放在github, github gist, bitbucket, or gitlab的仓库里，npm install的时候可以使用缩写标记来完成：\n\n"repository": "npm/npm"\n\n"repository": "gist:11081aaa281"\n\n"repository": "bitbucket:example/repo"\n\n"repository": "gitlab:another/repo"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# scripts\n\nscripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令。key是生命周期中的事件，value是要执行的命令。 具体的内容有 install start stop 等，详见 https://docs.npmjs.com/misc/scripts\n\n\n# config\n\n用来设置一些项目不怎么变化的项目配置，例如port等。 用户用的时候可以使用如下用法：\n\nhttp.createserver(...).listen(process.env.npm_package_config_port)\n\n\n1\n\n\n可以通过npm config set foo:port 80来修改config。详见https://docs.npmjs.com/misc/config\n\n{ \n    "name" : "foo", \n    "config" : { "port" : "8080" }\n}\n\n\n1\n2\n3\n4\n\n\n\n# dependencies\n\ndependencies属性是一个对象，配置模块依赖的模块列表，key是模块名称，value是版本范围，版本范围是一个字符，可以被一个或多个空格分割。 dependencies也可以被指定为一个git地址或者一个压缩包地址。 不要把测试工具或transpilers写到dependencies中。 下面是一些写法，详见https://docs.npmjs.com/misc/semver\n\n * version 精确匹配版本\n * >version 必须大于某个版本\n * >=version 大于等于\n * <version 小于\n * <=versionversion 小于\n * ~version "约等于"，具体规则详见semver文档\n * ^version "兼容版本"具体规则详见semver文档\n * 1.2.x 仅一点二点几的版本\n * http://... 见下面url作为denpendencies的说明\n * * 任何版本\n * "" 空字符，和*相同\n * version1 - version2 相当于 >=version1 <=version2.\n * range1 || range2 范围1和范围2满足任意一个都行\n * git... 见下面git url作为denpendencies的说明\n * user/repo see 见下面github仓库的说明\n * tag 发布的一个特殊的标签，见npm-tag的文档 https://docs.npmjs.com/getting-started/using-tags\n * path/path/path 见下面本地模块的说明 下面的写法都是可以的:\n\n{ "dependencies" :\n  { "foo" : "1.0.0 - 2.9999.9999"\n  , "bar" : ">=1.0.2 <2.1.2"\n  , "baz" : ">1.0.2 <=2.3.4"\n  , "boo" : "2.0.1"\n  , "qux" : "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"\n  , "asd" : "http://asdf.com/asdf.tar.gz"\n  , "til" : "~1.2"\n  , "elf" : "~1.2.3"\n  , "two" : "2.x"\n  , "thr" : "3.3.x"\n  , "lat" : "latest"\n  , "dyl" : "file:../dyl"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# urls as dependencies\n\n在版本范围的地方可以写一个url指向一个压缩包，模块安装的时候会把这个压缩包下载下来安装到模块本地。\n\n\n# git urls as dependencies\n\ngit url可以像下面一样:\n\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n\n\n1\n2\n3\n4\n5\n\n\ncommit-ish 可以是任意标签，哈希值，或者可以检出的分支，默认是master分支。\n\n\n# github urls\n\n支持github的 username/modulename 的写法，#后边可以加后缀写明分支hash或标签：\n\n{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "visionmedia/express",\n    "mocha": "visionmedia/mocha#4727d357ea"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# local paths\n\nnpm2.0.0版本以上可以提供一个本地路径来安装一个本地的模块，通过npm install xxx --save 来安装，格式如下：\n\n../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n\n\n1\n2\n3\n4\n\n\npackage.json 生成的相对路径如下:\n\n{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n这种属性在离线开发或者测试需要用npm install的情况，又不想自己搞一个npm server的时候有用，但是发布模块到公共仓库时不应该使用这种属性。\n\n\n# devdependencies\n\n如果有人想要下载并使用你的模块，也许他们并不希望或需要下载一些你在开发过程中使用的额外的测试或者文档框架。 在这种情况下，最好的方法是把这些依赖添加到devdependencies属性的对象中。 这些模块会在npm link或者npm install的时候被安装，也可以像其他npm配置一样被管理，详见npm的config文档。 对于一些跨平台的构建任务，例如把coffeescript编译成javascript，就可以通过在package.json的script属性里边配置prepublish脚本来完成这个任务，然后需要依赖的coffee-script模块就写在devdependencies属性种。 例如:\n\n{ "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devdependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepublish": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nprepublish脚本会在发布之前运行，因此用户在使用之前就不用再自己去完成编译的过程了。在开发模式下，运行npm install也会执行这个脚本（见npm script文档），因此可以很方便的调试。\n\n\n# peerdependencies\n\n有时候做一些插件开发，比如grunt等工具的插件，它们往往是在grunt的某个版本的基础上开发的，而在他们的代码中并不会出现require("grunt")这样的依赖，dependencies配置里边也不会写上grunt的依赖，为了说明此模块只能作为插件跑在宿主的某个版本范围下，可以配置peerdependencies：\n\n{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerdependencies": {\n    "tea": "2.x"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面这个配置确保再npm install的时候tea-latte会和2.x版本的tea一起安装，而且它们两个的依赖关系是同级的： ├── tea-latte@1.3.5 └── tea@2.2.0 这个配置的目的是让npm知道，如果要使用此插件模块，请确保安装了兼容版本的宿主模块。\n\n\n# bundleddependencies\n\n上面的单词少个d，写成bundledependencies也可以。 指定发布的时候会被一起打包的模块。\n\n\n# optionaldependencies\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionaldependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败。 当然，这种模块就需要你自己在代码中处理模块确实的情况了，例如：\n\ntry {\n  var foo = require(\'foo\')\n  var fooversion = require(\'foo/package.json\').version\n} catch (er) {\n  foo = null\n}\nif ( notgoodfooversion(fooversion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.dofoothings()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\noptionaldependencies 中的配置会覆盖dependencies中的配置，最好只在一个地方写。\n\n\n# engines\n\n你可以指定项目运行的node版本范围，如下： { "engines" : { "node" : ">=0.10.3 <0.12" } } 和dependencies一样，如果你不指定版本范围或者指定为*，任何版本的node都可以。 也可以指定一些npm版本可以正确的安装你的模块，例如： { "engines" : { "npm" : "~1.0.20" } } 要注意的是，除非你设置了engine-strict属性，engines属性是仅供参考的。\n\n\n# enginestrict\n\n注意：这个属性已经弃用，将在npm 3.0.0 版本干掉。\n\n\n# os\n\n可以指定你的模块只能在哪个操作系统上跑： "os" : [ "darwin", "linux" ] 也可以指定黑名单而不是白名单： "os" : [ "!win32" ] 服务的操作系统是由process.platform来判断的，这个属性允许黑白名单同时存在，虽然没啥必要这样搞...\n\n\n# cpu\n\n限制模块只能在某某cpu架构下运行 "cpu" : [ "x64", "ia32" ] 同样可以设置黑名单: "cpu" : [ "!arm", "!mips" ] cpu架构通过 process.arch 判断\n\n\n# preferglobal\n\n如果您的软件包主要用于安装到全局的命令行应用程序，那么该值设置为true ，如果它被安装在本地，则提供一个警告。实际上该配置并没有阻止用户把模块安装到本地，只是防止该模块被错误的使用引起一些问题。\n\n\n# private\n\n如果这个属性被设置为true，npm将拒绝发布它，这是为了防止一个私有模块被无意间发布出去。如果你只想让模块被发布到一个特定的npm仓库，如一个内部的仓库，可与在下面的publishconfig中配置仓库参数。\n\n\n# publishconfig\n\n这个配置是会在模块发布时用到的一些值的集合。如果你不想模块被默认被标记为最新的，或者默认发布到公共仓库，可以在这里配置tag或仓库地址。\n\n\n# default values\n\nnpm设置了一些默认参数，如： "scripts": {"start": "node server.js"} 如果模块根目录下有一个server.js文件，那么npm start会默认运行这个文件。 "scripts":{"preinstall": "node-gyp rebuild"} 如果模块根目录下有binding.gyp, npm将默认用node-gyp来编译preinstall的脚本 "contributors": [...] 若模块根目录下有authors 文件，则npm会按name (url)格式解析每一行的数据添加到contributors中，可以用#添加行注释\n\n\n# 参考文档列表(https://docs.npmjs.com/)\n\nsemver(7) npm-init(1) npm-version(1) npm-config(1) npm-config(7) npm-help(1) npm-faq(7) npm-install(1) npm-publish(1) npm-rm(1)',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"yaml语言教程",frontmatter:{title:"yaml语言教程",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/4e8444e2d534d14f",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/15.yaml%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B.html",relativePath:"03.技术/01.技术文档/15.yaml语言教程.md",key:"v-2d73f679",path:"/pages/4e8444e2d534d14f/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:15},{level:2,title:"基本语法",slug:"基本语法",normalizedTitle:"基本语法",charIndex:326},{level:2,title:"数据类型",slug:"数据类型",normalizedTitle:"数据类型",charIndex:422},{level:2,title:"YAML 对象",slug:"yaml-对象",normalizedTitle:"yaml 对象",charIndex:576},{level:2,title:"YAML 数组",slug:"yaml-数组",normalizedTitle:"yaml 数组",charIndex:1086},{level:2,title:"复合结构（对象和数组组合）",slug:"复合结构-对象和数组组合",normalizedTitle:"复合结构（对象和数组组合）",charIndex:1594},{level:2,title:"纯量",slug:"纯量",normalizedTitle:"纯量",charIndex:549},{level:2,title:"转换数据格式",slug:"转换数据格式",normalizedTitle:"转换数据格式",charIndex:3050},{level:2,title:"锚点引用",slug:"锚点引用",normalizedTitle:"锚点引用",charIndex:3157}],excerpt:'<h1 id="yaml语言教程"><a class="header-anchor" href="#yaml语言教程">#</a> yaml语言教程</h1>\n<h2 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h2>\n<p>YAML 是 &quot;YAML Ain\'t a Markup Language&quot;（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：&quot;Yet Another Markup Language&quot;（仍是一种标记语言）。</p>\n',headersStr:"简介 基本语法 数据类型 YAML 对象 YAML 数组 复合结构（对象和数组组合） 纯量 转换数据格式 锚点引用",content:"# yaml语言教程\n\n\n# 简介\n\nYAML 是 \"YAML Ain't a Markup Language\"（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种标记语言）。\n\nYAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和YAML非常接近）。\n\nYAML 的配置文件后缀为 .yml，如：runoob.yml 。\n\n> yaml常用来用作配置文件，和json类似\n\n\n# 基本语法\n\n * 大小写敏感\n\n * 使用缩进表示层级关系\n\n * 缩进不允许使用tab，只允许空格\n\n * 缩进的空格数不重要，只要相同层级的元素左对齐即可\n\n * '#'表示注释\n\n\n# 数据类型\n\nYAML 支持以下几种数据类型：\n\n * 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n * 数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）\n * 纯量（scalars）：单个的、不可再分的值\n\n\n# YAML 对象\n\n对象的几种表示形式：\n\n1、对象键值对使用冒号结构表示 key: value，冒号后面要加一个空格。\n\nkey: value\n\n\n1\n\n\n2、也可以使用 key:{key1: value1, key2: value2, ...}。\n\nkey:{child-key1:value1,child-key2:value2}\n\n\n1\n\n\n3、还可以使用缩进表示层级关系；\n\nkey: \n    child-key1: value1\n    child-key2: value2\n\n\n1\n2\n3\n\n\n同2，只是表示形式不同。\n\n4、较为复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value：\n\n?  \n    - complexkey1\n    - complexkey2\n:\n    - complexvalue1\n    - complexvalue2\n\n\n1\n2\n3\n4\n5\n6\n\n\n意思即对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]\n\n\n# YAML 数组\n\n以 - 开头的行表示构成一个数组：\n\n- A\n- B\n- C\n\n\n1\n2\n3\n\n\nYAML 支持多维数组，可以使用行内表示：\n\nkey: [value1, value2, ...]\n\n\n1\n\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n-\n - A\n - B\n - C\n\n\n1\n2\n3\n4\n\n\n一个相对复杂的例子：\n\ncompanies:\n    -\n        id: 1\n        name: company1\n        price: 200W\n    -\n        id: 2\n        name: company2\n        price: 500W\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。\n\n数组也可以使用流式(flow)的方式表示：\n\ncompanies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]\n\n\n1\n\n\n\n# 复合结构（对象和数组组合）\n\n数组和对象可以构成复合结构，例：\n\nlanguages:\n  - Ruby\n  - Perl\n  - Python \nwebsites:\n  YAML: yaml.org \n  Ruby: ruby-lang.org \n  Python: python.org \n  Perl: use.perl.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转换为 js 为：\n\n{ \n  languages: [ 'Ruby', 'Perl', 'Python'],\n  websites: {\n    YAML: 'yaml.org',\n    Ruby: 'ruby-lang.org',\n    Python: 'python.org',\n    Perl: 'use.perl.org' \n  } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 纯量\n\n纯量是最基本的，不可再分的值，包括：\n\n * 字符串\n * 布尔值\n * 整数\n * 浮点数\n * Null\n * 时间\n * 日期\n\n使用一个例子来快速了解纯量的基本使用：\n\nboolean: # 布尔值\n    - TRUE  #true,True都可以\n    - FALSE  #false，False都可以\nfloat: # 浮点数\n    - 3.14\n    - 6.8523015e+5  #可以使用科学计数法\nint: # 整数\n    - 123\n    - 0b1010_0111_0100_1010_1110    #二进制表示\nnull: # Null\n    nodeName: 'node'\n    parent: ~  #使用~表示null\nstring: # 字符串\n    - 哈哈 # 字符串默认不使用引号表示\n    - 'Hello world'  #可以使用双引号或者单引号包裹特殊字符\n    - newline\n      newline2    #字符串可以拆成多行，每一行会被转化成一个空格\ndate:\n    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd\ndatetime: \n    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n多行字符串可以使用|保留换行符，也可以使用>折叠换行。\n\nthis: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n\n\n1\n2\n3\n4\n5\n6\n\n\n转为js代码如下。\n\n{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }\n\n\n1\n\n\n+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。\n\ns1: |\n  Foo\n \ns2: |+\n  Foo\n \n \ns3: |-\n  Foo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转为json代码如下\n\n{ s1: 'Foo\\n', s2: 'Foo\\n\\n\\n', s3: 'Foo' }\n\n\n1\n\n\n字符串之中可以插入 HTML 标记。\n\nmessage: |\n  <p style=\"color: red\">\n    段落\n  </p>\n\n\n1\n2\n3\n4\n\n\n\n# 转换数据格式\n\n允许使用两个感叹号，强制转换数据类型。\n\ne: !!str 123\nf: !!str true\n\n\n1\n2\n\n\n转换js结果同：\n\n{ e: '123', f: 'true' }\n\n\n1\n\n\n\n# 锚点引用\n\n& 锚点和< span class=\"marked\">* 别名，可以用来引用:\n\ndefaults: &defaults # 添加锚点\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults # <<表示合并，*引用锚点\n\ntest:\n  database: myapp_test\n  <<: *defaults # <<表示合并，*引用锚点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n相当于:\n\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n& 用来建立锚点（defaults），<< 表示合并到当前数据，***** 用来引用锚点。\n\n下面是另一个例子:\n\n- &showell Steve \n- Clark \n- Brian \n- Oren \n- *showell \n\n\n1\n2\n3\n4\n5\n\n\n转为js代码如下:\n\n[ 'Steve', 'Clark', 'Brian', 'Oren', 'Steve' ]\n\n\n1\n\n\n> 参考：\n> \n>  * yaml官网：https://yaml.org/\n>  * yaml与js的转换demo：http://nodeca.github.io/js-yaml/\n>  * 菜鸟教程：https://www.ruanyifeng.com/blog/2016/07/yaml.html",normalizedContent:"# yaml语言教程\n\n\n# 简介\n\nyaml 是 \"yaml ain't a markup language\"（yaml 不是一种标记语言）的递归缩写。在开发的这种语言时，yaml 的意思其实是：\"yet another markup language\"（仍是一种标记语言）。\n\nyaml 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和yaml非常接近）。\n\nyaml 的配置文件后缀为 .yml，如：runoob.yml 。\n\n> yaml常用来用作配置文件，和json类似\n\n\n# 基本语法\n\n * 大小写敏感\n\n * 使用缩进表示层级关系\n\n * 缩进不允许使用tab，只允许空格\n\n * 缩进的空格数不重要，只要相同层级的元素左对齐即可\n\n * '#'表示注释\n\n\n# 数据类型\n\nyaml 支持以下几种数据类型：\n\n * 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n * 数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）\n * 纯量（scalars）：单个的、不可再分的值\n\n\n# yaml 对象\n\n对象的几种表示形式：\n\n1、对象键值对使用冒号结构表示 key: value，冒号后面要加一个空格。\n\nkey: value\n\n\n1\n\n\n2、也可以使用 key:{key1: value1, key2: value2, ...}。\n\nkey:{child-key1:value1,child-key2:value2}\n\n\n1\n\n\n3、还可以使用缩进表示层级关系；\n\nkey: \n    child-key1: value1\n    child-key2: value2\n\n\n1\n2\n3\n\n\n同2，只是表示形式不同。\n\n4、较为复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value：\n\n?  \n    - complexkey1\n    - complexkey2\n:\n    - complexvalue1\n    - complexvalue2\n\n\n1\n2\n3\n4\n5\n6\n\n\n意思即对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]\n\n\n# yaml 数组\n\n以 - 开头的行表示构成一个数组：\n\n- a\n- b\n- c\n\n\n1\n2\n3\n\n\nyaml 支持多维数组，可以使用行内表示：\n\nkey: [value1, value2, ...]\n\n\n1\n\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n-\n - a\n - b\n - c\n\n\n1\n2\n3\n4\n\n\n一个相对复杂的例子：\n\ncompanies:\n    -\n        id: 1\n        name: company1\n        price: 200w\n    -\n        id: 2\n        name: company2\n        price: 500w\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。\n\n数组也可以使用流式(flow)的方式表示：\n\ncompanies: [{id: 1,name: company1,price: 200w},{id: 2,name: company2,price: 500w}]\n\n\n1\n\n\n\n# 复合结构（对象和数组组合）\n\n数组和对象可以构成复合结构，例：\n\nlanguages:\n  - ruby\n  - perl\n  - python \nwebsites:\n  yaml: yaml.org \n  ruby: ruby-lang.org \n  python: python.org \n  perl: use.perl.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转换为 js 为：\n\n{ \n  languages: [ 'ruby', 'perl', 'python'],\n  websites: {\n    yaml: 'yaml.org',\n    ruby: 'ruby-lang.org',\n    python: 'python.org',\n    perl: 'use.perl.org' \n  } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 纯量\n\n纯量是最基本的，不可再分的值，包括：\n\n * 字符串\n * 布尔值\n * 整数\n * 浮点数\n * null\n * 时间\n * 日期\n\n使用一个例子来快速了解纯量的基本使用：\n\nboolean: # 布尔值\n    - true  #true,true都可以\n    - false  #false，false都可以\nfloat: # 浮点数\n    - 3.14\n    - 6.8523015e+5  #可以使用科学计数法\nint: # 整数\n    - 123\n    - 0b1010_0111_0100_1010_1110    #二进制表示\nnull: # null\n    nodename: 'node'\n    parent: ~  #使用~表示null\nstring: # 字符串\n    - 哈哈 # 字符串默认不使用引号表示\n    - 'hello world'  #可以使用双引号或者单引号包裹特殊字符\n    - newline\n      newline2    #字符串可以拆成多行，每一行会被转化成一个空格\ndate:\n    - 2018-02-17    #日期必须使用iso 8601格式，即yyyy-mm-dd\ndatetime: \n    -  2018-02-17t15:02:31+08:00    #时间使用iso 8601格式，时间和日期之间使用t连接，最后使用+代表时区\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n多行字符串可以使用|保留换行符，也可以使用>折叠换行。\n\nthis: |\n  foo\n  bar\nthat: >\n  foo\n  bar\n\n\n1\n2\n3\n4\n5\n6\n\n\n转为js代码如下。\n\n{ this: 'foo\\nbar\\n', that: 'foo bar\\n' }\n\n\n1\n\n\n+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。\n\ns1: |\n  foo\n \ns2: |+\n  foo\n \n \ns3: |-\n  foo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转为json代码如下\n\n{ s1: 'foo\\n', s2: 'foo\\n\\n\\n', s3: 'foo' }\n\n\n1\n\n\n字符串之中可以插入 html 标记。\n\nmessage: |\n  <p style=\"color: red\">\n    段落\n  </p>\n\n\n1\n2\n3\n4\n\n\n\n# 转换数据格式\n\n允许使用两个感叹号，强制转换数据类型。\n\ne: !!str 123\nf: !!str true\n\n\n1\n2\n\n\n转换js结果同：\n\n{ e: '123', f: 'true' }\n\n\n1\n\n\n\n# 锚点引用\n\n& 锚点和< span class=\"marked\">* 别名，可以用来引用:\n\ndefaults: &defaults # 添加锚点\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults # <<表示合并，*引用锚点\n\ntest:\n  database: myapp_test\n  <<: *defaults # <<表示合并，*引用锚点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n相当于:\n\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n& 用来建立锚点（defaults），<< 表示合并到当前数据，***** 用来引用锚点。\n\n下面是另一个例子:\n\n- &showell steve \n- clark \n- brian \n- oren \n- *showell \n\n\n1\n2\n3\n4\n5\n\n\n转为js代码如下:\n\n[ 'steve', 'clark', 'brian', 'oren', 'steve' ]\n\n\n1\n\n\n> 参考：\n> \n>  * yaml官网：https://yaml.org/\n>  * yaml与js的转换demo：http://nodeca.github.io/js-yaml/\n>  * 菜鸟教程：https://www.ruanyifeng.com/blog/2016/07/yaml.html",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"GitHub高级搜索技巧",frontmatter:{title:"GitHub高级搜索技巧",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/4c778760be26d8b3",categories:["技术","GitHub技巧"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/02.GitHub%E6%8A%80%E5%B7%A7/01.GitHub%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7.html",relativePath:"03.技术/02.GitHub技巧/01.GitHub高级搜索技巧.md",key:"v-d9a518f6",path:"/pages/4c778760be26d8b3/",excerpt:'<h1 id="github高级搜索技巧"><a class="header-anchor" href="#github高级搜索技巧">#</a> GitHub高级搜索技巧</h1>\n<p><code>in:name &lt;关键字&gt;</code>\n仓库名称带关键字查询</p>\n<p><code>in:description &lt;关键字&gt;</code>\n仓库描述带关键字查询</p>\n<p><code>in:readme &lt;关键字&gt;</code>\nREADME文件带关键字查询</p>\n',headersStr:null,content:'# GitHub高级搜索技巧\n\nin:name <关键字> 仓库名称带关键字查询\n\nin:description <关键字> 仓库描述带关键字查询\n\nin:readme <关键字> README文件带关键字查询\n\nstars(fork): >(=) <数字> <关键字> star或fork数大于(或等于)指定数字的带关键字查询\n\nstars(fork): 10..20 <关键词> star或fork数在10到20之间的带关键字查询\n\nsize:>=5000 <关键词> 限定仓库大于等于5000K的带关键字查询\n\npushed(created):>2019-11-15 <关键字> 更新 或 创建 日期在2019年11月16日之后的带关键字查询\n\nlicense:apache-2.0 <关键字> LICENSE为apache-2.0的带关键字查询\n\nlanguage:java <关键词> 仓库语言为Java的带关键字查询\n\nuser:<用户名> 查询某个用户的项目\n\norg:<组织名> 查询某个组织的项目\n\n*以上查询条件可组合使用，空格隔开\n\n# 示例1：搜索仓库名包含javascript，并且stars数大于1000的项目\nin:name javascript stars:>1000\n\n# 示例2：搜索描述中包含"小程序"，并且fork大于100，并且最近更新时间在2019-11-15之后的，并且使用开发语言为vue的项目\nin:description 小程序 fork:>100 pushed:>2019-11-15 language:vue\n\n\n1\n2\n3\n4\n5\n\n\n*或使用高级搜索页搜索：\n\nhttps://github.com/search/advanced',normalizedContent:'# github高级搜索技巧\n\nin:name <关键字> 仓库名称带关键字查询\n\nin:description <关键字> 仓库描述带关键字查询\n\nin:readme <关键字> readme文件带关键字查询\n\nstars(fork): >(=) <数字> <关键字> star或fork数大于(或等于)指定数字的带关键字查询\n\nstars(fork): 10..20 <关键词> star或fork数在10到20之间的带关键字查询\n\nsize:>=5000 <关键词> 限定仓库大于等于5000k的带关键字查询\n\npushed(created):>2019-11-15 <关键字> 更新 或 创建 日期在2019年11月16日之后的带关键字查询\n\nlicense:apache-2.0 <关键字> license为apache-2.0的带关键字查询\n\nlanguage:java <关键词> 仓库语言为java的带关键字查询\n\nuser:<用户名> 查询某个用户的项目\n\norg:<组织名> 查询某个组织的项目\n\n*以上查询条件可组合使用，空格隔开\n\n# 示例1：搜索仓库名包含javascript，并且stars数大于1000的项目\nin:name javascript stars:>1000\n\n# 示例2：搜索描述中包含"小程序"，并且fork大于100，并且最近更新时间在2019-11-15之后的，并且使用开发语言为vue的项目\nin:description 小程序 fork:>100 pushed:>2019-11-15 language:vue\n\n\n1\n2\n3\n4\n5\n\n\n*或使用高级搜索页搜索：\n\nhttps://github.com/search/advanced',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"GitHub Actions 实现自动部署静态博客",frontmatter:{title:"GitHub Actions 实现自动部署静态博客",date:"2019-12-27T11:44:41.000Z",permalink:"/pages/6b9d359ec5aa5019",categories:["技术","GitHub技巧"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/02.GitHub%E6%8A%80%E5%B7%A7/02.GitHub%20Actions%20%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html",relativePath:"03.技术/02.GitHub技巧/02.GitHub Actions 实现自动部署静态博客.md",key:"v-5736fc35",path:"/pages/6b9d359ec5aa5019/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:32},{level:2,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:17},{level:2,title:"相关文章",slug:"相关文章",normalizedTitle:"相关文章",charIndex:3449}],excerpt:'<h1 id="github-actions-实现自动部署静态博客"><a class="header-anchor" href="#github-actions-实现自动部署静态博客">#</a> GitHub Actions 实现自动部署静态博客</h1>\n<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>我使用vuepress搭建了一个静态博客，挂在了Github pages和<a href="https://dev.tencent.com/" target="_blank" rel="noopener noreferrer">Coding pages<OutboundLink/></a>上面。</p>\n<p>coding pages在国内的访问速度比github pages要快很多，而且还可以被百度收录。</p>\n',headersStr:"前言 实现 相关文章",content:'# GitHub Actions 实现自动部署静态博客\n\n\n# 前言\n\n我使用vuepress搭建了一个静态博客，挂在了Github pages和Coding pages上面。\n\ncoding pages在国内的访问速度比github pages要快很多，而且还可以被百度收录。\n\n一开始的部署方式是使用sh部署脚本把代码提交到这两个平台的仓库分支，虽然已经很方便了，但是我还想把博客未打包的源码提交到Github主分支上。这就需要我操作两次命令，我就想能不能只需要一次操作就可以同时把源码、部署代码一次性提交到两个平台呢？\n\n\n# 实现\n\n在了解GitHub Actions最近（2019.12）刚正式发布了之后，尝试使用它发现能够满足我的需求。GitHub Actions 入门教程\n\n首先，需要获取token，后面会用到。获取方法：github获取token官方文档、coding获取token官方文档。\n\n然后，将这两个token同时储存到github仓库的Settings/Secrets里面。变量名可以随便取，但是注意要和后面的ci.yml文件内的变量名一致，这里取的是ACCESS_TOKEN和CODING_TOKEN。\n\n\n\nGitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的.github/workflows目录。\n\nworkflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为.yml，比如ci.yml。一个库可以有多个 workflow 文件。GitHub 只要发现.github/workflows目录里面有.yml文件，就会自动运行该文件。\n\n我的ci.yml文件：\n\nname: CI\n\n# 在master分支发生push事件时触发。\non: \n  push:\n    branches:\n      - master\njobs: # 工作流\n  build:\n    runs-on: ubuntu-latest #运行在虚拟机环境ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [10.x]\n\n    steps: \n      - name: Checkout # 步骤1\n        uses: actions/checkout@v1 # 使用的动作。格式：userName/repoName。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions\n      - name: Use Node.js ${{ matrix.node-version }} # 步骤2\n        uses: actions/setup-node@v1 # 作用：安装nodejs\n        with:\n          node-version: ${{ matrix.node-version }} # 版本\n      - name: run deploy.sh # 步骤3 （同时部署到github和coding）\n        env: # 设置环境变量\n          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # toKen私密变量\n          CODING_TOKEN: ${{ secrets.CODING_TOKEN }} # 腾讯云开发者平台（coding）私密token\n        run: npm install && npm run deploy # 执行的命令  \n        # package.json 中添加 "deploy": "bash deploy.sh"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n这个配置文件会在我push提交代码到主分支时触发工作，运行环境是ubuntu-latest，工作步骤：\n\n * 一，获取仓库源码\n\n * 二，安装nodejs，打包项目有用到nodejs\n\n * 三，把token设置到环境变量，安装项目依赖，并运行deploy.sh文件，\n\n> ACCESS_TOKE 和 CODING_TOKEN 都是保存在github仓库的Settings/Secrets位置的私密变量，仓库代码中可以通过<secrets.变量名>来获取，保证了token的私密性。\n\n再来看看将要被运行的deploy.sh部署代码：\n\n#!/usr/bin/env sh\n# 确保脚本抛出遇到的错误\nset -e\nnpm run build # 生成静态文件\ncd docs/.vuepress/dist # 进入生成的文件夹\n\n# deploy to github\necho \'blog.xugaoyi.com\' > CNAME\nif [ -z "$GITHUB_TOKEN" ]; then\n  msg=\'deploy\'\n  githubUrl=git@github.com:xugaoyi/blog.git\nelse\n  msg=\'来自github action的自动部署\'\n  githubUrl=https://xugaoyi:${GITHUB_TOKEN}@github.com/xugaoyi/blog.git\n  git config --global user.name "xugaoyi"\n  git config --global user.email "894072666@qq.com"\nfi\ngit init\ngit add -A\ngit commit -m "${msg}"\ngit push -f $githubUrl master:gh-pages # 推送到github\n\n# deploy to coding\necho \'www.xugaoyi.com\\nxugaoyi.com\' > CNAME  # 自定义域名\nif [ -z "$CODING_TOKEN" ]; then  # -z 字符串 长度为0则为true；$CODING_TOKEN来自于github仓库`Settings/Secrets`设置的私密环境变量\n  codingUrl=git@git.dev.tencent.com:xugaoyi/xugaoyi.git\nelse\n  codingUrl=https://xugaoyi:${CODING_TOKEN}@git.dev.tencent.com/xugaoyi/xugaoyi.git\nfi\ngit add -A\ngit commit -m "${msg}"\ngit push -f $codingUrl master # 推送到coding\n\ncd -\nrm -rf docs/.vuepress/dist\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n这个文件使用Shell命令写的，它会先运行打包命令，进入打包好的文件，创建一个自定义域名的CNAME文件（如果你没有自定义域名可去掉这个命令），判断是否有token环境变量，如果没有说明是在本地自己的电脑上运行的部署，使用ssh代码仓库地址，如果有token环境变量，说明是GitHub Actions自动触发的部署，此时使用的是可以通过toKen来获取代码提交权限的提交地址。最后通过git命令提交到各自的仓库，完成部署。\n\n> 提示：\n> \n>  * Shell 可以获取到环境变量。\n> \n>  * 我想给两个平台上部署的博客不一样的自定义域名，因此做了分开创建CNAME文件，分开提交。\n\n至此，我前面提到的需求就实现啦，只需要把源码push到github仓库这一个步骤，后面的博客打包、部署到github和coding等工作都由GitHub Actions来自动完成。\n\n如下你想查看部署日志，你可以到github仓库的Actions这一项查看。\n\n\n\n\n# 相关文章\n\n《GitHub Actions 定时运行代码：每天定时百度链接推送》',normalizedContent:'# github actions 实现自动部署静态博客\n\n\n# 前言\n\n我使用vuepress搭建了一个静态博客，挂在了github pages和coding pages上面。\n\ncoding pages在国内的访问速度比github pages要快很多，而且还可以被百度收录。\n\n一开始的部署方式是使用sh部署脚本把代码提交到这两个平台的仓库分支，虽然已经很方便了，但是我还想把博客未打包的源码提交到github主分支上。这就需要我操作两次命令，我就想能不能只需要一次操作就可以同时把源码、部署代码一次性提交到两个平台呢？\n\n\n# 实现\n\n在了解github actions最近（2019.12）刚正式发布了之后，尝试使用它发现能够满足我的需求。github actions 入门教程\n\n首先，需要获取token，后面会用到。获取方法：github获取token官方文档、coding获取token官方文档。\n\n然后，将这两个token同时储存到github仓库的settings/secrets里面。变量名可以随便取，但是注意要和后面的ci.yml文件内的变量名一致，这里取的是access_token和coding_token。\n\n\n\ngithub actions 的配置文件叫做 workflow 文件，存放在代码仓库的.github/workflows目录。\n\nworkflow 文件采用 yaml 格式，文件名可以任意取，但是后缀名统一为.yml，比如ci.yml。一个库可以有多个 workflow 文件。github 只要发现.github/workflows目录里面有.yml文件，就会自动运行该文件。\n\n我的ci.yml文件：\n\nname: ci\n\n# 在master分支发生push事件时触发。\non: \n  push:\n    branches:\n      - master\njobs: # 工作流\n  build:\n    runs-on: ubuntu-latest #运行在虚拟机环境ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [10.x]\n\n    steps: \n      - name: checkout # 步骤1\n        uses: actions/checkout@v1 # 使用的动作。格式：username/reponame。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions\n      - name: use node.js ${{ matrix.node-version }} # 步骤2\n        uses: actions/setup-node@v1 # 作用：安装nodejs\n        with:\n          node-version: ${{ matrix.node-version }} # 版本\n      - name: run deploy.sh # 步骤3 （同时部署到github和coding）\n        env: # 设置环境变量\n          github_token: ${{ secrets.access_token }} # token私密变量\n          coding_token: ${{ secrets.coding_token }} # 腾讯云开发者平台（coding）私密token\n        run: npm install && npm run deploy # 执行的命令  \n        # package.json 中添加 "deploy": "bash deploy.sh"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n这个配置文件会在我push提交代码到主分支时触发工作，运行环境是ubuntu-latest，工作步骤：\n\n * 一，获取仓库源码\n\n * 二，安装nodejs，打包项目有用到nodejs\n\n * 三，把token设置到环境变量，安装项目依赖，并运行deploy.sh文件，\n\n> access_toke 和 coding_token 都是保存在github仓库的settings/secrets位置的私密变量，仓库代码中可以通过<secrets.变量名>来获取，保证了token的私密性。\n\n再来看看将要被运行的deploy.sh部署代码：\n\n#!/usr/bin/env sh\n# 确保脚本抛出遇到的错误\nset -e\nnpm run build # 生成静态文件\ncd docs/.vuepress/dist # 进入生成的文件夹\n\n# deploy to github\necho \'blog.xugaoyi.com\' > cname\nif [ -z "$github_token" ]; then\n  msg=\'deploy\'\n  githuburl=git@github.com:xugaoyi/blog.git\nelse\n  msg=\'来自github action的自动部署\'\n  githuburl=https://xugaoyi:${github_token}@github.com/xugaoyi/blog.git\n  git config --global user.name "xugaoyi"\n  git config --global user.email "894072666@qq.com"\nfi\ngit init\ngit add -a\ngit commit -m "${msg}"\ngit push -f $githuburl master:gh-pages # 推送到github\n\n# deploy to coding\necho \'www.xugaoyi.com\\nxugaoyi.com\' > cname  # 自定义域名\nif [ -z "$coding_token" ]; then  # -z 字符串 长度为0则为true；$coding_token来自于github仓库`settings/secrets`设置的私密环境变量\n  codingurl=git@git.dev.tencent.com:xugaoyi/xugaoyi.git\nelse\n  codingurl=https://xugaoyi:${coding_token}@git.dev.tencent.com/xugaoyi/xugaoyi.git\nfi\ngit add -a\ngit commit -m "${msg}"\ngit push -f $codingurl master # 推送到coding\n\ncd -\nrm -rf docs/.vuepress/dist\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n这个文件使用shell命令写的，它会先运行打包命令，进入打包好的文件，创建一个自定义域名的cname文件（如果你没有自定义域名可去掉这个命令），判断是否有token环境变量，如果没有说明是在本地自己的电脑上运行的部署，使用ssh代码仓库地址，如果有token环境变量，说明是github actions自动触发的部署，此时使用的是可以通过token来获取代码提交权限的提交地址。最后通过git命令提交到各自的仓库，完成部署。\n\n> 提示：\n> \n>  * shell 可以获取到环境变量。\n> \n>  * 我想给两个平台上部署的博客不一样的自定义域名，因此做了分开创建cname文件，分开提交。\n\n至此，我前面提到的需求就实现啦，只需要把源码push到github仓库这一个步骤，后面的博客打包、部署到github和coding等工作都由github actions来自动完成。\n\n如下你想查看部署日志，你可以到github仓库的actions这一项查看。\n\n\n\n\n# 相关文章\n\n《github actions 定时运行代码：每天定时百度链接推送》',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"GitHub Actions 定时运行代码：每天定时百度链接推送",frontmatter:{title:"GitHub Actions 定时运行代码：每天定时百度链接推送",date:"2019-12-30T21:23:00.000Z",permalink:"/pages/f44d2f9ad04ab8d3",categories:["技术","GitHub技巧"],tags:["github","博客"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/02.GitHub%E6%8A%80%E5%B7%A7/03.GitHub%20Actions%20%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%9A%E6%AF%8F%E5%A4%A9%E5%AE%9A%E6%97%B6%E7%99%BE%E5%BA%A6%E9%93%BE%E6%8E%A5%E6%8E%A8%E9%80%81.html",relativePath:"03.技术/02.GitHub技巧/03.GitHub Actions 定时运行代码：每天定时百度链接推送.md",key:"v-fa1b9a8a",path:"/pages/f44d2f9ad04ab8d3/",headers:[{level:2,title:"百度主动链接推送",slug:"百度主动链接推送",normalizedTitle:"百度主动链接推送",charIndex:246},{level:2,title:"自动生成urls.txt",slug:"自动生成urls-txt",normalizedTitle:"自动生成urls.txt",charIndex:603},{level:2,title:"GitHub Actions 定时运行代码",slug:"github-actions-定时运行代码",normalizedTitle:"github actions 定时运行代码",charIndex:2},{level:3,title:"配置 GitHub Actions",slug:"配置-github-actions",normalizedTitle:"配置 github actions",charIndex:2071},{level:3,title:"baiduPush命令在package.json配置",slug:"baidupush命令在package-json配置",normalizedTitle:"baidupush命令在package.json配置",charIndex:2824},{level:3,title:"baiduPush.sh执行百度推送命令",slug:"baidupush-sh执行百度推送命令",normalizedTitle:"baidupush.sh执行百度推送命令",charIndex:3175},{level:2,title:"相关文章",slug:"相关文章",normalizedTitle:"相关文章",charIndex:3659}],excerpt:'<h1 id="github-actions-定时运行代码-每天定时百度链接推送"><a class="header-anchor" href="#github-actions-定时运行代码-每天定时百度链接推送">#</a> GitHub Actions 定时运行代码：每天定时百度链接推送</h1>\n<p>博客上线已经有些日子了，却发现百度迟迟没有收录我的博客页面，在百度推送工具当中除了有自动推送的代码嵌入网站之外，还有一个实时的主动推送更高效。</p>\n<p>最近刚好了解到GitHub Actions的定时运行代码功能，可以用它来每天自动运行命令生成所有博客链接并进行一次性推送给百度。</p>\n<p>GitHub Actions 是一个 CI/CD（持续集成/持续部署）工具，但也可用作代码运行环境。<strong>功能非常强大，能够玩出许多花样。</strong></p>\n',headersStr:"百度主动链接推送 自动生成urls.txt GitHub Actions 定时运行代码 配置 GitHub Actions baiduPush命令在package.json配置 baiduPush.sh执行百度推送命令 相关文章",content:"# GitHub Actions 定时运行代码：每天定时百度链接推送\n\n博客上线已经有些日子了，却发现百度迟迟没有收录我的博客页面，在百度推送工具当中除了有自动推送的代码嵌入网站之外，还有一个实时的主动推送更高效。\n\n最近刚好了解到GitHub Actions的定时运行代码功能，可以用它来每天自动运行命令生成所有博客链接并进行一次性推送给百度。\n\nGitHub Actions 是一个 CI/CD（持续集成/持续部署）工具，但也可用作代码运行环境。功能非常强大，能够玩出许多花样。\n\n\n# 百度主动链接推送\n\n链接主动推送在百度站长中有介绍，如图。\n\n\n\n具体使用方法就是创建一个文件urls.txt，文件内每行一条链接的格式写入提交的多个链接，如图。\n\n\n\n运行命令\n\ncurl -H 'Content-Type:text/plain' --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=xugaoyi.com&token=T5PEAzhG*****\"\n\n\n1\n\n\n上面命令的地址和参数由百度站长提供。运行完命令会返回推送结果，不出意外的话就会把urls.txt内的所有链接一次性推送给百度。\n\n这个方法虽然比嵌入网站头部的自动推送更高效，但是也有它的麻烦之处，就是得自己填入链接到urls.txt文件，然后手动运行命令。\n\n\n# 自动生成urls.txt\n\n没关系，技术的本质就是让人\"偷懒\"的。于是，我写了一个nodejs工具，用于把所有的博客页面链接生成到urls.txt\n\n// baiduPush.js\n\n/**\n * 生成百度链接推送文件\n */\nconst fs = require('fs');\nconst path = require('path');\nconst logger = require('tracer').colorConsole();\nconst matter = require('gray-matter'); // FrontMatter解析器 https://github.com/jonschlinkert/gray-matter\nconst readFileList = require('./modules/readFileList');\nconst urlsRoot = path.join(__dirname, '..', 'urls.txt'); // 百度链接推送文件\nconst DOMAIN = process.argv.splice(2)[0]; // 获取命令行传入的参数\n\nif (!DOMAIN) {\n  logger.error('请在运行此文件时指定一个你要进行百度推送的域名参数，例：node utils/baiduPush.js https://xugaoyi.com')\n  return\n}\n\nmain();\nfunction main() {\n  fs.writeFileSync(urlsRoot, DOMAIN)\n  const files = readFileList(); // 读取所有md文件数据\n\n  files.forEach( file => {\n    const { data } = matter(fs.readFileSync(file.filePath, 'utf8')); \n\n    if (data.permalink) {\n      const link = `\\r\\n${DOMAIN}${data.permalink}/`;\n      console.log(link)\n      fs.appendFileSync(urlsRoot, link);\n    }\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n上面代码仅是针对我个人的博客生成链接到urls.txt文件。更多代码在 这里。\n\n运行如下命令就可以生产一个包含博客所有链接的urls.txt文件：\n\nnode utils/baiduPush.js https://xugaoyi.com\n\n\n1\n\n\n哈哈，第一个麻烦解决了😏，接下来是解决第二个需要手动运行推送命令的问题。\n\n> 如果你没办法自动生成，你也可以自己手动创建一个urls.txt文件，放到github仓库。\n\n\n# GitHub Actions 定时运行代码\n\n今天的主角GitHub Actions 要登场了。（相关：GitHub Actions 入门教程、GitHub Actions 实现自动部署静态博客）\n\nGitHub Actions 是一个 CI/CD（持续集成/持续部署）工具，但也可用作代码运行环境。功能非常强大，能够玩出许多花样。\n\n\n# 配置 GitHub Actions\n\n触发 GitHub Actions 需要在项目仓库新建一个.github/workflows子目录，里面是 YAML 格式配置文件，文件名可以随便取。GitHub 只要发现配置文件，就会运行 Actions。\n\n配置文件的第一部分是触发条件。\n\n## baiduPush.yml\nname: 'baiduPush'\n \non:\n  push:\n  schedule:\n    - cron: '0 23 * * *'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面代码中，name字段是配置文件的描述，on字段是触发条件。我们指定两种情况下触发，第一种是代码 Push 进仓库，第二种是定时任务，每天在国际标准时间23点（北京时间+8，即早上7点）运行。\n\n> 定时设置看这里\n\n接着，就是运行流程。\n\njobs:\n  bot:\n    runs-on: ubuntu-latest # 运行环境为最新版的Ubuntu\n    steps:\n      - name: 'Checkout codes' # 步骤一，获取仓库代码\n        uses: actions/checkout@v1\n      - name: 'Run baiduPush.sh' # 步骤二，执行sh命令文件\n        run: npm install && npm run baiduPush # 运行命令。（注意，运行目录是仓库根目录）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n上面代码中，指定运行环境是最新的ubuntu，流程的第一步是从代码仓库获取代码，第二步运行两个命令，先安装项目依赖，再运行写在package.json的baiduPush命令。完整代码看 这里\n\n\n# baiduPush命令在package.json配置\n\n// package.json\n\"scripts\": {\n\t\"baiduPush\": \"node utils/baiduPush.js https://xugaoyi.com && bash baiduPush.sh\"\n}\n\n\n1\n2\n3\n4\n\n\n上面脚本中在node utils/baiduPush.js的后面加入你的域名参数。运行此命令生成urls.txt文件，然后执行baiduPush.sh文件。\n\n注意，在使用window系统时，请使用git bash命令窗运行上面的脚本。\n\n> baiduPush命令之所以没有放在baiduPush.yml的 run 里面是因为我想在本地也可以执行npm run baiduPush命令。\n\n\n# baiduPush.sh执行百度推送命令\n\nbaiduPush.sh文件：\n\n#!/usr/bin/env sh\n\nset -e\n\n# 百度链接推送\ncurl -H 'Content-Type:text/plain' --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=https://xugaoyi.com&token=T5PEAzhGa*****\"\n\nrm -rf urls.txt # 灭迹\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n上面代码中，把urls.txt文件中的所有链接一次性推送。\n\n> baiduPush.sh内的命令之所以没有写在package.json是因为我觉得命令太长了，不方便阅读。\n\n写好配置，推送到仓库，就会在每天的早上7点钟，自动运行命令生成一个包含博客所有页面链接的urls.txt文件，并把所有链接一次性推送到百度。麻麻再也不用担心我的网站不被收录~~😘 😘 😘\n\n在这个基础上可以扩展，使用GitHub Actions满足你自己的各种定时需求。\n\n\n# 相关文章\n\n《 GitHub Actions 实现自动部署静态博客》\n\n《解决百度无法收录搭建在GitHub上的静态博客的问题》",normalizedContent:"# github actions 定时运行代码：每天定时百度链接推送\n\n博客上线已经有些日子了，却发现百度迟迟没有收录我的博客页面，在百度推送工具当中除了有自动推送的代码嵌入网站之外，还有一个实时的主动推送更高效。\n\n最近刚好了解到github actions的定时运行代码功能，可以用它来每天自动运行命令生成所有博客链接并进行一次性推送给百度。\n\ngithub actions 是一个 ci/cd（持续集成/持续部署）工具，但也可用作代码运行环境。功能非常强大，能够玩出许多花样。\n\n\n# 百度主动链接推送\n\n链接主动推送在百度站长中有介绍，如图。\n\n\n\n具体使用方法就是创建一个文件urls.txt，文件内每行一条链接的格式写入提交的多个链接，如图。\n\n\n\n运行命令\n\ncurl -h 'content-type:text/plain' --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=xugaoyi.com&token=t5peazhg*****\"\n\n\n1\n\n\n上面命令的地址和参数由百度站长提供。运行完命令会返回推送结果，不出意外的话就会把urls.txt内的所有链接一次性推送给百度。\n\n这个方法虽然比嵌入网站头部的自动推送更高效，但是也有它的麻烦之处，就是得自己填入链接到urls.txt文件，然后手动运行命令。\n\n\n# 自动生成urls.txt\n\n没关系，技术的本质就是让人\"偷懒\"的。于是，我写了一个nodejs工具，用于把所有的博客页面链接生成到urls.txt\n\n// baidupush.js\n\n/**\n * 生成百度链接推送文件\n */\nconst fs = require('fs');\nconst path = require('path');\nconst logger = require('tracer').colorconsole();\nconst matter = require('gray-matter'); // frontmatter解析器 https://github.com/jonschlinkert/gray-matter\nconst readfilelist = require('./modules/readfilelist');\nconst urlsroot = path.join(__dirname, '..', 'urls.txt'); // 百度链接推送文件\nconst domain = process.argv.splice(2)[0]; // 获取命令行传入的参数\n\nif (!domain) {\n  logger.error('请在运行此文件时指定一个你要进行百度推送的域名参数，例：node utils/baidupush.js https://xugaoyi.com')\n  return\n}\n\nmain();\nfunction main() {\n  fs.writefilesync(urlsroot, domain)\n  const files = readfilelist(); // 读取所有md文件数据\n\n  files.foreach( file => {\n    const { data } = matter(fs.readfilesync(file.filepath, 'utf8')); \n\n    if (data.permalink) {\n      const link = `\\r\\n${domain}${data.permalink}/`;\n      console.log(link)\n      fs.appendfilesync(urlsroot, link);\n    }\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n上面代码仅是针对我个人的博客生成链接到urls.txt文件。更多代码在 这里。\n\n运行如下命令就可以生产一个包含博客所有链接的urls.txt文件：\n\nnode utils/baidupush.js https://xugaoyi.com\n\n\n1\n\n\n哈哈，第一个麻烦解决了😏，接下来是解决第二个需要手动运行推送命令的问题。\n\n> 如果你没办法自动生成，你也可以自己手动创建一个urls.txt文件，放到github仓库。\n\n\n# github actions 定时运行代码\n\n今天的主角github actions 要登场了。（相关：github actions 入门教程、github actions 实现自动部署静态博客）\n\ngithub actions 是一个 ci/cd（持续集成/持续部署）工具，但也可用作代码运行环境。功能非常强大，能够玩出许多花样。\n\n\n# 配置 github actions\n\n触发 github actions 需要在项目仓库新建一个.github/workflows子目录，里面是 yaml 格式配置文件，文件名可以随便取。github 只要发现配置文件，就会运行 actions。\n\n配置文件的第一部分是触发条件。\n\n## baidupush.yml\nname: 'baidupush'\n \non:\n  push:\n  schedule:\n    - cron: '0 23 * * *'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面代码中，name字段是配置文件的描述，on字段是触发条件。我们指定两种情况下触发，第一种是代码 push 进仓库，第二种是定时任务，每天在国际标准时间23点（北京时间+8，即早上7点）运行。\n\n> 定时设置看这里\n\n接着，就是运行流程。\n\njobs:\n  bot:\n    runs-on: ubuntu-latest # 运行环境为最新版的ubuntu\n    steps:\n      - name: 'checkout codes' # 步骤一，获取仓库代码\n        uses: actions/checkout@v1\n      - name: 'run baidupush.sh' # 步骤二，执行sh命令文件\n        run: npm install && npm run baidupush # 运行命令。（注意，运行目录是仓库根目录）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n上面代码中，指定运行环境是最新的ubuntu，流程的第一步是从代码仓库获取代码，第二步运行两个命令，先安装项目依赖，再运行写在package.json的baidupush命令。完整代码看 这里\n\n\n# baidupush命令在package.json配置\n\n// package.json\n\"scripts\": {\n\t\"baidupush\": \"node utils/baidupush.js https://xugaoyi.com && bash baidupush.sh\"\n}\n\n\n1\n2\n3\n4\n\n\n上面脚本中在node utils/baidupush.js的后面加入你的域名参数。运行此命令生成urls.txt文件，然后执行baidupush.sh文件。\n\n注意，在使用window系统时，请使用git bash命令窗运行上面的脚本。\n\n> baidupush命令之所以没有放在baidupush.yml的 run 里面是因为我想在本地也可以执行npm run baidupush命令。\n\n\n# baidupush.sh执行百度推送命令\n\nbaidupush.sh文件：\n\n#!/usr/bin/env sh\n\nset -e\n\n# 百度链接推送\ncurl -h 'content-type:text/plain' --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=https://xugaoyi.com&token=t5peazhga*****\"\n\nrm -rf urls.txt # 灭迹\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n上面代码中，把urls.txt文件中的所有链接一次性推送。\n\n> baidupush.sh内的命令之所以没有写在package.json是因为我觉得命令太长了，不方便阅读。\n\n写好配置，推送到仓库，就会在每天的早上7点钟，自动运行命令生成一个包含博客所有页面链接的urls.txt文件，并把所有链接一次性推送到百度。麻麻再也不用担心我的网站不被收录~~😘 😘 😘\n\n在这个基础上可以扩展，使用github actions满足你自己的各种定时需求。\n\n\n# 相关文章\n\n《 github actions 实现自动部署静态博客》\n\n《解决百度无法收录搭建在github上的静态博客的问题》",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"GitHub加速下载项目的方法",frontmatter:{title:"GitHub加速下载项目的方法",date:"2020-03-09T10:28:09.000Z",permalink:"/pages/95331c6a9613faf8",categories:["技术","GitHub技巧"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/02.GitHub%E6%8A%80%E5%B7%A7/10.GitHub%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%96%B9%E6%B3%95.html",relativePath:"03.技术/02.GitHub技巧/10.GitHub加速下载项目的方法.md",key:"v-62d2e41f",path:"/pages/95331c6a9613faf8/",headers:[{level:2,title:"利用码云来转接做下载加速",slug:"利用码云来转接做下载加速",normalizedTitle:"利用码云来转接做下载加速",charIndex:109}],excerpt:'<h1 id="github加速下载项目的方法"><a class="header-anchor" href="#github加速下载项目的方法">#</a> GitHub加速下载项目的方法</h1>\n<p>国内在github上克隆项目总是异常的慢，据我多次克隆观察，下载速度最快就20k/s左右，特别是在克隆比较大的项目时简直慢得无法忍受！下面介绍一种加载克隆项目的方法。</p>\n',headersStr:"利用码云来转接做下载加速",content:'# GitHub加速下载项目的方法\n\n国内在github上克隆项目总是异常的慢，据我多次克隆观察，下载速度最快就20k/s左右，特别是在克隆比较大的项目时简直慢得无法忍受！下面介绍一种加载克隆项目的方法。\n\n\n\n\n# 利用码云来转接做下载加速\n\n 1. 首先你得有一个 码云 的账号\n\n 2. 登录码云之后在页面右上角的加号选择从GitHub/GitLab导入项目\n    \n    \n\n 3. 选择从URL导入，粘贴从GitHub复制来的仓库地址，然后导入，这个导入过程一般是很快的。\n    \n    \n\n 4. 从码云克隆刚导入的这个项目，克隆速度会快很多，网速好的能达到几兆每秒（具体速度就看你的网速了，吐槽一下我家网速，总在关键时刻显示"视频加载中"....）\n    \n    \n\n 5. 另外要注意的一点，克隆下来的项目关联的是码云的仓库，如果你需要关联github仓库需要更改远程仓库。\n    \n    git remote -v # 查看关联的远程仓库\n    git remote rm <仓库名> # 删除远程仓库\n    git remote add <仓库名> <远程仓库地址> # 关联远程仓库，仓库名一般使用origin\n    \n    \n    1\n    2\n    3\n    \n\n这个方法适合用于克隆比较大的项目，如果克隆小项目，20k/s的速度好像还能将就~~',normalizedContent:'# github加速下载项目的方法\n\n国内在github上克隆项目总是异常的慢，据我多次克隆观察，下载速度最快就20k/s左右，特别是在克隆比较大的项目时简直慢得无法忍受！下面介绍一种加载克隆项目的方法。\n\n\n\n\n# 利用码云来转接做下载加速\n\n 1. 首先你得有一个 码云 的账号\n\n 2. 登录码云之后在页面右上角的加号选择从github/gitlab导入项目\n    \n    \n\n 3. 选择从url导入，粘贴从github复制来的仓库地址，然后导入，这个导入过程一般是很快的。\n    \n    \n\n 4. 从码云克隆刚导入的这个项目，克隆速度会快很多，网速好的能达到几兆每秒（具体速度就看你的网速了，吐槽一下我家网速，总在关键时刻显示"视频加载中"....）\n    \n    \n\n 5. 另外要注意的一点，克隆下来的项目关联的是码云的仓库，如果你需要关联github仓库需要更改远程仓库。\n    \n    git remote -v # 查看关联的远程仓库\n    git remote rm <仓库名> # 删除远程仓库\n    git remote add <仓库名> <远程仓库地址> # 关联远程仓库，仓库名一般使用origin\n    \n    \n    1\n    2\n    3\n    \n\n这个方法适合用于克隆比较大的项目，如果克隆小项目，20k/s的速度好像还能将就~~',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"nodejs递归读取所有文件",frontmatter:{title:"nodejs递归读取所有文件",date:"2019-12-26T15:57:32.000Z",permalink:"/pages/117708e0af7f0bd9",categories:["技术","Nodejs"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/03.Nodejs/01.nodejs%E9%80%92%E5%BD%92%E8%AF%BB%E5%8F%96%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6.html",relativePath:"03.技术/03.Nodejs/01.nodejs递归读取所有文件.md",key:"v-6850f8b0",path:"/pages/117708e0af7f0bd9/",headersStr:null,content:"# nodejs递归读取所有文件\n\n\nvar fs = require('fs');\nvar path = require('path');\n \nfunction readFileList(dir, filesList = []) {\n    const files = fs.readdirSync(dir);\n    console.log(files);\n    files.forEach((item, index) => {\n        var fullPath = path.join(dir, item);\n        const stat = fs.statSync(fullPath);\n        if (stat.isDirectory()) {      \n            readFileList(path.join(dir, item), filesList);  //递归读取文件\n        } else {                \n            filesList.push(fullPath);                     \n        }        \n    });\n    return filesList;\n}\n \nvar filesList = [];\nreadFileList(__dirname,filesList);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",normalizedContent:"# nodejs递归读取所有文件\n\n\nvar fs = require('fs');\nvar path = require('path');\n \nfunction readfilelist(dir, fileslist = []) {\n    const files = fs.readdirsync(dir);\n    console.log(files);\n    files.foreach((item, index) => {\n        var fullpath = path.join(dir, item);\n        const stat = fs.statsync(fullpath);\n        if (stat.isdirectory()) {      \n            readfilelist(path.join(dir, item), fileslist);  //递归读取文件\n        } else {                \n            fileslist.push(fullpath);                     \n        }        \n    });\n    return fileslist;\n}\n \nvar fileslist = [];\nreadfilelist(__dirname,fileslist);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"解决百度无法收录搭建在GitHub上的个人博客的问题",frontmatter:{title:"解决百度无法收录搭建在GitHub上的个人博客的问题",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/41f87d890d0a02af",categories:["技术","博客搭建"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/04.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/01.%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E6%97%A0%E6%B3%95%E6%94%B6%E5%BD%95%E6%90%AD%E5%BB%BA%E5%9C%A8GitHub%E4%B8%8A%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%97%AE%E9%A2%98.html",relativePath:"03.技术/04.博客搭建/01.解决百度无法收录搭建在GitHub上的个人博客的问题.md",key:"v-6a148190",path:"/pages/41f87d890d0a02af/",headers:[{level:2,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:74},{level:2,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:172},{level:3,title:"如何知道百度有没有收录？",slug:"如何知道百度有没有收录",normalizedTitle:"如何知道百度有没有收录？",charIndex:1221},{level:2,title:"相关文章",slug:"相关文章",normalizedTitle:"相关文章",charIndex:1286}],excerpt:'<h1 id="解决百度无法收录搭建在github上的静态博客的问题"><a class="header-anchor" href="#解决百度无法收录搭建在github上的静态博客的问题">#</a> 解决百度无法收录搭建在GitHub上的静态博客的问题</h1>\n<div class="custom-block warning"><p class="custom-block-title">注意</p>\n<p>如果你正在寻找本博客的搭建文档，博主建议您查看这个仓库的<a href="https://github.com/xugaoyi/vuepress-theme-vdoing" target="_blank" rel="noopener noreferrer">README<OutboundLink/></a>。</p>\n</div>\n<h2 id="背景"><a class="header-anchor" href="#背景">#</a> 背景</h2>\n<p>由于GitHub禁止百度爬虫访问，造成托管在GitHub Pages上的博客无法被百度收录。相关问题可以通过百度站长平台的<code>抓取诊断</code>再现，每次都是403 Forbidden的错误。</p>\n',headersStr:"背景 解决方案 如何知道百度有没有收录？ 相关文章",content:"# 解决百度无法收录搭建在GitHub上的静态博客的问题\n\n注意\n\n如果你正在寻找本博客的搭建文档，博主建议您查看这个仓库的README。\n\n\n# 背景\n\n由于GitHub禁止百度爬虫访问，造成托管在GitHub Pages上的博客无法被百度收录。相关问题可以通过百度站长平台的抓取诊断再现，每次都是403 Forbidden的错误。\n\n\n# 解决方案\n\n同时将博客同时同步托管到GitHub Pages和coding pages上，解决百度不收录问题。最后发现在国内使用coding pages打开速度特别快，而且还会被百度收录，因此我把coding pages的站点作为主站点，原本在github pages的作为分站点。\n\n步骤：\n\n1、注册coding账号，创建仓库，把代码推送到coding仓库，并开启pages服务。\n\n> git 操作部分和使用github的差不多，不了解git操作的可以看我的另一篇文章：Git使用手册\n\n2、我的博客项目使用vuepress搭建的，使用的是如下自动部署脚本，同时将代码推送到github和conding。\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# github\necho 'b.xugaoyi.com' > CNAME\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@github.com:xugaoyi/blog.git master:gh-pages # 发布到github\n\n# coding\necho 'xugaoyi.com' > CNAME\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@git.dev.tencent.com:xugaoyi/xugaoyi.git master # 发布到coding\n\ncd - # 退回开始所在目录\nrm -rf docs/.vuepress/dist\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n> 因为我想给两个平台上绑定不同的自定义域名，因此我分开创建了CNAME文件。\n\n3、有自定义域名的，也可以在coding pages绑定自定义域名，域名DNS解析中添加CNAME记录指向coding pages的站点地址即可。（没有自定义域名的可忽略，同时把自动部署脚本中的创建CNAME文件的脚本去掉）\n\n最后，使用百度站长的抓取诊断，发现抓取成功啦，再使用百度站长的链接提交功能，把链接提交给百度，过一段时间就可能在百度搜索中搜索到啦。\n\n\n# 如何知道百度有没有收录？\n\n在百度搜索框中使用site:<链接地址>，如：\n\nsite:xugaoyi.com\n\n\n1\n\n\n\n# 相关文章\n\n《GitHub Actions 定时运行代码：每天定时百度链接推送》",normalizedContent:"# 解决百度无法收录搭建在github上的静态博客的问题\n\n注意\n\n如果你正在寻找本博客的搭建文档，博主建议您查看这个仓库的readme。\n\n\n# 背景\n\n由于github禁止百度爬虫访问，造成托管在github pages上的博客无法被百度收录。相关问题可以通过百度站长平台的抓取诊断再现，每次都是403 forbidden的错误。\n\n\n# 解决方案\n\n同时将博客同时同步托管到github pages和coding pages上，解决百度不收录问题。最后发现在国内使用coding pages打开速度特别快，而且还会被百度收录，因此我把coding pages的站点作为主站点，原本在github pages的作为分站点。\n\n步骤：\n\n1、注册coding账号，创建仓库，把代码推送到coding仓库，并开启pages服务。\n\n> git 操作部分和使用github的差不多，不了解git操作的可以看我的另一篇文章：git使用手册\n\n2、我的博客项目使用vuepress搭建的，使用的是如下自动部署脚本，同时将代码推送到github和conding。\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# github\necho 'b.xugaoyi.com' > cname\ngit init\ngit add -a\ngit commit -m 'deploy'\ngit push -f git@github.com:xugaoyi/blog.git master:gh-pages # 发布到github\n\n# coding\necho 'xugaoyi.com' > cname\ngit add -a\ngit commit -m 'deploy'\ngit push -f git@git.dev.tencent.com:xugaoyi/xugaoyi.git master # 发布到coding\n\ncd - # 退回开始所在目录\nrm -rf docs/.vuepress/dist\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n> 因为我想给两个平台上绑定不同的自定义域名，因此我分开创建了cname文件。\n\n3、有自定义域名的，也可以在coding pages绑定自定义域名，域名dns解析中添加cname记录指向coding pages的站点地址即可。（没有自定义域名的可忽略，同时把自动部署脚本中的创建cname文件的脚本去掉）\n\n最后，使用百度站长的抓取诊断，发现抓取成功啦，再使用百度站长的链接提交功能，把链接提交给百度，过一段时间就可能在百度搜索中搜索到啦。\n\n\n# 如何知道百度有没有收录？\n\n在百度搜索框中使用site:<链接地址>，如：\n\nsite:xugaoyi.com\n\n\n1\n\n\n\n# 相关文章\n\n《github actions 定时运行代码：每天定时百度链接推送》",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"使用Gitalk实现静态博客无后台评论系统",frontmatter:{title:"使用Gitalk实现静态博客无后台评论系统",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/1da0bf9a988eafe5",categories:["技术","博客搭建"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/04.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/02.%E4%BD%BF%E7%94%A8Gitalk%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%97%A0%E5%90%8E%E5%8F%B0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F.html",relativePath:"03.技术/04.博客搭建/02.使用Gitalk实现静态博客无后台评论系统.md",key:"v-d2c868d8",path:"/pages/1da0bf9a988eafe5/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:28},{level:2,title:"准备",slug:"准备",normalizedTitle:"准备",charIndex:109},{level:2,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:10},{level:3,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:338},{level:3,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:2},{level:3,title:"BUG修复",slug:"bug修复",normalizedTitle:"bug修复",charIndex:1603}],excerpt:'<h1 id="使用gitalk实现静态博客无后台评论系统"><a class="header-anchor" href="#使用gitalk实现静态博客无后台评论系统">#</a> 使用Gitalk实现静态博客无后台评论系统</h1>\n<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>Gitalk，一个基于 Github Issue 和 Preact 开发的评论插件。</p>\n<p>下面我们来用它在vuepress搭建的博客中搭建评论区吧</p>\n',headersStr:"前言 准备 实现 安装 使用 BUG修复",content:"# 使用Gitalk实现静态博客无后台评论系统\n\n\n# 前言\n\nGitalk，一个基于 Github Issue 和 Preact 开发的评论插件。\n\n下面我们来用它在vuepress搭建的博客中搭建评论区吧\n\n\n# 准备\n\n使用一个新的东西首先当然是要了解它\n\nGitalk demo：https://gitalk.github.io/\n\nGitalk github：https://github.com/gitalk/gitalk\n\n\n# 实现\n\n如何实现？最好的方法我认为是看官方文档，这里我只是记录一下实现的步骤。\n\n使用一个别人已经开发好的 vuepress-plugin-comment 插件来帮助我们把Gitalk应用到vuepress搭建的静态博客。\n\n\n# 安装\n\nnpm install --save vuepress-plugin-comment\n\n\n1\n\n\n\n# 使用\n\noptions的配置和Gitalk的配置相同\n\nmodule.exports = {\n  plugins: [\n    [\n      'vuepress-plugin-comment',\n      {\n        choosen: 'gitalk', \n        options: {\n          clientID: 'GitHub Application Client ID',\n          clientSecret: 'GitHub Application Client Secret',\n          repo: 'GitHub repo',\n          owner: 'GitHub repo owner',\n          admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n          distractionFreeMode: false \n        }\n      }\n    ]\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n需要 GitHub Application，如果没有 点击这里申请，Authorization callback URL 填写当前使用插件页面的域名。\n\n\n\n申请完成就会得 Client ID 和 Client Secret。然后把对应参数填写到配置中，例：\n\nmodule.exports = {\n  plugins: [\n    [\n      'vuepress-plugin-comment',\n      {\n        choosen: 'gitalk', \n        options: {\n          clientID: 'a6e*******4709b88b',\n          clientSecret: 'f0e***************beb8b2d54d7241',\n          repo: 'blog', // GitHub 仓库\n          owner: 'xugaoyi', // GitHub仓库所有者\n          admin: ['xugaoyi'], // 对仓库有写权限的人\n          distractionFreeMode: false \n        }\n      }\n    ]\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n配置好之后重启项目就发现页面上多了一个评论区，说明评论功能实现啦。但还是有一些bug，继续完善它~\n\n\n# BUG修复\n\n评论区与博客样式不匹配\n\n解决办法：新增全局样式文件.vuepress/styles/index.styl，写入样式\n\n#vuepress-plugin-comment\n  max-width $contentWidth\n  margin 0 auto\n  padding 2rem 2.5rem\n  @media (max-width: $MQNarrow)\n    padding 2rem\n  @media (max-width: $MQMobileNarrow)\n    padding 1.5rem\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n评论区出现 Error: Validation Failed.\n\n问题分析：当页面 链接过长 或 存在中文链接，导致整个链接字符串长度超过50时，会造成请求issues接口失败，出现422状态码。（中文链接会自动转码，变得很长，id参数默认取的是链接，长度不能超过50）\n\n解决办法：手动设置id取值，限制长度不超过50。\n\n{\n choosen: 'gitalk', \n options: {\n   ...\n   id: \"<%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %>\", //  页面的唯一标识,长度不能超过50\n   title: \"「评论」<%- document.title %>\", // GitHub issue 的标题\n   labels: [\"Gitalk\", \"Comment\"], // GitHub issue 的标签\n   body:\"<%- document.title %>：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>\" // GitHub issue 的内容\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> 访问变量时，如 $frontmatter 或 window等，请使用 EJS 语法。因为在配置中不能使用回调函数，会被vuepress过滤，因此使用 EJS 语法。 ——插件作者文档说明\n\n切换页面后评论区内容还是上一个页面的评论\n\n解决：id在获取path时使用 frontmatter.to.path，插件内置了 ``frontmatter.from、frontmatter.to`。\n\n{\n choosen: 'gitalk', \n options: {\n   ...\n   id: \"<%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %>\", //  页面的唯一标识,长度不能超过50\n   title: \"「评论」<%- document.title %>\", // GitHub issue 的标题\n   labels: [\"Gitalk\", \"Comment\"], // GitHub issue 的标签\n   body:\"<%- document.title %>：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>\" // GitHub issue 的内容\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",normalizedContent:"# 使用gitalk实现静态博客无后台评论系统\n\n\n# 前言\n\ngitalk，一个基于 github issue 和 preact 开发的评论插件。\n\n下面我们来用它在vuepress搭建的博客中搭建评论区吧\n\n\n# 准备\n\n使用一个新的东西首先当然是要了解它\n\ngitalk demo：https://gitalk.github.io/\n\ngitalk github：https://github.com/gitalk/gitalk\n\n\n# 实现\n\n如何实现？最好的方法我认为是看官方文档，这里我只是记录一下实现的步骤。\n\n使用一个别人已经开发好的 vuepress-plugin-comment 插件来帮助我们把gitalk应用到vuepress搭建的静态博客。\n\n\n# 安装\n\nnpm install --save vuepress-plugin-comment\n\n\n1\n\n\n\n# 使用\n\noptions的配置和gitalk的配置相同\n\nmodule.exports = {\n  plugins: [\n    [\n      'vuepress-plugin-comment',\n      {\n        choosen: 'gitalk', \n        options: {\n          clientid: 'github application client id',\n          clientsecret: 'github application client secret',\n          repo: 'github repo',\n          owner: 'github repo owner',\n          admin: ['github repo owner and collaborators, only these guys can initialize github issues'],\n          distractionfreemode: false \n        }\n      }\n    ]\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n需要 github application，如果没有 点击这里申请，authorization callback url 填写当前使用插件页面的域名。\n\n\n\n申请完成就会得 client id 和 client secret。然后把对应参数填写到配置中，例：\n\nmodule.exports = {\n  plugins: [\n    [\n      'vuepress-plugin-comment',\n      {\n        choosen: 'gitalk', \n        options: {\n          clientid: 'a6e*******4709b88b',\n          clientsecret: 'f0e***************beb8b2d54d7241',\n          repo: 'blog', // github 仓库\n          owner: 'xugaoyi', // github仓库所有者\n          admin: ['xugaoyi'], // 对仓库有写权限的人\n          distractionfreemode: false \n        }\n      }\n    ]\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n配置好之后重启项目就发现页面上多了一个评论区，说明评论功能实现啦。但还是有一些bug，继续完善它~\n\n\n# bug修复\n\n评论区与博客样式不匹配\n\n解决办法：新增全局样式文件.vuepress/styles/index.styl，写入样式\n\n#vuepress-plugin-comment\n  max-width $contentwidth\n  margin 0 auto\n  padding 2rem 2.5rem\n  @media (max-width: $mqnarrow)\n    padding 2rem\n  @media (max-width: $mqmobilenarrow)\n    padding 1.5rem\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n评论区出现 error: validation failed.\n\n问题分析：当页面 链接过长 或 存在中文链接，导致整个链接字符串长度超过50时，会造成请求issues接口失败，出现422状态码。（中文链接会自动转码，变得很长，id参数默认取的是链接，长度不能超过50）\n\n解决办法：手动设置id取值，限制长度不超过50。\n\n{\n choosen: 'gitalk', \n options: {\n   ...\n   id: \"<%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %>\", //  页面的唯一标识,长度不能超过50\n   title: \"「评论」<%- document.title %>\", // github issue 的标题\n   labels: [\"gitalk\", \"comment\"], // github issue 的标签\n   body:\"<%- document.title %>：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>\" // github issue 的内容\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> 访问变量时，如 $frontmatter 或 window等，请使用 ejs 语法。因为在配置中不能使用回调函数，会被vuepress过滤，因此使用 ejs 语法。 ——插件作者文档说明\n\n切换页面后评论区内容还是上一个页面的评论\n\n解决：id在获取path时使用 frontmatter.to.path，插件内置了 ``frontmatter.from、frontmatter.to`。\n\n{\n choosen: 'gitalk', \n options: {\n   ...\n   id: \"<%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %>\", //  页面的唯一标识,长度不能超过50\n   title: \"「评论」<%- document.title %>\", // github issue 的标题\n   labels: [\"gitalk\", \"comment\"], // github issue 的标签\n   body:\"<%- document.title %>：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>\" // github issue 的内容\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床",frontmatter:{title:"GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床",date:"2020-01-03T12:55:43.000Z",permalink:"/pages/a5f73af5185fdf0a",categories:["技术","博客搭建"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/04.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/03.GitHub%20+%20jsDelivr%20+%20TinyPNG+%20PicGo%20%E6%89%93%E9%80%A0%E7%A8%B3%E5%AE%9A%E5%BF%AB%E9%80%9F%E3%80%81%E9%AB%98%E6%95%88%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A.html",relativePath:"03.技术/04.博客搭建/03.GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床.md",key:"v-00e97d86",path:"/pages/a5f73af5185fdf0a/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:55},{level:2,title:"图床打造",slug:"图床打造",normalizedTitle:"图床打造",charIndex:590}],excerpt:'<h1 id="github-jsdelivr-tinypng-picgo-打造稳定快速、高效免费图床"><a class="header-anchor" href="#github-jsdelivr-tinypng-picgo-打造稳定快速、高效免费图床">#</a> GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床</h1>\n<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p><strong>Q：为什么要使用图床呢？什么是图床？</strong></p>\n<p>A：写博客文章时，图片的上传和存放是一个问题，有的朋友可能会把图片放到和博客同一个仓库当中，使用相对路径来引用，这样后期维护起来会比较麻烦。还有的朋友会在不同的平台发布同一篇文章，这样一来每个平台都要上传图片，为了解决这些问题，比较推荐的做法是把图片统一上传到一个在线的第三方静态资源库中，我们把这个资源库称为图床，其返回一个图片的URL，使用<code>markdown+图片url</code>的方式写作文章，一次编写，到处使用~</p>\n',headersStr:"前言 图床打造",content:"# GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床\n\n\n# 前言\n\nQ：为什么要使用图床呢？什么是图床？\n\nA：写博客文章时，图片的上传和存放是一个问题，有的朋友可能会把图片放到和博客同一个仓库当中，使用相对路径来引用，这样后期维护起来会比较麻烦。还有的朋友会在不同的平台发布同一篇文章，这样一来每个平台都要上传图片，为了解决这些问题，比较推荐的做法是把图片统一上传到一个在线的第三方静态资源库中，我们把这个资源库称为图床，其返回一个图片的URL，使用markdown+图片url的方式写作文章，一次编写，到处使用~\n\n更好的选择...\n\n以下内容是比较旧的，现在我发现一个更好用，配置更方便的图床工具：https://picx.xpoet.cn/ 使用方法看一下他网站的使用教程就行。 撒由那拉~~\n\n2021.07.04\n\nQ：图床的选择\n\nA：推荐使用GitHub作为图床，特点是免费、稳定，有一个小缺点是国内访问速度慢，不过没关系，可以使用jsDelivr免费CDN加速。\n\nQ：jsDelivr是什么？\n\nA：jsDelivr是国外的一家优秀的公共 CDN 服务提供商，该平台是首个「打通中国大陆与海外的免费CDN服务」，无须担心中国防火墙问题而影响使用。官网：http://www.jsdelivr.com/\n\n\n# 图床打造\n\n 1. 新建GitHub仓库，注意仓库要设置成公开\n\n 2. 参照 官方文档 生成一个token密钥\n\n 3. 在 这里 下载PicGo，安装完成后打开，图床设置 选 GitHub图床，并填写相应的信息\n    \n    * 仓库名：前面新建的仓库，格式：<用户名>/<仓库名>\n    * 分支名：填写主分支master即可\n    * Token：前面生成的token密钥\n    * 存储路径：按你自己的需求填写\n    * 自定义域名：图片上传后，PicGo 会按照 自定义域名+上传的图片名 的方式生成访问链接，此处我们填写jsDelivr的CDN加速地址，格式：https://cdn.jsdelivr.net/gh/<用户名>/<仓库名>\n\n\n\n 4. 使用https://tinypng.cn/压缩你要上传的图片（如图片已经很小或你有更好的压缩工具可省略这一步）\n 5. 在PigGo的上传区上传你的图片，到相册一键复制刚刚上传的图片URL，至此，你就可以在你的文章当中愉快的插入图片啦~， 更多功能自己去探索吧~~\n\n",normalizedContent:"# github + jsdelivr + tinypng+ picgo 打造稳定快速、高效免费图床\n\n\n# 前言\n\nq：为什么要使用图床呢？什么是图床？\n\na：写博客文章时，图片的上传和存放是一个问题，有的朋友可能会把图片放到和博客同一个仓库当中，使用相对路径来引用，这样后期维护起来会比较麻烦。还有的朋友会在不同的平台发布同一篇文章，这样一来每个平台都要上传图片，为了解决这些问题，比较推荐的做法是把图片统一上传到一个在线的第三方静态资源库中，我们把这个资源库称为图床，其返回一个图片的url，使用markdown+图片url的方式写作文章，一次编写，到处使用~\n\n更好的选择...\n\n以下内容是比较旧的，现在我发现一个更好用，配置更方便的图床工具：https://picx.xpoet.cn/ 使用方法看一下他网站的使用教程就行。 撒由那拉~~\n\n2021.07.04\n\nq：图床的选择\n\na：推荐使用github作为图床，特点是免费、稳定，有一个小缺点是国内访问速度慢，不过没关系，可以使用jsdelivr免费cdn加速。\n\nq：jsdelivr是什么？\n\na：jsdelivr是国外的一家优秀的公共 cdn 服务提供商，该平台是首个「打通中国大陆与海外的免费cdn服务」，无须担心中国防火墙问题而影响使用。官网：http://www.jsdelivr.com/\n\n\n# 图床打造\n\n 1. 新建github仓库，注意仓库要设置成公开\n\n 2. 参照 官方文档 生成一个token密钥\n\n 3. 在 这里 下载picgo，安装完成后打开，图床设置 选 github图床，并填写相应的信息\n    \n    * 仓库名：前面新建的仓库，格式：<用户名>/<仓库名>\n    * 分支名：填写主分支master即可\n    * token：前面生成的token密钥\n    * 存储路径：按你自己的需求填写\n    * 自定义域名：图片上传后，picgo 会按照 自定义域名+上传的图片名 的方式生成访问链接，此处我们填写jsdelivr的cdn加速地址，格式：https://cdn.jsdelivr.net/gh/<用户名>/<仓库名>\n\n\n\n 4. 使用https://tinypng.cn/压缩你要上传的图片（如图片已经很小或你有更好的压缩工具可省略这一步）\n 5. 在piggo的上传区上传你的图片，到相册一键复制刚刚上传的图片url，至此，你就可以在你的文章当中愉快的插入图片啦~， 更多功能自己去探索吧~~\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"vdoing主题效果图",frontmatter:{title:"vdoing主题效果图",date:"2020-04-08T11:27:22.000Z",permalink:"/pages/d557b9a89a215d2e",article:!1,author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/03.%E6%8A%80%E6%9C%AF/04.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/10.vdoing%E4%B8%BB%E9%A2%98%E6%95%88%E6%9E%9C%E5%9B%BE.html",relativePath:"03.技术/04.博客搭建/10.vdoing主题效果图.md",key:"v-6d272db9",path:"/pages/d557b9a89a215d2e/",headers:[{level:2,title:"PC端",slug:"pc端",normalizedTitle:"pc端",charIndex:18},{level:2,title:"首页个性化大图",slug:"首页个性化大图",normalizedTitle:"首页个性化大图",charIndex:53},{level:2,title:"深色模式和阅读模式",slug:"深色模式和阅读模式",normalizedTitle:"深色模式和阅读模式",charIndex:76},{level:2,title:"移动端",slug:"移动端",normalizedTitle:"移动端",charIndex:105}],headersStr:"PC端 首页个性化大图 深色模式和阅读模式 移动端",content:"# vdoing主题效果图\n\n\n# PC端\n\n\n首页 & 目录页△\n\n文章详情页 & 时间轴页△\n\n\n# 首页个性化大图\n\n\n首页个性化大图△\n\n\n# 深色模式和阅读模式\n\n\n深色模式△\n\n阅读模式△\n\n\n# 移动端\n\n\n移动端效果△",normalizedContent:"# vdoing主题效果图\n\n\n# pc端\n\n\n首页 & 目录页△\n\n文章详情页 & 时间轴页△\n\n\n# 首页个性化大图\n\n\n首页个性化大图△\n\n\n# 深色模式和阅读模式\n\n\n深色模式△\n\n阅读模式△\n\n\n# 移动端\n\n\n移动端效果△",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"费曼学习法",frontmatter:{title:"费曼学习法",date:"2020-07-16T10:04:14.000Z",permalink:"/pages/f2a556/",categories:["更多","学习"],tags:["学习方法"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/00.%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95.html",relativePath:"04.更多/01.学习/00.费曼学习法.md",key:"v-6668036c",path:"/pages/f2a556/",headers:[{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:102}],headersStr:"步骤",content:"费曼学习法，我很喜欢的一个学习方法，简单来说，就是：通过向别人清楚的解说某一件事或是写一篇浅显易懂的教程文章，来确认自己是否真正弄懂了这件事。 可以说是在通过向别讲解过程中来对自身的 查缺补漏。\n\n\n# 步骤\n\n费曼学习法分为4个步骤:\n\n 1. 确定学习目标\n\n你想学习的概念、内容、主题是什么。\n\n 2. 模拟教学学习法\n\n你要模拟自己是一位老师，面对完全不懂这个领域的人，用自己的话，尽可能具体形象地讲诉。这样的讲诉有助于你活学活用，触类旁通，联系生活具体情境。\n\n 3. 回顾\n\n反思第2步遇到的问题，哪些地方卡壳了，哪些地方对方没有真正听懂。找出问题的要害，把握关键环节。\n\n 4. 简化\n\n把这些遇到问题的地方，重新梳理理解，尽可能了解更多背景和相关知识，再用尽可能简化的方式重新表达，设法看穿本质。然后，返回第2步。\n\n> 参考：\n> \n> 《费曼学习法：为何被称为史上最牛的学习法，它的本质究竟是什么？》\n> \n> 《费曼学习法》",normalizedContent:"费曼学习法，我很喜欢的一个学习方法，简单来说，就是：通过向别人清楚的解说某一件事或是写一篇浅显易懂的教程文章，来确认自己是否真正弄懂了这件事。 可以说是在通过向别讲解过程中来对自身的 查缺补漏。\n\n\n# 步骤\n\n费曼学习法分为4个步骤:\n\n 1. 确定学习目标\n\n你想学习的概念、内容、主题是什么。\n\n 2. 模拟教学学习法\n\n你要模拟自己是一位老师，面对完全不懂这个领域的人，用自己的话，尽可能具体形象地讲诉。这样的讲诉有助于你活学活用，触类旁通，联系生活具体情境。\n\n 3. 回顾\n\n反思第2步遇到的问题，哪些地方卡壳了，哪些地方对方没有真正听懂。找出问题的要害，把握关键环节。\n\n 4. 简化\n\n把这些遇到问题的地方，重新梳理理解，尽可能了解更多背景和相关知识，再用尽可能简化的方式重新表达，设法看穿本质。然后，返回第2步。\n\n> 参考：\n> \n> 《费曼学习法：为何被称为史上最牛的学习法，它的本质究竟是什么？》\n> \n> 《费曼学习法》",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"笔记方法",frontmatter:{title:"笔记方法",date:"2020-07-16T11:00:55.000Z",permalink:"/pages/e60c81/",categories:["更多","学习"],tags:["笔记方法"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/01.%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95.html",relativePath:"04.更多/01.学习/01.笔记方法.md",key:"v-7ea387ea",path:"/pages/e60c81/",headers:[{level:2,title:"康奈尔笔记法",slug:"康奈尔笔记法",normalizedTitle:"康奈尔笔记法",charIndex:2},{level:2,title:"思维导图法",slug:"思维导图法",normalizedTitle:"思维导图法",charIndex:15},{level:2,title:"金三角笔记法",slug:"金三角笔记法",normalizedTitle:"金三角笔记法",charIndex:27},{level:2,title:"曼陀罗九宫格笔记法",slug:"曼陀罗九宫格笔记法",normalizedTitle:"曼陀罗九宫格笔记法",charIndex:40},{level:2,title:"记号记录法",slug:"记号记录法",normalizedTitle:"记号记录法",charIndex:56},{level:2,title:"六色笔记法",slug:"六色笔记法",normalizedTitle:"六色笔记法",charIndex:68},{level:2,title:"加工笔记法",slug:"加工笔记法",normalizedTitle:"加工笔记法",charIndex:80},{level:2,title:"整理笔记要点1-科学标记重点",slug:"整理笔记要点1-科学标记重点",normalizedTitle:"整理笔记要点1-科学标记重点",charIndex:92},{level:2,title:"整理笔记要点2-修改不涂改",slug:"整理笔记要点2-修改不涂改",normalizedTitle:"整理笔记要点2-修改不涂改",charIndex:113}],headersStr:"康奈尔笔记法 思维导图法 金三角笔记法 曼陀罗九宫格笔记法 记号记录法 六色笔记法 加工笔记法 整理笔记要点1-科学标记重点 整理笔记要点2-修改不涂改",content:"# 康奈尔笔记法\n\n\n\n\n# 思维导图法\n\n\n\n\n# 金三角笔记法\n\n\n\n\n# 曼陀罗九宫格笔记法\n\n\n\n\n# 记号记录法\n\n\n\n\n# 六色笔记法\n\n\n\n\n# 加工笔记法\n\n\n\n\n# 整理笔记要点1-科学标记重点\n\n\n\n\n# 整理笔记要点2-修改不涂改\n\n",normalizedContent:"# 康奈尔笔记法\n\n\n\n\n# 思维导图法\n\n\n\n\n# 金三角笔记法\n\n\n\n\n# 曼陀罗九宫格笔记法\n\n\n\n\n# 记号记录法\n\n\n\n\n# 六色笔记法\n\n\n\n\n# 加工笔记法\n\n\n\n\n# 整理笔记要点1-科学标记重点\n\n\n\n\n# 整理笔记要点2-修改不涂改\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"提高学习效率的策略",frontmatter:{title:"提高学习效率的策略",date:"2020-01-04T11:54:14.000Z",permalink:"/pages/a8692ab3bdcb4588",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/02.%E6%8F%90%E9%AB%98%E5%AD%A6%E4%B9%A0%E6%95%88%E7%8E%87%E7%9A%84%E7%AD%96%E7%95%A5.html",relativePath:"04.更多/01.学习/02.提高学习效率的策略.md",key:"v-410ae0dc",path:"/pages/a8692ab3bdcb4588/",headers:[{level:3,title:"检索式学习",slug:"检索式学习",normalizedTitle:"检索式学习",charIndex:222},{level:3,title:"频繁的集中练习只会产生短期记忆",slug:"频繁的集中练习只会产生短期记忆",normalizedTitle:"频繁的集中练习只会产生短期记忆",charIndex:634},{level:3,title:"间隔练习使知识存储更牢固",slug:"间隔练习使知识存储更牢固",normalizedTitle:"间隔练习使知识存储更牢固",charIndex:958},{level:3,title:"穿插练习有助于长期记忆",slug:"穿插练习有助于长期记忆",normalizedTitle:"穿插练习有助于长期记忆",charIndex:1346},{level:3,title:"多样化练习促进知识的活学活用",slug:"多样化练习促进知识的活学活用",normalizedTitle:"多样化练习促进知识的活学活用",charIndex:1728},{level:3,title:"小总结",slug:"小总结",normalizedTitle:"小总结",charIndex:1918},{level:3,title:"知识的“滚雪球”效应",slug:"知识的-滚雪球-效应",normalizedTitle:"知识的“滚雪球”效应",charIndex:2183}],excerpt:'<h1 id="提高学习效率的策略"><a class="header-anchor" href="#提高学习效率的策略">#</a> 提高学习效率的策略</h1>\n<p>推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的<strong>检索练习</strong>——例如小的测试和自测，<strong>间隔练习</strong>、<strong>穿插</strong>不同但相关科目或技能的练习（<strong>多样化练习</strong>），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。</p>\n',headersStr:"检索式学习 频繁的集中练习只会产生短期记忆 间隔练习使知识存储更牢固 穿插练习有助于长期记忆 多样化练习促进知识的活学活用 小总结 知识的“滚雪球”效应",content:"# 提高学习效率的策略\n\n推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的检索练习——例如小的测试和自测，间隔练习、穿插不同但相关科目或技能的练习（多样化练习），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。\n\n\n# 检索式学习\n\n练习从记忆中检索新知识或新技能是有效的学习工具，也是保持长久记忆的有力武器。但凡需要大脑记忆、需要在将来回忆的东西，都可以用到它——对于事实、复杂的概念、解决问题的技巧、运动技能来说都适用。\n\n那么到底什么是检索式学习呢？说说我理解的检索式学习：在脑中检索知识，比如课后的一个小测试、对某个知识点用笔默写出来，甚至去参加面试，等等，都可以理解为检索式学习。\n\n努力检索有助于人们获得更好的学习效果，产生更持久的记忆。我们很容易相信，学东西时越轻松，学习效果越好，但研究表明，事实恰恰相反。只有当头脑被迫工作时，才会将所学的东西记得更牢靠。在检索时所付出的努力越大——只要真正做到这一点检索就会更好地强化你的所学。在第一次检测后，推迟后续检索练习要比立即练习更能强化记忆，因为延迟后再检索需要会费更大力气。\n\n反复检索不仅能让记忆更持久，还能让知识在更多变的环境中更容易被检索，而且可以解决更多的问题。\n\n\n# 频繁的集中练习只会产生短期记忆\n\n人们顽固地相信，自己把心思放在一件事上，拼命重复就能学得更好，认为这些观点经受住了时间的考验，而且“练习，练习，再练习”的明显收效再次证明了这种方法的好处。但是，科学家们把习得技能阶段的这种成绩称为“暂时的优势”，并把它同“潜在的习惯优势”区分开来。形成习惯优势有种种技巧，例如有间隔的练习、有穿插内容的练习，以及多样化练习，这些技巧恰恰会放缓有明显成果的学习进程，它们不会在练习中提高我们的表现。我们从表面上看不到成绩提高，也就没有付出努力的动力（大多数人的学习心理就是这样，在看不到成果的时候容易失去动力）。填鸭式练习是集中练习的一种形式，它一直被比作贪食症——吃得不少，但没过多久基本上都吐出来了。\n\n\n# 间隔练习使知识存储更牢固\n\n把学习与练习间隔开来分期进行，让两者之间隔上一定时间，这样做就能让学习成果更加显著、记忆更加牢固，能有效地形成习惯优势。间隔多长时间才够？答案很简单：从最低限度上说，间隔的时间足够出现一点儿遗忘就对了。练习环节中间出现一点儿遗忘是好事，只要它能让人更加努力地练习就行。话说回来，你肯定不愿意忘掉太多东西，以至于检索最终变成了对资料的重新学习。间隔一段时间再练习能巩固记忆。睡眠似乎在巩固记忆的工作中扮演了重要角色，所以在两次练习间至少间隔一天应该是不错的做法。 要当心熟悉这个陷阱：你感觉自己明白了某样东西，觉得不再需要练习了。如果想走捷径，这种熟悉会让你在自测时受伤。道格拉斯·拉尔森说：“你必须自觉地说，好吧，我要强迫自己把这些全想起来，要是我想不起来，那我是忘掉了什么，我怎，么会不知道那个呢?’如果是教师出题测验，那就一下子变成你\n\n\n# 穿插练习有助于长期记忆\n\n穿插练习两样或更多的内容同样也提供了一种间隔。穿插内容练习有助于发展人们辨识不同问题的能力，也是在培养人们从不断增加的解决方案中寻找合适工具的能力。进行穿插内容练习，不能是完成一个科目的全部练习再跳到下一个科目。你需要在每个科目的练习完成前就跳到下一个科目。我们的一个朋友这样描述自己的经历，“我去上了一堂冰球课，学习滑冰、控球、射门。滑冰练习还没进行多长时间，自己刚刚有点儿上手的感觉，教练就转到控球练习上了，这让我感到非常沮丧。灰心地到家后，我说，‘为什么教练不让我们一次把技能练好呢？”其实他是遇上了少有的好教练。这位教练懂得分散精力练习不同技能要比下力气一次掌握一件事更有效果。球员感到沮丧是因为并没有在短时间内看到成果，但到下一周，无论是滑冰、控球，还是其他内容，他都会获得全面进步，效果会好于每次只专心练习一项技能。\n\n\n# 多样化练习促进知识的活学活用\n\n与穿插内容练习一样，多样化练习有助于学习者树立更开阔的心理模式。这是一种能力，掌握它的人可以评估不断变化的条件，并调整应对方式进行适应。可以说，穿插内容练习与多样化练习有助于学习者超越暂时性记忆，步入更高层次的概念性学习，并把它们应用到实际情景中，从而获得更全面、更深刻、更持久的学习效果。这些学习成果在运动技能中就表现为潜在的习惯优势。\n\n\n# 小总结\n\n有间隔、有内容穿插出现，以及内容多样化，其实就是我们生活的本来面貌。程序员每开发一个项目，都是一次测验，也是一次检索练习的锻炼。每次常规的拦车检查对于警察来说都是一次测验，而且每次检查都不一样，这会加强警察的外显记忆与内隐记忆。只要他上心，今后的工作就会更有效率。人们常说的一句话是“从经验中学习”。有些人似乎从来不学习，学与不学的一个区别可能就在于，人们是否培养了反思（总结）的习惯。反思（总结）是检索练习的一种形式（发生了什么？我是怎么做的？怎样才能有用？），而且辅以细化加强（下次我要采取别的什么方法？）\n\n\n# 知识的“滚雪球”效应\n\n学习的过程至少可以分成三步：最开始是对短期工作记忆中信息的编码。这时信息还没有被巩固成长期记忆中坚实的知识表征。巩固会辨识并稳定记忆线索，赋予其含义，把它们与过去的经验以及长期记忆中已经存储下来的其他知识联系起来。检索会更新所学的东西，并让你做到学以致用。\n\n学习总是建立在已知基础之上。我们是通过与已知建立联系这种方式来解读事件和记忆事件的。\n\n长期记忆的容量基本上是无限的。你知道得越多，就越有可能为新知识建立联系。\n\n由于长期记忆的容量颇大，所以关键是要有一种能力，让你在需要的时候锁定并回忆已知。回忆所学知识的难易程度取决于对信息的重复使用（保持检索路径不会被忘却），也取决于你是否建立起了强大的检索线索，因为它能重新激活你的记忆。\n\n阶段性地检索所学，有助于强化记忆间的联系，也能强化回忆知识的线索，同时还能弱化连通冲突记忆的路径。检索练习若是没什么难度，那就不能强化所学的知识；练习难度越大，收效才越大。\n\n当你从短期记忆中回忆所学时，例如快速频繁地进行练习，是不需要花什么心思的，也不会有长期性的收效。但当你过一段时间再回忆时，当你对所学的东西有些遗忘时，你就不得不努力重建这一切。这种耗费心力的检索既能强化记忆，又能让所学再次具有可塑性，引发对所学知识的再巩固。再巩固可以用新信息更新你的记忆，同时可以将它们与最近学到的东西联系起来。\n\n重复进行费力的回忆或是练习，有助于把所学的知识整合成心智模型。在心智模型中，一套彼此相关的概念或一系列运动技能被融会贯通，形成一个有意义的整体。它能适应随后的各种环境，并发挥作用。开车时的感知和操控就是一个例子。在面对弧线球时知道如何打出全垒打也是同一个道理。\n\n练习的条件如果发生了变化，或是在检索中穿插安排了对其他资料的练习，我们就能强化自己的辨析与归纳能力，凭借全面发展，我们还能把所学的知识用在以后的新环境中。穿插与多样化建立了新的联系，拓展并进一步深化了记忆中的知识，同时增加了检索线索的数量。、\n\n试着自己想出答案，而不是坐等别人给你答案，或是在拿到解决方案前自行尝试解决一个问题，会产生更好的学习效果，也能让你把正确的答案或解决方案记得更持久。即便有时你会犯错，只要有纠正性反馈就没问题。\n\n——以上内容摘自《认知天性》，结合本人的个人理解，更多内容请查看该书籍。\n\n",normalizedContent:"# 提高学习效率的策略\n\n推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的检索练习——例如小的测试和自测，间隔练习、穿插不同但相关科目或技能的练习（多样化练习），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。\n\n\n# 检索式学习\n\n练习从记忆中检索新知识或新技能是有效的学习工具，也是保持长久记忆的有力武器。但凡需要大脑记忆、需要在将来回忆的东西，都可以用到它——对于事实、复杂的概念、解决问题的技巧、运动技能来说都适用。\n\n那么到底什么是检索式学习呢？说说我理解的检索式学习：在脑中检索知识，比如课后的一个小测试、对某个知识点用笔默写出来，甚至去参加面试，等等，都可以理解为检索式学习。\n\n努力检索有助于人们获得更好的学习效果，产生更持久的记忆。我们很容易相信，学东西时越轻松，学习效果越好，但研究表明，事实恰恰相反。只有当头脑被迫工作时，才会将所学的东西记得更牢靠。在检索时所付出的努力越大——只要真正做到这一点检索就会更好地强化你的所学。在第一次检测后，推迟后续检索练习要比立即练习更能强化记忆，因为延迟后再检索需要会费更大力气。\n\n反复检索不仅能让记忆更持久，还能让知识在更多变的环境中更容易被检索，而且可以解决更多的问题。\n\n\n# 频繁的集中练习只会产生短期记忆\n\n人们顽固地相信，自己把心思放在一件事上，拼命重复就能学得更好，认为这些观点经受住了时间的考验，而且“练习，练习，再练习”的明显收效再次证明了这种方法的好处。但是，科学家们把习得技能阶段的这种成绩称为“暂时的优势”，并把它同“潜在的习惯优势”区分开来。形成习惯优势有种种技巧，例如有间隔的练习、有穿插内容的练习，以及多样化练习，这些技巧恰恰会放缓有明显成果的学习进程，它们不会在练习中提高我们的表现。我们从表面上看不到成绩提高，也就没有付出努力的动力（大多数人的学习心理就是这样，在看不到成果的时候容易失去动力）。填鸭式练习是集中练习的一种形式，它一直被比作贪食症——吃得不少，但没过多久基本上都吐出来了。\n\n\n# 间隔练习使知识存储更牢固\n\n把学习与练习间隔开来分期进行，让两者之间隔上一定时间，这样做就能让学习成果更加显著、记忆更加牢固，能有效地形成习惯优势。间隔多长时间才够？答案很简单：从最低限度上说，间隔的时间足够出现一点儿遗忘就对了。练习环节中间出现一点儿遗忘是好事，只要它能让人更加努力地练习就行。话说回来，你肯定不愿意忘掉太多东西，以至于检索最终变成了对资料的重新学习。间隔一段时间再练习能巩固记忆。睡眠似乎在巩固记忆的工作中扮演了重要角色，所以在两次练习间至少间隔一天应该是不错的做法。 要当心熟悉这个陷阱：你感觉自己明白了某样东西，觉得不再需要练习了。如果想走捷径，这种熟悉会让你在自测时受伤。道格拉斯·拉尔森说：“你必须自觉地说，好吧，我要强迫自己把这些全想起来，要是我想不起来，那我是忘掉了什么，我怎，么会不知道那个呢?’如果是教师出题测验，那就一下子变成你\n\n\n# 穿插练习有助于长期记忆\n\n穿插练习两样或更多的内容同样也提供了一种间隔。穿插内容练习有助于发展人们辨识不同问题的能力，也是在培养人们从不断增加的解决方案中寻找合适工具的能力。进行穿插内容练习，不能是完成一个科目的全部练习再跳到下一个科目。你需要在每个科目的练习完成前就跳到下一个科目。我们的一个朋友这样描述自己的经历，“我去上了一堂冰球课，学习滑冰、控球、射门。滑冰练习还没进行多长时间，自己刚刚有点儿上手的感觉，教练就转到控球练习上了，这让我感到非常沮丧。灰心地到家后，我说，‘为什么教练不让我们一次把技能练好呢？”其实他是遇上了少有的好教练。这位教练懂得分散精力练习不同技能要比下力气一次掌握一件事更有效果。球员感到沮丧是因为并没有在短时间内看到成果，但到下一周，无论是滑冰、控球，还是其他内容，他都会获得全面进步，效果会好于每次只专心练习一项技能。\n\n\n# 多样化练习促进知识的活学活用\n\n与穿插内容练习一样，多样化练习有助于学习者树立更开阔的心理模式。这是一种能力，掌握它的人可以评估不断变化的条件，并调整应对方式进行适应。可以说，穿插内容练习与多样化练习有助于学习者超越暂时性记忆，步入更高层次的概念性学习，并把它们应用到实际情景中，从而获得更全面、更深刻、更持久的学习效果。这些学习成果在运动技能中就表现为潜在的习惯优势。\n\n\n# 小总结\n\n有间隔、有内容穿插出现，以及内容多样化，其实就是我们生活的本来面貌。程序员每开发一个项目，都是一次测验，也是一次检索练习的锻炼。每次常规的拦车检查对于警察来说都是一次测验，而且每次检查都不一样，这会加强警察的外显记忆与内隐记忆。只要他上心，今后的工作就会更有效率。人们常说的一句话是“从经验中学习”。有些人似乎从来不学习，学与不学的一个区别可能就在于，人们是否培养了反思（总结）的习惯。反思（总结）是检索练习的一种形式（发生了什么？我是怎么做的？怎样才能有用？），而且辅以细化加强（下次我要采取别的什么方法？）\n\n\n# 知识的“滚雪球”效应\n\n学习的过程至少可以分成三步：最开始是对短期工作记忆中信息的编码。这时信息还没有被巩固成长期记忆中坚实的知识表征。巩固会辨识并稳定记忆线索，赋予其含义，把它们与过去的经验以及长期记忆中已经存储下来的其他知识联系起来。检索会更新所学的东西，并让你做到学以致用。\n\n学习总是建立在已知基础之上。我们是通过与已知建立联系这种方式来解读事件和记忆事件的。\n\n长期记忆的容量基本上是无限的。你知道得越多，就越有可能为新知识建立联系。\n\n由于长期记忆的容量颇大，所以关键是要有一种能力，让你在需要的时候锁定并回忆已知。回忆所学知识的难易程度取决于对信息的重复使用（保持检索路径不会被忘却），也取决于你是否建立起了强大的检索线索，因为它能重新激活你的记忆。\n\n阶段性地检索所学，有助于强化记忆间的联系，也能强化回忆知识的线索，同时还能弱化连通冲突记忆的路径。检索练习若是没什么难度，那就不能强化所学的知识；练习难度越大，收效才越大。\n\n当你从短期记忆中回忆所学时，例如快速频繁地进行练习，是不需要花什么心思的，也不会有长期性的收效。但当你过一段时间再回忆时，当你对所学的东西有些遗忘时，你就不得不努力重建这一切。这种耗费心力的检索既能强化记忆，又能让所学再次具有可塑性，引发对所学知识的再巩固。再巩固可以用新信息更新你的记忆，同时可以将它们与最近学到的东西联系起来。\n\n重复进行费力的回忆或是练习，有助于把所学的知识整合成心智模型。在心智模型中，一套彼此相关的概念或一系列运动技能被融会贯通，形成一个有意义的整体。它能适应随后的各种环境，并发挥作用。开车时的感知和操控就是一个例子。在面对弧线球时知道如何打出全垒打也是同一个道理。\n\n练习的条件如果发生了变化，或是在检索中穿插安排了对其他资料的练习，我们就能强化自己的辨析与归纳能力，凭借全面发展，我们还能把所学的知识用在以后的新环境中。穿插与多样化建立了新的联系，拓展并进一步深化了记忆中的知识，同时增加了检索线索的数量。、\n\n试着自己想出答案，而不是坐等别人给你答案，或是在拿到解决方案前自行尝试解决一个问题，会产生更好的学习效果，也能让你把正确的答案或解决方案记得更持久。即便有时你会犯错，只要有纠正性反馈就没问题。\n\n——以上内容摘自《认知天性》，结合本人的个人理解，更多内容请查看该书籍。\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"提高记忆的技巧",frontmatter:{title:"提高记忆的技巧",date:"2020-01-03T14:34:48.000Z",permalink:"/pages/996822b2a2ca6e3b",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/03.%E6%8F%90%E9%AB%98%E8%AE%B0%E5%BF%86%E7%9A%84%E6%8A%80%E5%B7%A7.html",relativePath:"04.更多/01.学习/03.提高记忆的技巧.md",key:"v-a09d3836",path:"/pages/996822b2a2ca6e3b/",excerpt:'<h1 id="提高记忆的技巧"><a class="header-anchor" href="#提高记忆的技巧">#</a> 提高记忆的技巧</h1>\n<ol>\n<li><strong>多个感官并用</strong>\n记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。</li>\n</ol>\n',headersStr:null,content:"# 提高记忆的技巧\n\n 1. 多个感官并用 记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。\n\n 2. 重复记忆 每天留出半个到一个小时，梳理总结今天所学的内容。每一章复习完成后做系统的知识整理。\n\n 3. 建立关联 把你所学的新知识与已有的认知建立联系，对于记忆事半功倍。\n\n 4. 场景记忆 把知识具象化为一个场景，想象自己在何时何地能用这些知识，与自身发生联系。\n\n 5. 提出问题 每学习一个知识点，试着提问，然后给出答案。用了就记住了。",normalizedContent:"# 提高记忆的技巧\n\n 1. 多个感官并用 记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。\n\n 2. 重复记忆 每天留出半个到一个小时，梳理总结今天所学的内容。每一章复习完成后做系统的知识整理。\n\n 3. 建立关联 把你所学的新知识与已有的认知建立联系，对于记忆事半功倍。\n\n 4. 场景记忆 把知识具象化为一个场景，想象自己在何时何地能用这些知识，与自身发生联系。\n\n 5. 提出问题 每学习一个知识点，试着提问，然后给出答案。用了就记住了。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"自律小建议",frontmatter:{title:"自律小建议",date:"2020-01-03T14:35:18.000Z",permalink:"/pages/c3f302a03c8daf79",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/04.%E8%87%AA%E5%BE%8B%E5%B0%8F%E5%BB%BA%E8%AE%AE.html",relativePath:"04.更多/01.学习/04.自律小建议.md",key:"v-cb42fa62",path:"/pages/c3f302a03c8daf79/",excerpt:'<h1 id="自律小建议"><a class="header-anchor" href="#自律小建议">#</a> 自律小建议</h1>\n<ul>\n<li><strong>培养专注</strong>\n<ul>\n<li>练习冥想、瑜伽等</li>\n</ul>\n</li>\n<li><strong>排除外界干扰</strong>\n<ul>\n<li>手机调到勿扰，在图书馆学习等</li>\n</ul>\n</li>\n</ul>\n',headersStr:null,content:"# 自律小建议\n\n * 培养专注\n   * 练习冥想、瑜伽等\n * 排除外界干扰\n   * 手机调到勿扰，在图书馆学习等\n\n * 规定学习时间\n   \n   * 番茄时间管理——使用番茄时间管理法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。\n     \n     > 人的大脑在记忆一个东西的时候，有短期记忆和长期记忆之分。大脑编码内容进行长期记忆，需要一个过程的，可能是几个小时或几天，集中练习就给不了这个过程，所以集中练习带来的效果是短期记忆，而进行间隔练习，大脑则有时间进行充分的编码，学习到的知识就会储存为长期记忆。\n     > \n     > 推荐几种间歇锻炼方法：体能训练、课间操、眼保操、拉伸训练...\n     > \n     > 有好的身体可以使大脑更清醒哟~\n\n * 限制娱乐时间\n   \n   * 减少使用娱乐app的时间（苹果手机可设定屏幕使用时间）\n   \n   * 推荐观看>B站某位UP主的视频《每天只看半小时手机，坚持一周后我有哪些变化？》\n\n * 戒网瘾（特别是游戏）\n   \n   * 除了手机、游戏以外，周围有很多美好的事物值得我们去关注。\n\n * 设定目标\n   \n   * 想要更好的薪水和职位？多花点时间在学习上吧~\n   * 潜意识暗示自己，建立信心，让自己变得更优秀，然后去挑战更高的目标\n\n * 优秀的人仍在不断努力\n   \n   * 且看大神 阮一峰github 提交记录",normalizedContent:"# 自律小建议\n\n * 培养专注\n   * 练习冥想、瑜伽等\n * 排除外界干扰\n   * 手机调到勿扰，在图书馆学习等\n\n * 规定学习时间\n   \n   * 番茄时间管理——使用番茄时间管理法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。\n     \n     > 人的大脑在记忆一个东西的时候，有短期记忆和长期记忆之分。大脑编码内容进行长期记忆，需要一个过程的，可能是几个小时或几天，集中练习就给不了这个过程，所以集中练习带来的效果是短期记忆，而进行间隔练习，大脑则有时间进行充分的编码，学习到的知识就会储存为长期记忆。\n     > \n     > 推荐几种间歇锻炼方法：体能训练、课间操、眼保操、拉伸训练...\n     > \n     > 有好的身体可以使大脑更清醒哟~\n\n * 限制娱乐时间\n   \n   * 减少使用娱乐app的时间（苹果手机可设定屏幕使用时间）\n   \n   * 推荐观看>b站某位up主的视频《每天只看半小时手机，坚持一周后我有哪些变化？》\n\n * 戒网瘾（特别是游戏）\n   \n   * 除了手机、游戏以外，周围有很多美好的事物值得我们去关注。\n\n * 设定目标\n   \n   * 想要更好的薪水和职位？多花点时间在学习上吧~\n   * 潜意识暗示自己，建立信心，让自己变得更优秀，然后去挑战更高的目标\n\n * 优秀的人仍在不断努力\n   \n   * 且看大神 阮一峰github 提交记录",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"处理问题的思路",frontmatter:{title:"处理问题的思路",date:"2020-01-03T14:36:02.000Z",permalink:"/pages/9ba2b8fb13de1957",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/05.%E5%A4%84%E7%90%86%E9%97%AE%E9%A2%98%E7%9A%84%E6%80%9D%E8%B7%AF.html",relativePath:"04.更多/01.学习/05.处理问题的思路.md",key:"v-068a4279",path:"/pages/9ba2b8fb13de1957/",headers:[{level:2,title:"工作中遇到问题？",slug:"工作中遇到问题",normalizedTitle:"工作中遇到问题？",charIndex:14},{level:2,title:"这个问题我该怎么解决呢？",slug:"这个问题我该怎么解决呢",normalizedTitle:"这个问题我该怎么解决呢？",charIndex:86}],headersStr:"工作中遇到问题？ 这个问题我该怎么解决呢？",content:"# 处理问题的思路\n\n\n# 工作中遇到问题？\n\n遇到问题卡住了，可以先休息一会儿，调整一下状态，喝杯水走走放松放松，然后想想有没有遗漏的地方，或者其他的解决方案呢\n\n\n# 这个问题我该怎么解决呢？\n\n 1. 学会搜索\n    \n    * 关键词\n    \n    * 多关键词\n    \n    * 加入时间\n    \n    * 加入特定的社区\n    \n    * site用法\n\n 2. 高阶搜索方法\n    \n    * 英文搜索（必应搜索、google搜索，很多英文文档或文章相对来说层数结构很清晰）\n    * 视频站搜索（http://www.youtube.com/、http://egghead.io）\n    * 百度盘搜索\n    * 指定文件后缀\n\n 3. 寻求帮助\n    \n    * 找同学\n    \n    * 找同事\n    \n    * 找朋友\n    \n    * 找社区\n\n 4. 开拓思路——发散性解决问题\n    \n    * 去问问原作者？\n    * 去发个邮件/twitter/facebook?\n    * 去找Boss要资源？\n    * 加入公共社区参与讨论?\n    * ...",normalizedContent:"# 处理问题的思路\n\n\n# 工作中遇到问题？\n\n遇到问题卡住了，可以先休息一会儿，调整一下状态，喝杯水走走放松放松，然后想想有没有遗漏的地方，或者其他的解决方案呢\n\n\n# 这个问题我该怎么解决呢？\n\n 1. 学会搜索\n    \n    * 关键词\n    \n    * 多关键词\n    \n    * 加入时间\n    \n    * 加入特定的社区\n    \n    * site用法\n\n 2. 高阶搜索方法\n    \n    * 英文搜索（必应搜索、google搜索，很多英文文档或文章相对来说层数结构很清晰）\n    * 视频站搜索（http://www.youtube.com/、http://egghead.io）\n    * 百度盘搜索\n    * 指定文件后缀\n\n 3. 寻求帮助\n    \n    * 找同学\n    \n    * 找同事\n    \n    * 找朋友\n    \n    * 找社区\n\n 4. 开拓思路——发散性解决问题\n    \n    * 去问问原作者？\n    * 去发个邮件/twitter/facebook?\n    * 去找boss要资源？\n    * 加入公共社区参与讨论?\n    * ...",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"搜索引擎使用技巧",frontmatter:{title:"搜索引擎使用技巧",date:"2020-05-24T11:44:19.000Z",permalink:"/pages/ce818a",categories:["更多","学习"],tags:["搜索技巧"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/01.%E5%AD%A6%E4%B9%A0/10.%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",relativePath:"04.更多/01.学习/10.搜索引擎使用技巧.md",key:"v-f9b062a0",path:"/pages/ce818a/",headers:[{level:3,title:"技巧1：排除干扰项",slug:"技巧1-排除干扰项",normalizedTitle:"技巧1：排除干扰项",charIndex:117},{level:3,title:"技巧2：精确搜索",slug:"技巧2-精确搜索",normalizedTitle:"技巧2：精确搜索",charIndex:263},{level:3,title:"技巧3：指定网站内搜索",slug:"技巧3-指定网站内搜索",normalizedTitle:"技巧3：指定网站内搜索",charIndex:354},{level:3,title:"技巧4：指定文件格式",slug:"技巧4-指定文件格式",normalizedTitle:"技巧4：指定文件格式",charIndex:458},{level:3,title:"技巧5：指定在标题搜索",slug:"技巧5-指定在标题搜索",normalizedTitle:"技巧5：指定在标题搜索",charIndex:544},{level:3,title:"技巧6：指定在内容中搜索",slug:"技巧6-指定在内容中搜索",normalizedTitle:"技巧6：指定在内容中搜索",charIndex:595},{level:3,title:"技巧7：多种搜索技巧叠加使用",slug:"技巧7-多种搜索技巧叠加使用",normalizedTitle:"技巧7：多种搜索技巧叠加使用",charIndex:658},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:739}],headersStr:"技巧1：排除干扰项 技巧2：精确搜索 技巧3：指定网站内搜索 技巧4：指定文件格式 技巧5：指定在标题搜索 技巧6：指定在内容中搜索 技巧7：多种搜索技巧叠加使用 注意事项",content:'搜索引擎相信大家经常在使用，但是有时候想搜某个信息时却搜出来一大堆不相关的（百度：你们都在看我干什么？）。下面我们来介绍几种搜索技巧，可以提升搜索效率，助你快速查资料，妈妈再也不担心我的学习了（\'妈~我真的是在找学习资料\'）\n\n\n# 技巧1：排除干扰项\n\n方式：关键词1+空格+减号+关键词2，即 关键词1 -关键词2\n\n功能：排除一些不想要的关键词\n\n示例：\n\n锤子 -锤子手机\n\n\n1\n\n\n示例中将在搜索结果排除与锤子手机相关的，只显示锤子本来的样子。\n\n> 经过百度搜索的测试，有的关键词能排除掉，有的并不好使\n\n\n# 技巧2：精确搜索\n\n方式：给关键词加双引号，"关键词"\n\n功能：只搜索引号里的字，少一个字或者把字拆开都不行\n\n示例：\n\n"达拉不崩吧"\n\n\n1\n\n\n> 注意是英文的双引号\n\n\n# 技巧3：指定网站内搜索\n\n方式：site:域名 关键词\n\n功能：只搜索指定域名的内容\n\n示例：\n\nsite:zhihu.com 前端\n\n\n1\n\n\n有一些站内自带的搜索并不好用，可以尝试这个搜索技巧。\n\n\n# 技巧4：指定文件格式\n\n方式：filetype:文件格式 关键词\n\n示例：\n\nfiletype:avi 你懂的\n\n\n1\n\n\n常见文件格式有doc、pdf、ppt等\n\n\n# 技巧5：指定在标题搜索\n\n方式：intitle:关键词\n\n功能：搜索的关键词要出现在标题当中\n\n\n# 技巧6：指定在内容中搜索\n\n方式：intext:关键词、allintext:关键词1 关键词2、inurl:关键词2\n\n\n# 技巧7：多种搜索技巧叠加使用\n\n示例：\n\nsite:zhihu.com 前端 intitle:js\n\n\n1\n\n\n多种技巧和关键词叠加使用，中间空格隔开。\n\n\n# 注意事项\n\n以上搜索技巧使用的符号均是英文符号。',normalizedContent:'搜索引擎相信大家经常在使用，但是有时候想搜某个信息时却搜出来一大堆不相关的（百度：你们都在看我干什么？）。下面我们来介绍几种搜索技巧，可以提升搜索效率，助你快速查资料，妈妈再也不担心我的学习了（\'妈~我真的是在找学习资料\'）\n\n\n# 技巧1：排除干扰项\n\n方式：关键词1+空格+减号+关键词2，即 关键词1 -关键词2\n\n功能：排除一些不想要的关键词\n\n示例：\n\n锤子 -锤子手机\n\n\n1\n\n\n示例中将在搜索结果排除与锤子手机相关的，只显示锤子本来的样子。\n\n> 经过百度搜索的测试，有的关键词能排除掉，有的并不好使\n\n\n# 技巧2：精确搜索\n\n方式：给关键词加双引号，"关键词"\n\n功能：只搜索引号里的字，少一个字或者把字拆开都不行\n\n示例：\n\n"达拉不崩吧"\n\n\n1\n\n\n> 注意是英文的双引号\n\n\n# 技巧3：指定网站内搜索\n\n方式：site:域名 关键词\n\n功能：只搜索指定域名的内容\n\n示例：\n\nsite:zhihu.com 前端\n\n\n1\n\n\n有一些站内自带的搜索并不好用，可以尝试这个搜索技巧。\n\n\n# 技巧4：指定文件格式\n\n方式：filetype:文件格式 关键词\n\n示例：\n\nfiletype:avi 你懂的\n\n\n1\n\n\n常见文件格式有doc、pdf、ppt等\n\n\n# 技巧5：指定在标题搜索\n\n方式：intitle:关键词\n\n功能：搜索的关键词要出现在标题当中\n\n\n# 技巧6：指定在内容中搜索\n\n方式：intext:关键词、allintext:关键词1 关键词2、inurl:关键词2\n\n\n# 技巧7：多种搜索技巧叠加使用\n\n示例：\n\nsite:zhihu.com 前端 intitle:js\n\n\n1\n\n\n多种技巧和关键词叠加使用，中间空格隔开。\n\n\n# 注意事项\n\n以上搜索技巧使用的符号均是英文符号。',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"面试问题集锦",frontmatter:{title:"面试问题集锦",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/aea6571b7a8bae86",categories:["更多","面试"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/03.%E9%9D%A2%E8%AF%95/01.%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6.html",relativePath:"04.更多/03.面试/01.面试问题集锦.md",key:"v-3c49c683",path:"/pages/aea6571b7a8bae86/",headers:[{level:2,title:"请做一下自我介绍",slug:"请做一下自我介绍",normalizedTitle:"请做一下自我介绍",charIndex:13},{level:2,title:"你最大的优点是什么？",slug:"你最大的优点是什么",normalizedTitle:"你最大的优点是什么？",charIndex:166},{level:2,title:"说说你最大的缺点？",slug:"说说你最大的缺点",normalizedTitle:"说说你最大的缺点？",charIndex:252},{level:2,title:"说说你对加班的看法？",slug:"说说你对加班的看法",normalizedTitle:"说说你对加班的看法？",charIndex:378},{level:2,title:"说说你对薪资的要求？",slug:"说说你对薪资的要求",normalizedTitle:"说说你对薪资的要求？",charIndex:513},{level:2,title:"在五年内，你的职业规划？",slug:"在五年内-你的职业规划",normalizedTitle:"在五年内，你的职业规划？",charIndex:903},{level:2,title:"你朋友对你的评价?",slug:"你朋友对你的评价",normalizedTitle:"你朋友对你的评价?",charIndex:1081},{level:2,title:"你还有什么问题要问吗?",slug:"你还有什么问题要问吗",normalizedTitle:"你还有什么问题要问吗?",charIndex:1241},{level:2,title:"录用后发现不适合这个职位，怎么办?",slug:"录用后发现不适合这个职位-怎么办",normalizedTitle:"录用后发现不适合这个职位，怎么办?",charIndex:1424},{level:2,title:"工作时跟领导意见不同怎么办?",slug:"工作时跟领导意见不同怎么办",normalizedTitle:"工作时跟领导意见不同怎么办?",charIndex:1601},{level:2,title:"工作出现失误并造成损失，你会怎么做?",slug:"工作出现失误并造成损失-你会怎么做",normalizedTitle:"工作出现失误并造成损失，你会怎么做?",charIndex:1779},{level:2,title:"谈谈你对跳槽的看法?",slug:"谈谈你对跳槽的看法",normalizedTitle:"谈谈你对跳槽的看法?",charIndex:2028},{level:2,title:"和同事、上司难以相处，你怎么办?",slug:"和同事、上司难以相处-你怎么办",normalizedTitle:"和同事、上司难以相处，你怎么办?",charIndex:2098},{level:2,title:"上级领导抢了你的功劳怎么办?",slug:"上级领导抢了你的功劳怎么办",normalizedTitle:"上级领导抢了你的功劳怎么办?",charIndex:2311},{level:2,title:"同事孤立你，你怎么办?",slug:"同事孤立你-你怎么办",normalizedTitle:"同事孤立你，你怎么办?",charIndex:2485},{level:2,title:"你最近是否参加了培训课程?",slug:"你最近是否参加了培训课程",normalizedTitle:"你最近是否参加了培训课程?",charIndex:2582},{level:2,title:"你对于我们公司了解多少?",slug:"你对于我们公司了解多少",normalizedTitle:"你对于我们公司了解多少?",charIndex:2636},{level:2,title:"你最擅长的技术方向是什么?",slug:"你最擅长的技术方向是什么",normalizedTitle:"你最擅长的技术方向是什么?",charIndex:2727},{level:2,title:"请说出你选择这份工作的动机?",slug:"请说出你选择这份工作的动机",normalizedTitle:"请说出你选择这份工作的动机?",charIndex:2784},{level:2,title:"你能为我们公司带来什么呢?",slug:"你能为我们公司带来什么呢",normalizedTitle:"你能为我们公司带来什么呢?",charIndex:2912},{level:2,title:"最能概括你自己的三个词?",slug:"最能概括你自己的三个词",normalizedTitle:"最能概括你自己的三个词?",charIndex:3159},{level:2,title:"作为被面试者给我打一下分?",slug:"作为被面试者给我打一下分",normalizedTitle:"作为被面试者给我打一下分?",charIndex:3225},{level:2,title:"你怎么理解你应聘的职位?",slug:"你怎么理解你应聘的职位",normalizedTitle:"你怎么理解你应聘的职位?",charIndex:3302},{level:2,title:"喜欢这份工作的哪一点?",slug:"喜欢这份工作的哪一点",normalizedTitle:"喜欢这份工作的哪一点?",charIndex:3346},{level:2,title:"为什么要离职?",slug:"为什么要离职",normalizedTitle:"为什么要离职?",charIndex:3497},{level:2,title:"说说你对行业、技术发展趋势的看法?",slug:"说说你对行业、技术发展趋势的看法",normalizedTitle:"说说你对行业、技术发展趋势的看法?",charIndex:3739},{level:2,title:"对工作的期望与目标何在?",slug:"对工作的期望与目标何在",normalizedTitle:"对工作的期望与目标何在?",charIndex:3923},{level:2,title:"谈谈你的家庭?",slug:"谈谈你的家庭",normalizedTitle:"谈谈你的家庭?",charIndex:4183},{level:2,title:"你认为自己申请这个职位还欠缺什么?",slug:"你认为自己申请这个职位还欠缺什么",normalizedTitle:"你认为自己申请这个职位还欠缺什么?",charIndex:4413},{level:2,title:"你欣赏哪种性格的人?",slug:"你欣赏哪种性格的人",normalizedTitle:"你欣赏哪种性格的人?",charIndex:4580},{level:2,title:"你通常如何处理别人的批评?",slug:"你通常如何处理别人的批评",normalizedTitle:"你通常如何处理别人的批评?",charIndex:4633},{level:2,title:"怎样对待自己的失败?",slug:"怎样对待自己的失败",normalizedTitle:"怎样对待自己的失败?",charIndex:4705},{level:2,title:"什么会让你有成就感?",slug:"什么会让你有成就感",normalizedTitle:"什么会让你有成就感?",charIndex:4761},{level:2,title:"眼下你生活中最重要的是什么?",slug:"眼下你生活中最重要的是什么",normalizedTitle:"眼下你生活中最重要的是什么?",charIndex:4805},{level:2,title:"你为什么愿意到我们公司来工作?",slug:"你为什么愿意到我们公司来工作",normalizedTitle:"你为什么愿意到我们公司来工作?",charIndex:4867},{level:2,title:"你和别人发生过争执吗?",slug:"你和别人发生过争执吗",normalizedTitle:"你和别人发生过争执吗?",charIndex:5043},{level:2,title:"你做过的哪件事最令自己感到骄傲?",slug:"你做过的哪件事最令自己感到骄傲",normalizedTitle:"你做过的哪件事最令自己感到骄傲?",charIndex:5234},{level:2,title:"对这项工作，你有哪些可预见的困难?",slug:"对这项工作-你有哪些可预见的困难",normalizedTitle:"对这项工作，你有哪些可预见的困难?",charIndex:5366},{level:2,title:"录用后你将怎样开展工作?",slug:"录用后你将怎样开展工作",normalizedTitle:"录用后你将怎样开展工作?",charIndex:5512},{level:2,title:"你希望与什么样的上级共事?",slug:"你希望与什么样的上级共事",normalizedTitle:"你希望与什么样的上级共事?",charIndex:5657},{level:2,title:"你工作经验欠缺，如何能胜任这项工作?",slug:"你工作经验欠缺-如何能胜任这项工作",normalizedTitle:"你工作经验欠缺，如何能胜任这项工作?",charIndex:5813},{level:2,title:"你会怎样获得同事的帮助?",slug:"你会怎样获得同事的帮助",normalizedTitle:"你会怎样获得同事的帮助?",charIndex:6093},{level:2,title:"如果你没被录用，你怎么打算?",slug:"如果你没被录用-你怎么打算",normalizedTitle:"如果你没被录用，你怎么打算?",charIndex:6229},{level:2,title:"最令你沮丧的事情?",slug:"最令你沮丧的事情",normalizedTitle:"最令你沮丧的事情?",charIndex:6671},{level:2,title:"想过创业吗?",slug:"想过创业吗",normalizedTitle:"想过创业吗?",charIndex:6868},{level:2,title:"为什么我们要在众多的面试者中选择你?",slug:"为什么我们要在众多的面试者中选择你",normalizedTitle:"为什么我们要在众多的面试者中选择你?",charIndex:6941},{level:2,title:"除了本公司外，还应聘了哪些公司?",slug:"除了本公司外-还应聘了哪些公司",normalizedTitle:"除了本公司外，还应聘了哪些公司?",charIndex:7126},{level:2,title:"你并非毕业于名牌院校?",slug:"你并非毕业于名牌院校",normalizedTitle:"你并非毕业于名牌院校?",charIndex:7255},{level:2,title:"怎样看待学历和能力?",slug:"怎样看待学历和能力",normalizedTitle:"怎样看待学历和能力?",charIndex:7379},{level:2,title:"谈谈如何适应办公室工作的新环境?",slug:"谈谈如何适应办公室工作的新环境",normalizedTitle:"谈谈如何适应办公室工作的新环境?",charIndex:7605},{level:2,title:"谈谈对这个职务的期许?",slug:"谈谈对这个职务的期许",normalizedTitle:"谈谈对这个职务的期许?",charIndex:7742},{level:2,title:"何时可以到职?",slug:"何时可以到职",normalizedTitle:"何时可以到职?",charIndex:7882}],headersStr:"请做一下自我介绍 你最大的优点是什么？ 说说你最大的缺点？ 说说你对加班的看法？ 说说你对薪资的要求？ 在五年内，你的职业规划？ 你朋友对你的评价? 你还有什么问题要问吗? 录用后发现不适合这个职位，怎么办? 工作时跟领导意见不同怎么办? 工作出现失误并造成损失，你会怎么做? 谈谈你对跳槽的看法? 和同事、上司难以相处，你怎么办? 上级领导抢了你的功劳怎么办? 同事孤立你，你怎么办? 你最近是否参加了培训课程? 你对于我们公司了解多少? 你最擅长的技术方向是什么? 请说出你选择这份工作的动机? 你能为我们公司带来什么呢? 最能概括你自己的三个词? 作为被面试者给我打一下分? 你怎么理解你应聘的职位? 喜欢这份工作的哪一点? 为什么要离职? 说说你对行业、技术发展趋势的看法? 对工作的期望与目标何在? 谈谈你的家庭? 你认为自己申请这个职位还欠缺什么? 你欣赏哪种性格的人? 你通常如何处理别人的批评? 怎样对待自己的失败? 什么会让你有成就感? 眼下你生活中最重要的是什么? 你为什么愿意到我们公司来工作? 你和别人发生过争执吗? 你做过的哪件事最令自己感到骄傲? 对这项工作，你有哪些可预见的困难? 录用后你将怎样开展工作? 你希望与什么样的上级共事? 你工作经验欠缺，如何能胜任这项工作? 你会怎样获得同事的帮助? 如果你没被录用，你怎么打算? 最令你沮丧的事情? 想过创业吗? 为什么我们要在众多的面试者中选择你? 除了本公司外，还应聘了哪些公司? 你并非毕业于名牌院校? 怎样看待学历和能力? 谈谈如何适应办公室工作的新环境? 谈谈对这个职务的期许? 何时可以到职?",content:"# 面试问题集锦\n\n\n# 请做一下自我介绍\n\n回答提示： 一般人回答这个问题过于平常，只说姓名、年龄、工作经验，这些在简历上都有。其实，企业最希望知道的是求职者能否胜任工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，要突出积极的个性和做事的能力，说的合情合理企业才会相信。\n\n\n# 你最大的优点是什么？\n\n回答提示： 沉着冷静、条理清楚、立场坚定、乐于助人等，加上例子如：我在XX经过一到两年的培训及项目实战，加上实习工作，我想我适合这份工作。\n\n\n# 说说你最大的缺点？\n\n回答提示： 这个问题企业问的概率很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、非常懒、工作效率低，企业肯定不会录用你。要从自己的优点说起，中间加一些小缺点，最后再把问答转回到优点上，突出优点的部分。\n\n\n# 说说你对加班的看法？\n\n回答提示： 实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。\n\n回答样本： 如果是工作需要我会义不容辞加班，我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班。\n\n\n# 说说你对薪资的要求？\n\n回答提示： 如果你对薪资的要求太低，那显然贬低自己的能力；如果你对薪资的要求太高，那又会显得你分量过重，公司受用不起。一些雇主通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱，他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。\n\n回答样本：\n\n①我对工资没有硬性要求，我相信贵公司会友善合理。我注重的是找到工作机会，所以只要条件公平，我则不会计较太多。\n\n②我受过系统的软件编程的训练，不需要进行大量的培训，而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水。\n\n③如果你必须自己说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场做了调查，知道像自己这样学历的雇员有什么样的价值。\n\n\n# 在五年内，你的职业规划？\n\n回答提示： 这是每一个应聘者都不希望被问到的问题，但是几乎每个人都会被问到，比较多的答案是“管理者”。当然，说出其他一些你感兴趣的职位也是可以的。要知道，考官总是喜欢有进取心的应聘者，此时如果说“不知道”，或许就会使你丧失一个好机会。最普通的回答应该是“我准备在技术领域有所作为”或“我希望能按照公司的管理思路发展”。\n\n\n# 你朋友对你的评价?\n\n回答提示： 想从侧面了解一下你的性格及与人相处的问题。\n\n回答样本：\n\n①我朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。\n\n②我觉的我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。\n\n\n# 你还有什么问题要问吗?\n\n回答提示： 企业的这个问题看上去可有可无，其实很关键，企业不喜欢说“没问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。\n\n\n# 录用后发现不适合这个职位，怎么办?\n\n回答提示： 工作一段时间发现工作不适合，有两种情况：①如果你确实热爱这个职业，那就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；②你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。\n\n\n# 工作时跟领导意见不同怎么办?\n\n回答样本： ①原则上我会尊重和服从领导的工作安排，同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法。②如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作。③还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见，如领导仍固执己见，我会毫不犹豫地再向上级领导反映。\n\n\n# 工作出现失误并造成损失，你会怎么做?\n\n回答样本： ①我本意是为公司努力工作，如果造成经济损失，我认为首要的问题是想方设法去弥补或挽回经济损失。如果我无能力负责，希望单位帮助解决。\n\n②分清责任，各负其责，如果是我的责任，我甘愿受罚；如果是一个我负责的团队中别人的失误，也不能幸灾乐祸，作为一个团队，需要互相提携共同成工作，安慰同事并且帮助同事查找原因总结经验。\n\n③个人的一生不可能不犯错误，重要的是能从自己的或者是别人的错误中吸取经验教训，要检讨自己的工作方法、分析问题的深度和力度。\n\n\n# 谈谈你对跳槽的看法?\n\n回答样本： ①正常的“跳槽”能够促进人才合理流动，应该支持。②频繁的跳槽对单位和个人双方都不利，应该反对。\n\n\n# 和同事、上司难以相处，你怎么办?\n\n回答样本： ①我会服从领导的指挥，配合同事的工作。②我会从自身找原因，仔细分析是不是自己工作做得不好。还要看看是不是为人处世方面做得不好，如果是这样的话我会努力改正。③如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足，及时改正。④作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我的努力。\n\n\n# 上级领导抢了你的功劳怎么办?\n\n回答样本： 首先我不会找那位上级领导说明这事，我会主动找我的主管领导来沟通，因为沟通是解决人际关系的最好办法，但结果会有两种：①我的主管领导认识到自己的错误，我想我会视具体情况决定是否原谅他。②他更加变本加厉的来威胁我，那我会毫不犹豫地找我的上级领导反映此事，因为他这样做会造成负面影响，对今后的工作不利。\n\n\n# 同事孤立你，你怎么办?\n\n回答样本： ①检讨一下自己是不是对工作的热心度超过同事间交往的热心了，加强同事间的交往及共同的兴趣爱好。②工作中，切勿伤害别人的自尊心。③不在领导前拨弄是非。\n\n\n# 你最近是否参加了培训课程?\n\n回答提示： 自费参加，就是XX的培训课程（可以多谈谈自己学的技术）。\n\n\n# 你对于我们公司了解多少?\n\n回答提示： 在去公司面试前上网查一下该公司主营业务。可类似回答：贵公司有意改变策略，加强与国外大厂的OEM合作，自有品牌的部分则透过海外经销商。\n\n\n# 你最擅长的技术方向是什么?\n\n回答提示： 说和你要应聘的职位相关的技术，表现一下自己的热诚没有什么坏处。\n\n\n# 请说出你选择这份工作的动机?\n\n回答提示： 这是想知道面试者对这份工作的热忱及理解度，并筛选因一时兴起而来应试的人，如果是无经验者，可以强调“就算职种不同，也希望有机会发挥之前的经验”。\n\n回答样本： 因为我很热爱这个工作，很想从事这方面的工作。\n\n\n# 你能为我们公司带来什么呢?\n\n回答提示： ①假如你可以的话，试着告诉他们你可以减低他们的费用“我已经接受过XX近两年专业的培训，立刻就可以上岗工作”。②企业很想知道未来的员工能为企业做什么，求职者应再次重复自己的优势，然后表示：“就我的能力，我可以做一个优秀的员工在组织中发挥能力，给组织带来高效率和更多的收益”。企业喜欢求职者就申请的职位表明自己的能力，比如申请营销之类的职位，可以说：“我可以开发大量的新客户，同时，对老客户做更全面周到的服务，开发老客户的新需求和消费。” 等等。\n\n\n# 最能概括你自己的三个词?\n\n回答样本： 我经常用的三个词是：适应能力强，有责任心和做事有始终，并结合具体例子向主考官解释。\n\n\n# 作为被面试者给我打一下分?\n\n回答提示： 试着列出四个优点和一个非常非常非常小的缺点（可以抱怨一下设施，没有明确责任人的缺点是不会有人介意的）。\n\n\n# 你怎么理解你应聘的职位?\n\n回答提示： 可以把岗位职责和任务及工作态度阐述下。\n\n\n# 喜欢这份工作的哪一点?\n\n回答提示： 在回答面试官这个问题时不能太直接就把自己心理的话说出来，尤其是薪资方面的问题，不过一些无伤大雅的回答是不错的考虑，如交通方便，工作性质及内容颇能符合自己的兴趣等等都是不错的答案，不过如果这时自己能仔细思考出这份工作的与众不同之处，相信在面试上会大大加分。\n\n\n# 为什么要离职?\n\n回答提示： ①回答这个问题时一定要小心，就算在前一个工作受到再大的委屈，对公司有多少的怨言都千万不要表现出来，尤其要避免对公司本身主管的批评，避免面试官的负面情绪及印象。建议此时最好的回答方式是将问题归咎在自己身上，例如觉得工作没有学习发展的空间，自己想在面试工作的相关产业中多加学习，或是前一份工作与自己的生涯规划不合等等，回答的答案最好是积极正面的。②我希望能获得一份更好的工作，如果机会来临，我会抓住。我觉得目前的工作，已经达到顶峰，即没有升迁机会。\n\n\n# 说说你对行业、技术发展趋势的看法?\n\n回答提示： 企业对这个问题很感兴趣，只有有备而来的求职者能够过关。求职者可以直接在网上查找对你所申请的行业部门的信息，只有深入了解才能产生独特的见解。企业认为最聪明的求职者是对所面试的公司预先了解很多，包括公司各个部门，发展情况，在面试回答问题的时候可以提到所了解的情况，企业欢迎进入企业的人是“知己”，而不是“盲人”。\n\n\n# 对工作的期望与目标何在?\n\n回答提示： 这是面试者用来评断求职者是否对自己有一定程度的期望、对这份工作是否了解的问题。 对于工作有确实学习目标的人通常学习较快，对于新工作自然较容易进入状况，这时建议你，最好针对工作的性质找出一个确实的答案，如业务员的工作可以这样回答：“我的目标是能成为一个超级业务员，将公司的产品广泛的推销出去，达到最好的业绩成效；为达到这个目标，我一定会努力学习，而我相信以我认真负责的态度，一定可以达到这个目标。” 其他类的工作也可以比照这个方式回答，只要在目标方面稍微修改一下就可以了。\n\n\n# 谈谈你的家庭?\n\n回答提示： 企业面试时询问家庭问题不是非要知道求职者家庭的情况，而是要了解家庭背景对求职者的塑造和影响。企业希望听到的重点也在于家庭对求职者的积极影响。\n\n回答样本： 我很爱我的家庭，我们家一向很和睦，虽然我的父亲和母亲都是普通人，但是从小，我就看到我父亲起早贪黑，每天工作特别勤劳，他的行动无形中培养了我认真负责的态度和勤劳的精神。我母亲为人善良，对人热情，特别乐于助人，所以在单位人缘很好，她的一言一行也一直在教导我做人的道理。\n\n\n# 你认为自己申请这个职位还欠缺什么?\n\n回答提示： 企业喜欢问求职者弱点，但精明的求职者一般不直接回答。\n\n回答样本： 继续重复自己的优势，然后说：“对于这个职位和我的能力来说，我相信自己是可以胜任的，只是缺乏经验，这个问题可以进入公司以后以最短的时间来解决，我的学习能力很强，我相信可以很快融入公司的企业文化，进入工作状态。\n\n\n# 你欣赏哪种性格的人?\n\n回答提示： 诚实、不死板而且容易相处的人、有实际行动的人，加上具体例子。\n\n\n# 你通常如何处理别人的批评?\n\n回答提示： ①沈默是金，不必说什么，否则情况更糟，不过我会接受建设性的批评。②我会等大家冷静下来再讨论。\n\n\n# 怎样对待自己的失败?\n\n回答提示： 大意：我们生来都不是十全十美的，我相信我有第二个机会改正我的错误。\n\n\n# 什么会让你有成就感?\n\n回答提示： 为贵公司竭力效劳，尽我所能，完成一个项目。\n\n\n# 眼下你生活中最重要的是什么?\n\n回答提示： 对我来说，能在这个领域找到工作是最重要的，能在贵公司任职对我说最重要。\n\n\n# 你为什么愿意到我们公司来工作?\n\n回答提示： 对于这个问题，你要格外小心，如果你已经对该单位作了研究，你可以回答一些详细的原因。\n\n回答样本： ①公司本身高技术开发环境很吸引我我同公司出生在同样的时代，我希望能够进入一家与我共同成长的公司。②你们公司一直都稳定发展，在近几年来在市场上有竞争力。我认为贵公司能够给我提供一个与众不同的发展道路。\n\n\n# 你和别人发生过争执吗?\n\n回答提示： 这是面试中最险恶的问题，其实是考官布下的一个陷阱，成功解决矛盾是一个协作团体中成员所必备的能力。假如你工作在一个服务行业，这个问题简直成了最重要的个环节。你是否能获得这份工作，将取决于这个问题的回答。考官希望看到你是成熟且乐于奉献的。他们通过这个问题了解你的成熟度和处世能力。在没有外界干涉的情况下，通过妥协的方式来解决才是正确答案。\n\n\n# 你做过的哪件事最令自己感到骄傲?\n\n回答提示： 这是考官给你的一个机会，让你展示自己把握命运的能力。这会体现你潜在的领导能力以及你被提升的可能性。假如你应聘于一个服务性质的单位，你很可能会被邀请去餐。记住：你的前途取决于你的知识、你的社交能力和综合表现。\n\n\n# 对这项工作，你有哪些可预见的困难?\n\n回答提示： ①不宜直接说出具体的困难，否则可能令对方怀疑应聘者不行。②可以尝试迂回战术，说出应聘者对困难所持有的态度工作中出现一些困难是正常的，也是难免的，但是只要有坚忍不拔的毅力、良好的合作精神以及事前周密而充分的准备，任何困难都是可以克服。\n\n\n# 录用后你将怎样开展工作?\n\n回答提示： ①如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法。②可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”。\n\n\n# 你希望与什么样的上级共事?\n\n回答提示： ①通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。②最好回避对上级具体的希望，多谈对自己的要求。如“做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。\n\n\n# 你工作经验欠缺，如何能胜任这项工作?\n\n回答提示： ①如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘公司并不真正在乎经验，关键看应聘者怎样回答。②对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业。\n\n回答样本： 作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。\n\n\n# 你会怎样获得同事的帮助?\n\n回答提示： 每个公司都在不断变化发展的过程中，你当然希望你的员工也是这样。你希望得到那些希望并欢迎变化的人，因为这些明白，为了公司的发展，变化是公司日常生活中重要组成部分。这样的员工往往很容易适应公司的变化，并会对变化做出积极的响应。\n\n\n# 如果你没被录用，你怎么打算?\n\n回答样本： 现在的社会是一个竞争的社会，从这次面试中也可看出这一点，有竞争就必然有优劣，有成功必定就会有失败。往往成功的背后有许多的困难和挫折，如果这次失败了也仅仅是一次而已，只有经过经验经历的积累才能塑造出一个完全的成功者。我会从以下几个方面来正确看待这次失败：①要敢于面对，面对这次失败不气馁，接受已经失去了这次机会就不会回头这个现实，从心理意志和现出对这次失败的抵抗力。要有自信，相信自己经历了这次之后经过努力一定能行，能够超越自我。②善于反思，对于这次面试经验要认真总结，思考剖析，能够从自身的角度找差距正确对自己，实事求是地评价自己，辩证的看待自己的长短得失，做一个明白人。③走出阴影，克服这一次失败带给自己的心理压力，时刻牢记自己弱点，防患于未然，加强学习，提高自身素质。④认真工作，回到原单位岗位上后，要实实在在、踏踏实实地工作，三十六行行行出状元，争取在本岗位上做出一定的成绩。⑤再接再厉，以后如果有机会我仍然后再次参加竞争。\n\n\n# 最令你沮丧的事情?\n\n回答样本： 曾经接触过一个客户，原本就有耳闻他以挑剔出名，所以事前的准备功夫做得十分充分，也投入了相当多的时间与精力，最后客户虽然并没有照单全收，但是接受的程度已经出乎我们意料之外了。原以为从此可以合作愉快，却得知客户最后因为预算关系选择了另一家代理商，之前的努力因而付诸流水。尽管如此，我还是从这次的经验学到很多，如对该产业的了解，整个team的默契也更好了。\n\n\n# 想过创业吗?\n\n回答提示： 这个问题可以显示你的冲劲，但如果你的回答是“有”的话，千万小心，下一个问题可能就是：那么为什么你不这样做呢?\n\n\n# 为什么我们要在众多的面试者中选择你?\n\n回答提示： 别过度吹嘘自己的能力，或信口开河地乱开支票，例如一定会为该公司带来多少钱的业务等，这样很容易给人一种爱说大话、不切实际的感觉。\n\n回答样本： 根据我对贵公司的了解，以及我在这份工作上所累积的专业、经验及人脉，相信正是贵公司所找寻的人才。而我在工作态度、EQ上，也有圆融、成熟的一面，和主管、同事都能合作愉快。\n\n\n# 除了本公司外，还应聘了哪些公司?\n\n回答提示： 这是相当多公司会问的问题，其用意是要概略知道应征者的求职志向，所以这并非绝对是负面答案，就算不便说出公司名称，也应回答“销售同种产品的公司”，如果应聘的其他公司是不同业界，容易让人产生无法信任的感觉。\n\n\n# 你并非毕业于名牌院校?\n\n回答样本： 是否毕业于名牌院校不重要，重要的是有能力完成您交给我的工作，我接受了XX的职业培训，掌握的技能完全可以胜任贵公司现在工作，而且我比一些名牌院校的应届毕业生的动手能力还要强，我想我更适合贵公司这个职位。\n\n\n# 怎样看待学历和能力?\n\n回答样本： 学历我想只要是大学专科的学历，就表明觉得我具备了根本的学习能力。剩下的，你是学士也好，还是博士也好，对于这一点的讨论，不是看你学了多少知识，而是看你在这个领域上发挥了什么，也就是所说的能力问题。一个人工作能力的高低直接决定其职场命运，而学历的高低只是进入一个企业的敲门砖，如果公司把学历卡在博士上我就无法进入贵公司，当然这不一定只是我个人的损失，如果一个专科生都能完成的工作，您又何必非要招聘一位博士生呢?\n\n\n# 谈谈如何适应办公室工作的新环境?\n\n回答样本： ①办公室里每个人都有各自的岗位与职责，不得擅离岗位。②根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。③多请示并及时汇报，遇到不明白的要虚心请教。④抓间隙时间，多学习，努力提高自己的政治素质和业务水平。\n\n\n# 谈谈对这个职务的期许?\n\n回答提示： 回答前不妨先询问公司对这项职务的责任认定及归属，因为每一家公司的状况不尽相同，以免说了一堆理想抱负却发现牛头不对马嘴。\n\n回答样本： 希望能借此发挥我的所学及专长，同时也吸收贵公司在这方面的经验，就公司、我个人而言，缔造双赢的局面。\n\n\n# 何时可以到职?\n\n回答提示： 大多数企业会关心就职时间，最好是回答：“如果被录用的话，到职日可以按公司规定上班”，但是如果还未辞去上一个工作、上班时间又太近，似乎有些强人所难，因为交接至少要一个月的时间，应进一步说明原因，录取公司应该会通融的。",normalizedContent:"# 面试问题集锦\n\n\n# 请做一下自我介绍\n\n回答提示： 一般人回答这个问题过于平常，只说姓名、年龄、工作经验，这些在简历上都有。其实，企业最希望知道的是求职者能否胜任工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，要突出积极的个性和做事的能力，说的合情合理企业才会相信。\n\n\n# 你最大的优点是什么？\n\n回答提示： 沉着冷静、条理清楚、立场坚定、乐于助人等，加上例子如：我在xx经过一到两年的培训及项目实战，加上实习工作，我想我适合这份工作。\n\n\n# 说说你最大的缺点？\n\n回答提示： 这个问题企业问的概率很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、非常懒、工作效率低，企业肯定不会录用你。要从自己的优点说起，中间加一些小缺点，最后再把问答转回到优点上，突出优点的部分。\n\n\n# 说说你对加班的看法？\n\n回答提示： 实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。\n\n回答样本： 如果是工作需要我会义不容辞加班，我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班。\n\n\n# 说说你对薪资的要求？\n\n回答提示： 如果你对薪资的要求太低，那显然贬低自己的能力；如果你对薪资的要求太高，那又会显得你分量过重，公司受用不起。一些雇主通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱，他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。\n\n回答样本：\n\n①我对工资没有硬性要求，我相信贵公司会友善合理。我注重的是找到工作机会，所以只要条件公平，我则不会计较太多。\n\n②我受过系统的软件编程的训练，不需要进行大量的培训，而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水。\n\n③如果你必须自己说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场做了调查，知道像自己这样学历的雇员有什么样的价值。\n\n\n# 在五年内，你的职业规划？\n\n回答提示： 这是每一个应聘者都不希望被问到的问题，但是几乎每个人都会被问到，比较多的答案是“管理者”。当然，说出其他一些你感兴趣的职位也是可以的。要知道，考官总是喜欢有进取心的应聘者，此时如果说“不知道”，或许就会使你丧失一个好机会。最普通的回答应该是“我准备在技术领域有所作为”或“我希望能按照公司的管理思路发展”。\n\n\n# 你朋友对你的评价?\n\n回答提示： 想从侧面了解一下你的性格及与人相处的问题。\n\n回答样本：\n\n①我朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。\n\n②我觉的我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。\n\n\n# 你还有什么问题要问吗?\n\n回答提示： 企业的这个问题看上去可有可无，其实很关键，企业不喜欢说“没问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。\n\n\n# 录用后发现不适合这个职位，怎么办?\n\n回答提示： 工作一段时间发现工作不适合，有两种情况：①如果你确实热爱这个职业，那就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；②你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。\n\n\n# 工作时跟领导意见不同怎么办?\n\n回答样本： ①原则上我会尊重和服从领导的工作安排，同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法。②如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作。③还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见，如领导仍固执己见，我会毫不犹豫地再向上级领导反映。\n\n\n# 工作出现失误并造成损失，你会怎么做?\n\n回答样本： ①我本意是为公司努力工作，如果造成经济损失，我认为首要的问题是想方设法去弥补或挽回经济损失。如果我无能力负责，希望单位帮助解决。\n\n②分清责任，各负其责，如果是我的责任，我甘愿受罚；如果是一个我负责的团队中别人的失误，也不能幸灾乐祸，作为一个团队，需要互相提携共同成工作，安慰同事并且帮助同事查找原因总结经验。\n\n③个人的一生不可能不犯错误，重要的是能从自己的或者是别人的错误中吸取经验教训，要检讨自己的工作方法、分析问题的深度和力度。\n\n\n# 谈谈你对跳槽的看法?\n\n回答样本： ①正常的“跳槽”能够促进人才合理流动，应该支持。②频繁的跳槽对单位和个人双方都不利，应该反对。\n\n\n# 和同事、上司难以相处，你怎么办?\n\n回答样本： ①我会服从领导的指挥，配合同事的工作。②我会从自身找原因，仔细分析是不是自己工作做得不好。还要看看是不是为人处世方面做得不好，如果是这样的话我会努力改正。③如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足，及时改正。④作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我的努力。\n\n\n# 上级领导抢了你的功劳怎么办?\n\n回答样本： 首先我不会找那位上级领导说明这事，我会主动找我的主管领导来沟通，因为沟通是解决人际关系的最好办法，但结果会有两种：①我的主管领导认识到自己的错误，我想我会视具体情况决定是否原谅他。②他更加变本加厉的来威胁我，那我会毫不犹豫地找我的上级领导反映此事，因为他这样做会造成负面影响，对今后的工作不利。\n\n\n# 同事孤立你，你怎么办?\n\n回答样本： ①检讨一下自己是不是对工作的热心度超过同事间交往的热心了，加强同事间的交往及共同的兴趣爱好。②工作中，切勿伤害别人的自尊心。③不在领导前拨弄是非。\n\n\n# 你最近是否参加了培训课程?\n\n回答提示： 自费参加，就是xx的培训课程（可以多谈谈自己学的技术）。\n\n\n# 你对于我们公司了解多少?\n\n回答提示： 在去公司面试前上网查一下该公司主营业务。可类似回答：贵公司有意改变策略，加强与国外大厂的oem合作，自有品牌的部分则透过海外经销商。\n\n\n# 你最擅长的技术方向是什么?\n\n回答提示： 说和你要应聘的职位相关的技术，表现一下自己的热诚没有什么坏处。\n\n\n# 请说出你选择这份工作的动机?\n\n回答提示： 这是想知道面试者对这份工作的热忱及理解度，并筛选因一时兴起而来应试的人，如果是无经验者，可以强调“就算职种不同，也希望有机会发挥之前的经验”。\n\n回答样本： 因为我很热爱这个工作，很想从事这方面的工作。\n\n\n# 你能为我们公司带来什么呢?\n\n回答提示： ①假如你可以的话，试着告诉他们你可以减低他们的费用“我已经接受过xx近两年专业的培训，立刻就可以上岗工作”。②企业很想知道未来的员工能为企业做什么，求职者应再次重复自己的优势，然后表示：“就我的能力，我可以做一个优秀的员工在组织中发挥能力，给组织带来高效率和更多的收益”。企业喜欢求职者就申请的职位表明自己的能力，比如申请营销之类的职位，可以说：“我可以开发大量的新客户，同时，对老客户做更全面周到的服务，开发老客户的新需求和消费。” 等等。\n\n\n# 最能概括你自己的三个词?\n\n回答样本： 我经常用的三个词是：适应能力强，有责任心和做事有始终，并结合具体例子向主考官解释。\n\n\n# 作为被面试者给我打一下分?\n\n回答提示： 试着列出四个优点和一个非常非常非常小的缺点（可以抱怨一下设施，没有明确责任人的缺点是不会有人介意的）。\n\n\n# 你怎么理解你应聘的职位?\n\n回答提示： 可以把岗位职责和任务及工作态度阐述下。\n\n\n# 喜欢这份工作的哪一点?\n\n回答提示： 在回答面试官这个问题时不能太直接就把自己心理的话说出来，尤其是薪资方面的问题，不过一些无伤大雅的回答是不错的考虑，如交通方便，工作性质及内容颇能符合自己的兴趣等等都是不错的答案，不过如果这时自己能仔细思考出这份工作的与众不同之处，相信在面试上会大大加分。\n\n\n# 为什么要离职?\n\n回答提示： ①回答这个问题时一定要小心，就算在前一个工作受到再大的委屈，对公司有多少的怨言都千万不要表现出来，尤其要避免对公司本身主管的批评，避免面试官的负面情绪及印象。建议此时最好的回答方式是将问题归咎在自己身上，例如觉得工作没有学习发展的空间，自己想在面试工作的相关产业中多加学习，或是前一份工作与自己的生涯规划不合等等，回答的答案最好是积极正面的。②我希望能获得一份更好的工作，如果机会来临，我会抓住。我觉得目前的工作，已经达到顶峰，即没有升迁机会。\n\n\n# 说说你对行业、技术发展趋势的看法?\n\n回答提示： 企业对这个问题很感兴趣，只有有备而来的求职者能够过关。求职者可以直接在网上查找对你所申请的行业部门的信息，只有深入了解才能产生独特的见解。企业认为最聪明的求职者是对所面试的公司预先了解很多，包括公司各个部门，发展情况，在面试回答问题的时候可以提到所了解的情况，企业欢迎进入企业的人是“知己”，而不是“盲人”。\n\n\n# 对工作的期望与目标何在?\n\n回答提示： 这是面试者用来评断求职者是否对自己有一定程度的期望、对这份工作是否了解的问题。 对于工作有确实学习目标的人通常学习较快，对于新工作自然较容易进入状况，这时建议你，最好针对工作的性质找出一个确实的答案，如业务员的工作可以这样回答：“我的目标是能成为一个超级业务员，将公司的产品广泛的推销出去，达到最好的业绩成效；为达到这个目标，我一定会努力学习，而我相信以我认真负责的态度，一定可以达到这个目标。” 其他类的工作也可以比照这个方式回答，只要在目标方面稍微修改一下就可以了。\n\n\n# 谈谈你的家庭?\n\n回答提示： 企业面试时询问家庭问题不是非要知道求职者家庭的情况，而是要了解家庭背景对求职者的塑造和影响。企业希望听到的重点也在于家庭对求职者的积极影响。\n\n回答样本： 我很爱我的家庭，我们家一向很和睦，虽然我的父亲和母亲都是普通人，但是从小，我就看到我父亲起早贪黑，每天工作特别勤劳，他的行动无形中培养了我认真负责的态度和勤劳的精神。我母亲为人善良，对人热情，特别乐于助人，所以在单位人缘很好，她的一言一行也一直在教导我做人的道理。\n\n\n# 你认为自己申请这个职位还欠缺什么?\n\n回答提示： 企业喜欢问求职者弱点，但精明的求职者一般不直接回答。\n\n回答样本： 继续重复自己的优势，然后说：“对于这个职位和我的能力来说，我相信自己是可以胜任的，只是缺乏经验，这个问题可以进入公司以后以最短的时间来解决，我的学习能力很强，我相信可以很快融入公司的企业文化，进入工作状态。\n\n\n# 你欣赏哪种性格的人?\n\n回答提示： 诚实、不死板而且容易相处的人、有实际行动的人，加上具体例子。\n\n\n# 你通常如何处理别人的批评?\n\n回答提示： ①沈默是金，不必说什么，否则情况更糟，不过我会接受建设性的批评。②我会等大家冷静下来再讨论。\n\n\n# 怎样对待自己的失败?\n\n回答提示： 大意：我们生来都不是十全十美的，我相信我有第二个机会改正我的错误。\n\n\n# 什么会让你有成就感?\n\n回答提示： 为贵公司竭力效劳，尽我所能，完成一个项目。\n\n\n# 眼下你生活中最重要的是什么?\n\n回答提示： 对我来说，能在这个领域找到工作是最重要的，能在贵公司任职对我说最重要。\n\n\n# 你为什么愿意到我们公司来工作?\n\n回答提示： 对于这个问题，你要格外小心，如果你已经对该单位作了研究，你可以回答一些详细的原因。\n\n回答样本： ①公司本身高技术开发环境很吸引我我同公司出生在同样的时代，我希望能够进入一家与我共同成长的公司。②你们公司一直都稳定发展，在近几年来在市场上有竞争力。我认为贵公司能够给我提供一个与众不同的发展道路。\n\n\n# 你和别人发生过争执吗?\n\n回答提示： 这是面试中最险恶的问题，其实是考官布下的一个陷阱，成功解决矛盾是一个协作团体中成员所必备的能力。假如你工作在一个服务行业，这个问题简直成了最重要的个环节。你是否能获得这份工作，将取决于这个问题的回答。考官希望看到你是成熟且乐于奉献的。他们通过这个问题了解你的成熟度和处世能力。在没有外界干涉的情况下，通过妥协的方式来解决才是正确答案。\n\n\n# 你做过的哪件事最令自己感到骄傲?\n\n回答提示： 这是考官给你的一个机会，让你展示自己把握命运的能力。这会体现你潜在的领导能力以及你被提升的可能性。假如你应聘于一个服务性质的单位，你很可能会被邀请去餐。记住：你的前途取决于你的知识、你的社交能力和综合表现。\n\n\n# 对这项工作，你有哪些可预见的困难?\n\n回答提示： ①不宜直接说出具体的困难，否则可能令对方怀疑应聘者不行。②可以尝试迂回战术，说出应聘者对困难所持有的态度工作中出现一些困难是正常的，也是难免的，但是只要有坚忍不拔的毅力、良好的合作精神以及事前周密而充分的准备，任何困难都是可以克服。\n\n\n# 录用后你将怎样开展工作?\n\n回答提示： ①如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法。②可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”。\n\n\n# 你希望与什么样的上级共事?\n\n回答提示： ①通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。②最好回避对上级具体的希望，多谈对自己的要求。如“做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。\n\n\n# 你工作经验欠缺，如何能胜任这项工作?\n\n回答提示： ①如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘公司并不真正在乎经验，关键看应聘者怎样回答。②对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业。\n\n回答样本： 作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。\n\n\n# 你会怎样获得同事的帮助?\n\n回答提示： 每个公司都在不断变化发展的过程中，你当然希望你的员工也是这样。你希望得到那些希望并欢迎变化的人，因为这些明白，为了公司的发展，变化是公司日常生活中重要组成部分。这样的员工往往很容易适应公司的变化，并会对变化做出积极的响应。\n\n\n# 如果你没被录用，你怎么打算?\n\n回答样本： 现在的社会是一个竞争的社会，从这次面试中也可看出这一点，有竞争就必然有优劣，有成功必定就会有失败。往往成功的背后有许多的困难和挫折，如果这次失败了也仅仅是一次而已，只有经过经验经历的积累才能塑造出一个完全的成功者。我会从以下几个方面来正确看待这次失败：①要敢于面对，面对这次失败不气馁，接受已经失去了这次机会就不会回头这个现实，从心理意志和现出对这次失败的抵抗力。要有自信，相信自己经历了这次之后经过努力一定能行，能够超越自我。②善于反思，对于这次面试经验要认真总结，思考剖析，能够从自身的角度找差距正确对自己，实事求是地评价自己，辩证的看待自己的长短得失，做一个明白人。③走出阴影，克服这一次失败带给自己的心理压力，时刻牢记自己弱点，防患于未然，加强学习，提高自身素质。④认真工作，回到原单位岗位上后，要实实在在、踏踏实实地工作，三十六行行行出状元，争取在本岗位上做出一定的成绩。⑤再接再厉，以后如果有机会我仍然后再次参加竞争。\n\n\n# 最令你沮丧的事情?\n\n回答样本： 曾经接触过一个客户，原本就有耳闻他以挑剔出名，所以事前的准备功夫做得十分充分，也投入了相当多的时间与精力，最后客户虽然并没有照单全收，但是接受的程度已经出乎我们意料之外了。原以为从此可以合作愉快，却得知客户最后因为预算关系选择了另一家代理商，之前的努力因而付诸流水。尽管如此，我还是从这次的经验学到很多，如对该产业的了解，整个team的默契也更好了。\n\n\n# 想过创业吗?\n\n回答提示： 这个问题可以显示你的冲劲，但如果你的回答是“有”的话，千万小心，下一个问题可能就是：那么为什么你不这样做呢?\n\n\n# 为什么我们要在众多的面试者中选择你?\n\n回答提示： 别过度吹嘘自己的能力，或信口开河地乱开支票，例如一定会为该公司带来多少钱的业务等，这样很容易给人一种爱说大话、不切实际的感觉。\n\n回答样本： 根据我对贵公司的了解，以及我在这份工作上所累积的专业、经验及人脉，相信正是贵公司所找寻的人才。而我在工作态度、eq上，也有圆融、成熟的一面，和主管、同事都能合作愉快。\n\n\n# 除了本公司外，还应聘了哪些公司?\n\n回答提示： 这是相当多公司会问的问题，其用意是要概略知道应征者的求职志向，所以这并非绝对是负面答案，就算不便说出公司名称，也应回答“销售同种产品的公司”，如果应聘的其他公司是不同业界，容易让人产生无法信任的感觉。\n\n\n# 你并非毕业于名牌院校?\n\n回答样本： 是否毕业于名牌院校不重要，重要的是有能力完成您交给我的工作，我接受了xx的职业培训，掌握的技能完全可以胜任贵公司现在工作，而且我比一些名牌院校的应届毕业生的动手能力还要强，我想我更适合贵公司这个职位。\n\n\n# 怎样看待学历和能力?\n\n回答样本： 学历我想只要是大学专科的学历，就表明觉得我具备了根本的学习能力。剩下的，你是学士也好，还是博士也好，对于这一点的讨论，不是看你学了多少知识，而是看你在这个领域上发挥了什么，也就是所说的能力问题。一个人工作能力的高低直接决定其职场命运，而学历的高低只是进入一个企业的敲门砖，如果公司把学历卡在博士上我就无法进入贵公司，当然这不一定只是我个人的损失，如果一个专科生都能完成的工作，您又何必非要招聘一位博士生呢?\n\n\n# 谈谈如何适应办公室工作的新环境?\n\n回答样本： ①办公室里每个人都有各自的岗位与职责，不得擅离岗位。②根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。③多请示并及时汇报，遇到不明白的要虚心请教。④抓间隙时间，多学习，努力提高自己的政治素质和业务水平。\n\n\n# 谈谈对这个职务的期许?\n\n回答提示： 回答前不妨先询问公司对这项职务的责任认定及归属，因为每一家公司的状况不尽相同，以免说了一堆理想抱负却发现牛头不对马嘴。\n\n回答样本： 希望能借此发挥我的所学及专长，同时也吸收贵公司在这方面的经验，就公司、我个人而言，缔造双赢的局面。\n\n\n# 何时可以到职?\n\n回答提示： 大多数企业会关心就职时间，最好是回答：“如果被录用的话，到职日可以按公司规定上班”，但是如果还未辞去上一个工作、上班时间又太近，似乎有些强人所难，因为交接至少要一个月的时间，应进一步说明原因，录取公司应该会通融的。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"一个完美主义者的自我救赎",frontmatter:{title:"一个完美主义者的自我救赎",date:"2020-01-16T15:15:27.000Z",permalink:"/pages/2d615df9a36a98ed",categories:["更多","心情杂货"],tags:[null],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/05.%E5%BF%83%E6%83%85%E6%9D%82%E8%B4%A7/01.%E4%B8%80%E4%B8%AA%E5%AE%8C%E7%BE%8E%E4%B8%BB%E4%B9%89%E8%80%85%E7%9A%84%E8%87%AA%E6%88%91%E6%95%91%E8%B5%8E.html",relativePath:"04.更多/05.心情杂货/01.一个完美主义者的自我救赎.md",key:"v-0356b071",path:"/pages/2d615df9a36a98ed/",excerpt:'<h1 id="一个完美主义者的自我救赎"><a class="header-anchor" href="#一个完美主义者的自我救赎">#</a> 一个完美主义者的自我救赎</h1>\n<p>最近，看到一个心理测试题是测试你是否有完美主义：</p>\n<blockquote>\n<p>（1）你是不是经常为自己设定目标，而且最终往往达不到那些目标？</p>\n<p>（2）当一件事件做得不够好时，你是否有再试一次的想法？</p>\n<p>（3）你是否休息时仍想着学习、工作、或者其他还没有解决的事？</p>\n<p>（4）如果遇到别人说话或打岔，破坏了你的注意力，你是否觉得不太高兴？</p>\n<p>（5）你是否常常会在事后想，如果当时能换成另一种方式来解决，也许会更加理想？</p>\n</blockquote>\n<p>如果上面的问题，你的回答大部分是肯定的，那么你就有完美主义倾向。</p>\n',headersStr:null,content:'# 一个完美主义者的自我救赎\n\n最近，看到一个心理测试题是测试你是否有完美主义：\n\n> （1）你是不是经常为自己设定目标，而且最终往往达不到那些目标？\n> \n> （2）当一件事件做得不够好时，你是否有再试一次的想法？\n> \n> （3）你是否休息时仍想着学习、工作、或者其他还没有解决的事？\n> \n> （4）如果遇到别人说话或打岔，破坏了你的注意力，你是否觉得不太高兴？\n> \n> （5）你是否常常会在事后想，如果当时能换成另一种方式来解决，也许会更加理想？\n\n如果上面的问题，你的回答大部分是肯定的，那么你就有完美主义倾向。\n\n对照自身，我就是那个完美主义者，时常会因为某件事做得不够好而感到痛苦，给我带来的后果就是：为了一件事想要达到“完美”的标准，付出了更多的成本，从而忽略真正需要优先处理的其他事情。最后，即使付出了成本，得到的结果也不一定是想要的"完美"。\n\n看过一篇文章，里面说到：\n\n> 完美主义是一种压力，它让你为自己创造不切实际的期望。你明明做到了正常水平，但是因为设定的目标太高，所以看上去距离目的地仍然很遥远。你的心态变成了：这一切还不够好，依然可以改进。\n> \n> 完美主义消耗了我们最宝贵的资源和时间，让你将注意力从真正的优先事项上移开。\n\n完美主义就是追求一个较高水平的目标，不接受一个较低水平的，但可用的结果。我一直告诫自己，改掉追求完美的毛病。\n\n完美主义已经对我造成了一些压力，还会妨碍我开始进入某些事情，总想着万事俱备之后才开始，结果是没有万事俱备，也没有东风，这事就搁置了。\n\n某个军事文章里说，他们特种部队的射击理念是：绝对快，相对准！\n\n> 玩吃鸡游戏似乎也是这样，需要你有快速的反应能力，不管打不打到人，先开枪再说，即使打不到也可以吓到敌人啊，哈哈哈\n\n这个理念似乎也适用于我这样的完美主义者，“做得快”比“做得好”要好，不要太执着于“完美”，就好像我开始写博客，我知道自己的写作水平并不好，但这并不妨碍我开始写博客，相信我会越写越好的~\n\n最后，心理医生也说过追求完美并不利于身心健康，不要追求完美，随心所欲地生活吧！',normalizedContent:'# 一个完美主义者的自我救赎\n\n最近，看到一个心理测试题是测试你是否有完美主义：\n\n> （1）你是不是经常为自己设定目标，而且最终往往达不到那些目标？\n> \n> （2）当一件事件做得不够好时，你是否有再试一次的想法？\n> \n> （3）你是否休息时仍想着学习、工作、或者其他还没有解决的事？\n> \n> （4）如果遇到别人说话或打岔，破坏了你的注意力，你是否觉得不太高兴？\n> \n> （5）你是否常常会在事后想，如果当时能换成另一种方式来解决，也许会更加理想？\n\n如果上面的问题，你的回答大部分是肯定的，那么你就有完美主义倾向。\n\n对照自身，我就是那个完美主义者，时常会因为某件事做得不够好而感到痛苦，给我带来的后果就是：为了一件事想要达到“完美”的标准，付出了更多的成本，从而忽略真正需要优先处理的其他事情。最后，即使付出了成本，得到的结果也不一定是想要的"完美"。\n\n看过一篇文章，里面说到：\n\n> 完美主义是一种压力，它让你为自己创造不切实际的期望。你明明做到了正常水平，但是因为设定的目标太高，所以看上去距离目的地仍然很遥远。你的心态变成了：这一切还不够好，依然可以改进。\n> \n> 完美主义消耗了我们最宝贵的资源和时间，让你将注意力从真正的优先事项上移开。\n\n完美主义就是追求一个较高水平的目标，不接受一个较低水平的，但可用的结果。我一直告诫自己，改掉追求完美的毛病。\n\n完美主义已经对我造成了一些压力，还会妨碍我开始进入某些事情，总想着万事俱备之后才开始，结果是没有万事俱备，也没有东风，这事就搁置了。\n\n某个军事文章里说，他们特种部队的射击理念是：绝对快，相对准！\n\n> 玩吃鸡游戏似乎也是这样，需要你有快速的反应能力，不管打不打到人，先开枪再说，即使打不到也可以吓到敌人啊，哈哈哈\n\n这个理念似乎也适用于我这样的完美主义者，“做得快”比“做得好”要好，不要太执着于“完美”，就好像我开始写博客，我知道自己的写作水平并不好，但这并不妨碍我开始写博客，相信我会越写越好的~\n\n最后，心理医生也说过追求完美并不利于身心健康，不要追求完美，随心所欲地生活吧！',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"反向拆解让人上瘾的套路，找回自律",frontmatter:{title:"反向拆解让人上瘾的套路，找回自律",date:"2020-07-22T13:05:49.000Z",permalink:"/pages/d6d331/",categories:["更多","心情杂货"],tags:["心理","自律"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/04.%E6%9B%B4%E5%A4%9A/05.%E5%BF%83%E6%83%85%E6%9D%82%E8%B4%A7/10.%E5%8F%8D%E5%90%91%E6%8B%86%E8%A7%A3%E8%AE%A9%E4%BA%BA%E4%B8%8A%E7%98%BE%E7%9A%84%E5%A5%97%E8%B7%AF%EF%BC%8C%E6%89%BE%E5%9B%9E%E8%87%AA%E5%BE%8B.html",relativePath:"04.更多/05.心情杂货/10.反向拆解让人上瘾的套路，找回自律.md",key:"v-27cd55da",path:"/pages/d6d331/",headers:[{level:3,title:"1.诱人的目标",slug:"_1-诱人的目标",normalizedTitle:"1.诱人的目标",charIndex:451},{level:3,title:"2.无法抵挡无法预知的积极反馈",slug:"_2-无法抵挡无法预知的积极反馈",normalizedTitle:"2.无法抵挡无法预知的积极反馈",charIndex:505},{level:3,title:"3.渐进式的进步和改善的感觉",slug:"_3-渐进式的进步和改善的感觉",normalizedTitle:"3.渐进式的进步和改善的感觉",charIndex:678},{level:3,title:"4.随着时间的推移越来越困难的任务",slug:"_4-随着时间的推移越来越困难的任务",normalizedTitle:"4.随着时间的推移越来越困难的任务",charIndex:718},{level:3,title:"5.需要解决却又暂未解决的紧张感",slug:"_5-需要解决却又暂未解决的紧张感",normalizedTitle:"5.需要解决却又暂未解决的紧张感",charIndex:760},{level:3,title:"6.强大的社会联系",slug:"_6-强大的社会联系",normalizedTitle:"6.强大的社会联系",charIndex:836},{level:2,title:"找回自律，收获积极而长久的快乐",slug:"找回自律-收获积极而长久的快乐",normalizedTitle:"找回自律，收获积极而长久的快乐",charIndex:909}],excerpt:'<h1 id="反向拆解让人上瘾的套路-找回自律"><a class="header-anchor" href="#反向拆解让人上瘾的套路-找回自律">#</a> 反向拆解让人上瘾的套路，找回自律</h1>\n<p>当你打开手机准备学习或者查个资料的时候，很有可能不知不觉的就脱离的正规... 某某app发来通知：xx明星官宣啦、xx手游重磅上线，一起开启修仙之旅吧！ xx结衣发布新番-4k画质&amp;AR体验、99+未读信息、支付宝到账100万元.... 你心想，就看一会，就一会儿... 不知不觉两三个小时过去了，你开始焦躁、后悔、自责。第二天，你又掉进相同的坑里。你可能会纳闷，为什么我的自制力这么差？为什么对某件事欲罢不能？</p>\n',headersStr:"1.诱人的目标 2.无法抵挡无法预知的积极反馈 3.渐进式的进步和改善的感觉 4.随着时间的推移越来越困难的任务 5.需要解决却又暂未解决的紧张感 6.强大的社会联系 找回自律，收获积极而长久的快乐",content:"# 反向拆解让人上瘾的套路，找回自律\n\n当你打开手机准备学习或者查个资料的时候，很有可能不知不觉的就脱离的正规... 某某app发来通知：xx明星官宣啦、xx手游重磅上线，一起开启修仙之旅吧！ xx结衣发布新番-4k画质&AR体验、99+未读信息、支付宝到账100万元.... 你心想，就看一会，就一会儿... 不知不觉两三个小时过去了，你开始焦躁、后悔、自责。第二天，你又掉进相同的坑里。你可能会纳闷，为什么我的自制力这么差？为什么对某件事欲罢不能？\n\n《欲罢不能》\n\n数字时代比人类历史上的任何时代都更容易上瘾...Facebook、Instagram、网络色情、网购在下钩... 问题不出在人缺乏意志力上，而在于“屏幕那边有数千人在努力工作，为的就是破坏你的自律”\n\n来自《欲罢不能-刷屏时代如何摆脱行为上瘾》一书\n\n我们正在被一个算法和娱乐所包裹的电子'海洛因'中却不自知，想要摆脱这些上瘾行为，第一步就是反向拆解那些让我们上瘾的产品的套路。《欲罢不能》书中总结了六个让人上瘾的钩子：\n\n\n# 1.诱人的目标\n\n * 色情片\n * 游戏中成为\"王者\"、层出不穷的高颜值皮肤...\n * ...\n\n\n# 2.无法抵挡无法预知的积极反馈\n\n * 社交中的点赞功能\n * 某音十几秒一条的视频，不需要你动脑就可以轻轻松松获得哈哈大笑的快感，有时候还有一种我学习到了的感觉，你永远猜不到下一条将会出现什么惊喜。你刷的越多算法就越精准，越知道你的情绪G点在哪里，你就越容易被俘获。\n * 直播中的打赏被主播表示的感谢和送上的'么么哒'\n * ...\n\n\n# 3.渐进式的进步和改善的感觉\n\n * 游戏中的升级策略\n\n * ...\n\n\n# 4.随着时间的推移越来越困难的任务\n\n * 游戏中的升级策略\n * ...\n\n\n# 5.需要解决却又暂未解决的紧张感\n\n * 电影或电视剧结尾有意制造的一个悬念，给你一种未完成的紧张感，你迫切想知道后面会发生什么\n * ...\n\n\n# 6.强大的社会联系\n\n * 与队友相约开黑\n\n * 游戏中能彰显地位、财富、能力等的装备（如：吃鸡游戏中的玛莎拉蒂皮肤）\n\n * ...\n\n\n# 找回自律，收获积极而长久的快乐\n\n获得快乐的方式，你可以选择沉迷在你的手机里刷视频、打游戏、煲剧，毫不费力的收货大把的快乐。你还可以选择一条更难的路：选择自律、选择延迟满足、选择会让你不那么舒服的努力和成长。\n\n收获快乐的方式没有绝对的对与错，但是，如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。过后还可能让你浪费了大把时间，该做的正事没有完成，你感觉空虚、焦躁、自责... 既然如此，我们一起选择那条更难的路吧！\n\n上瘾的案例收集\n\n想想你生活中让你上瘾的案例，对照上面让人上瘾的钩子，看看是哪个钩子吧~~欢迎留言哦~",normalizedContent:"# 反向拆解让人上瘾的套路，找回自律\n\n当你打开手机准备学习或者查个资料的时候，很有可能不知不觉的就脱离的正规... 某某app发来通知：xx明星官宣啦、xx手游重磅上线，一起开启修仙之旅吧！ xx结衣发布新番-4k画质&ar体验、99+未读信息、支付宝到账100万元.... 你心想，就看一会，就一会儿... 不知不觉两三个小时过去了，你开始焦躁、后悔、自责。第二天，你又掉进相同的坑里。你可能会纳闷，为什么我的自制力这么差？为什么对某件事欲罢不能？\n\n《欲罢不能》\n\n数字时代比人类历史上的任何时代都更容易上瘾...facebook、instagram、网络色情、网购在下钩... 问题不出在人缺乏意志力上，而在于“屏幕那边有数千人在努力工作，为的就是破坏你的自律”\n\n来自《欲罢不能-刷屏时代如何摆脱行为上瘾》一书\n\n我们正在被一个算法和娱乐所包裹的电子'海洛因'中却不自知，想要摆脱这些上瘾行为，第一步就是反向拆解那些让我们上瘾的产品的套路。《欲罢不能》书中总结了六个让人上瘾的钩子：\n\n\n# 1.诱人的目标\n\n * 色情片\n * 游戏中成为\"王者\"、层出不穷的高颜值皮肤...\n * ...\n\n\n# 2.无法抵挡无法预知的积极反馈\n\n * 社交中的点赞功能\n * 某音十几秒一条的视频，不需要你动脑就可以轻轻松松获得哈哈大笑的快感，有时候还有一种我学习到了的感觉，你永远猜不到下一条将会出现什么惊喜。你刷的越多算法就越精准，越知道你的情绪g点在哪里，你就越容易被俘获。\n * 直播中的打赏被主播表示的感谢和送上的'么么哒'\n * ...\n\n\n# 3.渐进式的进步和改善的感觉\n\n * 游戏中的升级策略\n\n * ...\n\n\n# 4.随着时间的推移越来越困难的任务\n\n * 游戏中的升级策略\n * ...\n\n\n# 5.需要解决却又暂未解决的紧张感\n\n * 电影或电视剧结尾有意制造的一个悬念，给你一种未完成的紧张感，你迫切想知道后面会发生什么\n * ...\n\n\n# 6.强大的社会联系\n\n * 与队友相约开黑\n\n * 游戏中能彰显地位、财富、能力等的装备（如：吃鸡游戏中的玛莎拉蒂皮肤）\n\n * ...\n\n\n# 找回自律，收获积极而长久的快乐\n\n获得快乐的方式，你可以选择沉迷在你的手机里刷视频、打游戏、煲剧，毫不费力的收货大把的快乐。你还可以选择一条更难的路：选择自律、选择延迟满足、选择会让你不那么舒服的努力和成长。\n\n收获快乐的方式没有绝对的对与错，但是，如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。过后还可能让你浪费了大把时间，该做的正事没有完成，你感觉空虚、焦躁、自责... 既然如此，我们一起选择那条更难的路吧！\n\n上瘾的案例收集\n\n想想你生活中让你上瘾的案例，对照上面让人上瘾的钩子，看看是哪个钩子吧~~欢迎留言哦~",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"2分钟规则",frontmatter:{title:"2分钟规则",date:"2020-11-09T11:05:29.000Z",permalink:"/pages/baaa02/",categories:["更多","实用技巧"],tags:["实用技巧","文摘"]},regularPath:"/04.%E6%9B%B4%E5%A4%9A/10.%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/01.2%E5%88%86%E9%92%9F%E8%A7%84%E5%88%99.html",relativePath:"04.更多/10.实用技巧/01.2分钟规则.md",key:"v-e67dc632",path:"/pages/baaa02/",excerpt:"<p>每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。</p>\n<ul>\n<li>看一本书 → 看一页书</li>\n<li>写一篇文章 → 写一句话</li>\n<li>跑10公里 → 穿上跑鞋</li>\n<li>做100次俯卧撑 → 做1次俯卧撑</li>\n<li>多吃蔬菜水果 → 吃一个水果</li>\n<li>编写一个程序 → 编写一个函数 → 编写一行代码</li>\n</ul>\n",headersStr:null,content:"每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。\n\n * 看一本书 → 看一页书\n * 写一篇文章 → 写一句话\n * 跑10公里 → 穿上跑鞋\n * 做100次俯卧撑 → 做1次俯卧撑\n * 多吃蔬菜水果 → 吃一个水果\n * 编写一个程序 → 编写一个函数 → 编写一行代码\n\n这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。\n\n * 阅读一页 → 阅读10页 → 读完第一章\n * 写一个句子 → 写文章的开头 → 写出正文\n * 穿上跑鞋 → 步行5分钟 → 跑步5分钟\n\n一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。\n\n> 本文摘录自 https://hoanhan.co/2-minute-rule",normalizedContent:"每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。\n\n * 看一本书 → 看一页书\n * 写一篇文章 → 写一句话\n * 跑10公里 → 穿上跑鞋\n * 做100次俯卧撑 → 做1次俯卧撑\n * 多吃蔬菜水果 → 吃一个水果\n * 编写一个程序 → 编写一个函数 → 编写一行代码\n\n这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。\n\n * 阅读一页 → 阅读10页 → 读完第一章\n * 写一个句子 → 写文章的开头 → 写出正文\n * 穿上跑鞋 → 步行5分钟 → 跑步5分钟\n\n一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。\n\n> 本文摘录自 https://hoanhan.co/2-minute-rule",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"一行代码“黑”掉任意网站",frontmatter:{title:"一行代码“黑”掉任意网站",date:"2021-11-25T14:33:51.000Z",permalink:"/pages/dcebaf/",titleTag:"转载",sticky:1,categories:["更多","实用技巧"],tags:["JavaScript","css","实用技巧"]},regularPath:"/04.%E6%9B%B4%E5%A4%9A/10.%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/10.%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E2%80%9C%E9%BB%91%E2%80%9D%E6%8E%89%E4%BB%BB%E6%84%8F%E7%BD%91%E7%AB%99.html",relativePath:"04.更多/10.实用技巧/10.一行代码“黑”掉任意网站.md",key:"v-4e603eaa",path:"/pages/dcebaf/",excerpt:'<h1 id="一行代码-黑-掉任意网站"><a class="header-anchor" href="#一行代码-黑-掉任意网站">#</a> 一行代码“黑”掉任意网站</h1>\n<p>实用技巧：只需一行代码，轻轻一点就可以把任意网站变成暗黑模式。\n<p align="center"><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store@master/blog/QQ20211125-163111.2tmjlvz28n80.png" width="500" style="cursor: zoom-in;"></p></p>\n',headersStr:null,content:"# 一行代码“黑”掉任意网站\n\n实用技巧：只需一行代码，轻轻一点就可以把任意网站变成暗黑模式。\n\n\n\n\n\n首先我们先做一个实验，在任意网站中，打开浏览器开发者工具(F12)，在Console控制台输入如下代码并回车：\n\ndocument.documentElement.style.filter='invert(85%) hue-rotate(180deg)'\n\n\n1\n\n\n神奇的事情发生了，当前打开的网站变成了暗黑模式。\n\n原理解释\n 1. document.documentElement 获取文档对象的根元素，即<html>元素\n 2. 给html元素的.style样式添加filter滤镜样式为invert(85%) hue-rotate(180deg)\n 3. invert() 反转图像。\n 4. hue-rotate()色相旋转。\n\n更多滤镜知识：filter。\n\n为了更方便实用，达到轻轻一点就可以对网页施加魔法🎉，\n\n我们对代码做了一点点🤏🏻改动。（修正了滤镜对图片等元素的影响）\n\njavascript: (function () {  const docStyle = document.documentElement.style;  if (!window.modeIndex) {    window.modeIndex = 0;  }  const styleList = [    '',    'invert(85%) hue-rotate(180deg)',   'invert(100%) hue-rotate(180deg)',  ];  modeIndex = modeIndex >= styleList.length - 1 ? 0 : modeIndex + 1;  docStyle.filter = styleList[modeIndex];  document.body.querySelectorAll('img, picture, video').forEach(el => el.style.filter = modeIndex ? 'invert(1) hue-rotate(180deg)' : '');})();\n\n\n1\n\n\n然后打开浏览器书签管理器，添加新书签，在网址栏粘贴这段代码并保存：\n\n\n\n\n\n以后在任意网站，只需要轻轻一点切换模式书签就可以让它变成85%的暗黑，再点一次就是100%的暗黑，再点一次变回正常模式。\n\n",normalizedContent:"# 一行代码“黑”掉任意网站\n\n实用技巧：只需一行代码，轻轻一点就可以把任意网站变成暗黑模式。\n\n\n\n\n\n首先我们先做一个实验，在任意网站中，打开浏览器开发者工具(f12)，在console控制台输入如下代码并回车：\n\ndocument.documentelement.style.filter='invert(85%) hue-rotate(180deg)'\n\n\n1\n\n\n神奇的事情发生了，当前打开的网站变成了暗黑模式。\n\n原理解释\n 1. document.documentelement 获取文档对象的根元素，即<html>元素\n 2. 给html元素的.style样式添加filter滤镜样式为invert(85%) hue-rotate(180deg)\n 3. invert() 反转图像。\n 4. hue-rotate()色相旋转。\n\n更多滤镜知识：filter。\n\n为了更方便实用，达到轻轻一点就可以对网页施加魔法🎉，\n\n我们对代码做了一点点🤏🏻改动。（修正了滤镜对图片等元素的影响）\n\njavascript: (function () {  const docstyle = document.documentelement.style;  if (!window.modeindex) {    window.modeindex = 0;  }  const stylelist = [    '',    'invert(85%) hue-rotate(180deg)',   'invert(100%) hue-rotate(180deg)',  ];  modeindex = modeindex >= stylelist.length - 1 ? 0 : modeindex + 1;  docstyle.filter = stylelist[modeindex];  document.body.queryselectorall('img, picture, video').foreach(el => el.style.filter = modeindex ? 'invert(1) hue-rotate(180deg)' : '');})();\n\n\n1\n\n\n然后打开浏览器书签管理器，添加新书签，在网址栏粘贴这段代码并保存：\n\n\n\n\n\n以后在任意网站，只需要轻轻一点切换模式书签就可以让它变成85%的暗黑，再点一次就是100%的暗黑，再点一次变回正常模式。\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"友情链接",frontmatter:{title:"友情链接",date:"2019-12-25T14:27:01.000Z",permalink:"/friends",article:!1,sidebar:!1},regularPath:"/04.%E6%9B%B4%E5%A4%9A/99.%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5.html",relativePath:"04.更多/99.友情链接.md",key:"v-346aebdf",path:"/friends/",headers:[{level:3,title:"友链申请",slug:"友链申请",normalizedTitle:"友链申请",charIndex:5360}],headersStr:"友链申请",content:"麋鹿鲁哟\n\n大道至简，知易行难\n\nXAOXUU\n\n#IOS #Volantis主题作者\n\nlookroot的个人空间\n\n寻求理想和显示的平衡\n\n平凡的你我\n\n理想成为大牛的\n小陈同学\n\nznote\n\n荷尽已无擎雨盖，\n菊残犹有傲霜枝。\n\n全栈软件开发直通车\n\n全栈软件开发技术博客，\n从小白到大神!\n\n易良同学的博客\n\n正在努力！\n\n永远的救赎者\n\n知者减半，省者全无。\n\n辰旭博客\n\n凤鸣初阳，百鸟朝凰\n\nJokerM's Palace\n\nTake your heart\n\nSaul.J.Wu\n\n立身之本，不在高低。\n\nLake's blog\n\n不积跬步，无以至千里；不积小流，无以成江海。\n\nCubik的小站\n\nRECOMMENDED BY DR.CREATIVE\n\nx·π\n\n为开发者量身制作的技术博客和知识库管理平台。\n\n眼里有光\n\n道阻且长，行则将至\n\nHeo\n\n爱折腾的设计师\n\nChuyuxuan\n\n临渊羡鱼，不如退而结网\n\n全栈杂货站\n\n千里万里杂货站里，天青色等烟雨，而我在等你。\n\n小鱼博客\n\n总是半途而废的废柴\n\n大胡子\n\n记录你我，分享精彩。\n\n嘟先生学WebGL\n\n流水不争先，争的是滔滔不绝。\n\n嶋屿麋鹿\n\n小鹿的知识库\n\n@小右_\n\n学而不厌 不耻下问\n\n途中的树\n\n走出自己的傲慢，承认自己的局限。\n\nHaobo's Blog\n\n半只脚跨入炼丹师的大门的新人\n\n小胖墩er\n\n迟到总比不到的好，所以好好加油吧。\n\nCloudNative Operations\n\n专注于云原生运维,致敬每个爱学习的你。\n\nJoseph Z.\n\nJoseph Z.的小站\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n- name: XAOXUU\n  desc: '#IOS #Volantis主题作者'\n  avatar: https://cdn.jsdelivr.net/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n- name: lookroot的个人空间\n  desc: 寻求理想和显示的平衡\n  avatar: https://www.lookroot.cn/logo.png\n  link: https://www.lookroot.cn/\n  bgColor: '#B7DBFF'\n  textColor: '#294D71'\n- name: 平凡的你我\n  desc: 理想成为大牛的<br/>小陈同学\n  avatar: https://reinness.com/static/avatar.png\n  link: https://reinness.com\n  bgColor: '#FFE5B4'\n  textColor: '#A05F2C'\n- name: znote\n  desc: 荷尽已无擎雨盖，<br/>菊残犹有傲霜枝。\n  avatar: https://zpj80231.gitee.io/znote/vuepress/head-fish.jpg\n  link: https://zpj80231.gitee.io/znote/\n  bgColor: '#FCE5BF'\n  textColor: '#7B2532'\n- name: 全栈软件开发直通车\n  desc: 全栈软件开发技术博客，<br/>从小白到大神!\n  avatar: https://gitee.com/wangshibiao/blog_picBed2/raw/master/images/20200806151030.png\n  link: https://sofineday.com\n  bgColor: '#FBEBEC'\n  textColor: '#603420'\n- name: 易良同学的博客\n  desc: 正在努力！\n  avatar: https://yiliang.site/assets/images/avatar.jpeg\n  link: https://yiliang.site\n  bgColor: '#FFEFE2'\n  textColor: '#A05F2C'\n- name: 永远的救赎者\n  desc: 知者减半，省者全无。\n  avatar: https://i.loli.net/2020/08/10/PkQMGL6pATW1vBg.jpg\n  link: http://www.yuanchengcheng.vip/\n  bgColor: '#FBEBEC'\n  textColor: '#603420'\n- name: 辰旭博客\n  desc: 凤鸣初阳，百鸟朝凰\n  avatar: https://s1.ax1x.com/2020/08/09/aoLTDx.png\n  link: https://kareny.cn\n  bgColor: '#FFCEDE'\n  textColor: '#621529'\n- name: JokerM's Palace\n  desc: Take your heart\n  avatar: https://jokerm.com/wp-content/uploads/2020/09/jmflogo.png\n  link: https://jokerm.com/\n- name: Saul.J.Wu\n  desc: 立身之本，不在高低。\n  avatar: https://gitee.com/SaulJWu/blog-images/raw/master/images/20210627222322.jpg\n  link: https://sauljwu.github.io/\n- name: Lake's blog\n  desc: 不积跬步，无以至千里；不积小流，无以成江海。\n  avatar: https://cdn.jsdelivr.net/gh/taixingyiji/image_store@main/blog/logo/img.png\n  link: https://taixingyiji.com/\n- name: Cubik的小站\n  desc: RECOMMENDED BY DR.CREATIVE\n  avatar: https://cdn.jsdelivr.net/gh/Cubik65536/cubik-favicons@main/CubikLogo.png\n  link: https://www.cubik65536.top/\n- name: x·π\n  desc: 为开发者量身制作的技术博客和知识库管理平台。\n  avatar: https://cdn.jsdelivr.net/gh/Ezuy-Lee/RainzeDrawingBed/media/logo.png\n  link: https://ezuy-lee.github.io/xpai/\n- name: 眼里有光\n  desc: 道阻且长，行则将至\n  avatar: https://icooloop.gitee.io/img/logo.jpg\n  link: https://icooloop.gitee.io/\n- name: Heo\n  desc: 爱折腾的设计师\n  link: https://blog.zhheo.com/\n  avatar: https://blog.zhheo.com/img/avatar.png\n- name: Chuyuxuan\n  desc: 临渊羡鱼，不如退而结网\n  link: https://blog.chuyuxuan.top/\n  avatar: http://blog.chuyuxuan.top/img/avatar1.jpg\n- name: 全栈杂货站\n  desc: 千里万里杂货站里，天青色等烟雨，而我在等你。\n  avatar: http://cdn.tea-culture.top/tech/images/avatar/3.jpg\n  link: http://tech.tea-culture.top/\n- name: 小鱼博客\n  desc: 总是半途而废的废柴\n  avatar: https://cdn.jsdelivr.net/gh/xiaoyu-666/image_store/blog/minion.png\n  link: https://xiaoyu-666.github.io/\n- name: 大胡子\n  desc: 记录你我，分享精彩。\n  avatar: https://photo.jakehu.cn/favicon.png\n  link: https://www.jakehu.cn\n- name: 嘟先生学WebGL\n  desc: 流水不争先，争的是滔滔不绝。\n  avatar: https://joy1412.cn/img/dudu.jpeg\n  link: https://joy1412.cn\n- name: 嶋屿麋鹿\n  desc: 小鹿的知识库\n  avatar: https://www.fongloo.com/img/logo.png\n  link: https://www.fongloo.com/\n- name: '@小右_'\n  desc: 学而不厌 不耻下问\n  avatar: https://lordblog.cn/upload/2021/05/logo%20(4)-742f1f7e15db44a1b3140035104ea239.png\n  link: https://lordblog.cn/\n- name: 途中的树\n  desc: 走出自己的傲慢，承认自己的局限。\n  avatar: https://zkpeace.com/blog/img/avatar.jpg\n  link: https://zkpeace.com/\n- name: Haobo's Blog\n  link: https://discover304.top/\n  avatar: https://discover304.top/img/head.png\n  desc: 半只脚跨入炼丹师的大门的新人\n- name: 小胖墩er\n  desc: 迟到总比不到的好，所以好好加油吧。\n  avatar: https://cdn.jsdelivr.net/gh/Chubby-Duner/image-hosting@master/blog/logo.jpeg\n  link: https://chubbyduner.top\n- name: CloudNative Operations\n  desc: 专注于云原生运维,致敬每个爱学习的你。\n  avatar: https://kubesre.com/img/logo.png\n  link: https://kubesre.com/\n- name: Joseph Z.\n  desc: Joseph Z.的小站\n  avatar: https://josephz.top/res/joseph.jpg\n  link: https://josephz.top/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n\n\n\n# 友链申请\n\n与我 联系 或者 在本页面评论区留言您的友链信息，格式：(点击代码块右上角一键复制)\n\n- name: Evan's blog # 昵称\n  desc: 积跬步以至千里，喜欢学习喜欢你。 # 介绍\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像\n  link: https://xugaoyi.com/  # 链接\n\n\n1\n2\n3\n4\n\n\n申请前记得先添加本站哦~",normalizedContent:"麋鹿鲁哟\n\n大道至简，知易行难\n\nxaoxuu\n\n#ios #volantis主题作者\n\nlookroot的个人空间\n\n寻求理想和显示的平衡\n\n平凡的你我\n\n理想成为大牛的\n小陈同学\n\nznote\n\n荷尽已无擎雨盖，\n菊残犹有傲霜枝。\n\n全栈软件开发直通车\n\n全栈软件开发技术博客，\n从小白到大神!\n\n易良同学的博客\n\n正在努力！\n\n永远的救赎者\n\n知者减半，省者全无。\n\n辰旭博客\n\n凤鸣初阳，百鸟朝凰\n\njokerm's palace\n\ntake your heart\n\nsaul.j.wu\n\n立身之本，不在高低。\n\nlake's blog\n\n不积跬步，无以至千里；不积小流，无以成江海。\n\ncubik的小站\n\nrecommended by dr.creative\n\nx·π\n\n为开发者量身制作的技术博客和知识库管理平台。\n\n眼里有光\n\n道阻且长，行则将至\n\nheo\n\n爱折腾的设计师\n\nchuyuxuan\n\n临渊羡鱼，不如退而结网\n\n全栈杂货站\n\n千里万里杂货站里，天青色等烟雨，而我在等你。\n\n小鱼博客\n\n总是半途而废的废柴\n\n大胡子\n\n记录你我，分享精彩。\n\n嘟先生学webgl\n\n流水不争先，争的是滔滔不绝。\n\n嶋屿麋鹿\n\n小鹿的知识库\n\n@小右_\n\n学而不厌 不耻下问\n\n途中的树\n\n走出自己的傲慢，承认自己的局限。\n\nhaobo's blog\n\n半只脚跨入炼丹师的大门的新人\n\n小胖墩er\n\n迟到总比不到的好，所以好好加油吧。\n\ncloudnative operations\n\n专注于云原生运维,致敬每个爱学习的你。\n\njoseph z.\n\njoseph z.的小站\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n- name: xaoxuu\n  desc: '#ios #volantis主题作者'\n  avatar: https://cdn.jsdelivr.net/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n- name: lookroot的个人空间\n  desc: 寻求理想和显示的平衡\n  avatar: https://www.lookroot.cn/logo.png\n  link: https://www.lookroot.cn/\n  bgcolor: '#b7dbff'\n  textcolor: '#294d71'\n- name: 平凡的你我\n  desc: 理想成为大牛的<br/>小陈同学\n  avatar: https://reinness.com/static/avatar.png\n  link: https://reinness.com\n  bgcolor: '#ffe5b4'\n  textcolor: '#a05f2c'\n- name: znote\n  desc: 荷尽已无擎雨盖，<br/>菊残犹有傲霜枝。\n  avatar: https://zpj80231.gitee.io/znote/vuepress/head-fish.jpg\n  link: https://zpj80231.gitee.io/znote/\n  bgcolor: '#fce5bf'\n  textcolor: '#7b2532'\n- name: 全栈软件开发直通车\n  desc: 全栈软件开发技术博客，<br/>从小白到大神!\n  avatar: https://gitee.com/wangshibiao/blog_picbed2/raw/master/images/20200806151030.png\n  link: https://sofineday.com\n  bgcolor: '#fbebec'\n  textcolor: '#603420'\n- name: 易良同学的博客\n  desc: 正在努力！\n  avatar: https://yiliang.site/assets/images/avatar.jpeg\n  link: https://yiliang.site\n  bgcolor: '#ffefe2'\n  textcolor: '#a05f2c'\n- name: 永远的救赎者\n  desc: 知者减半，省者全无。\n  avatar: https://i.loli.net/2020/08/10/pkqmgl6patw1vbg.jpg\n  link: http://www.yuanchengcheng.vip/\n  bgcolor: '#fbebec'\n  textcolor: '#603420'\n- name: 辰旭博客\n  desc: 凤鸣初阳，百鸟朝凰\n  avatar: https://s1.ax1x.com/2020/08/09/aoltdx.png\n  link: https://kareny.cn\n  bgcolor: '#ffcede'\n  textcolor: '#621529'\n- name: jokerm's palace\n  desc: take your heart\n  avatar: https://jokerm.com/wp-content/uploads/2020/09/jmflogo.png\n  link: https://jokerm.com/\n- name: saul.j.wu\n  desc: 立身之本，不在高低。\n  avatar: https://gitee.com/sauljwu/blog-images/raw/master/images/20210627222322.jpg\n  link: https://sauljwu.github.io/\n- name: lake's blog\n  desc: 不积跬步，无以至千里；不积小流，无以成江海。\n  avatar: https://cdn.jsdelivr.net/gh/taixingyiji/image_store@main/blog/logo/img.png\n  link: https://taixingyiji.com/\n- name: cubik的小站\n  desc: recommended by dr.creative\n  avatar: https://cdn.jsdelivr.net/gh/cubik65536/cubik-favicons@main/cubiklogo.png\n  link: https://www.cubik65536.top/\n- name: x·π\n  desc: 为开发者量身制作的技术博客和知识库管理平台。\n  avatar: https://cdn.jsdelivr.net/gh/ezuy-lee/rainzedrawingbed/media/logo.png\n  link: https://ezuy-lee.github.io/xpai/\n- name: 眼里有光\n  desc: 道阻且长，行则将至\n  avatar: https://icooloop.gitee.io/img/logo.jpg\n  link: https://icooloop.gitee.io/\n- name: heo\n  desc: 爱折腾的设计师\n  link: https://blog.zhheo.com/\n  avatar: https://blog.zhheo.com/img/avatar.png\n- name: chuyuxuan\n  desc: 临渊羡鱼，不如退而结网\n  link: https://blog.chuyuxuan.top/\n  avatar: http://blog.chuyuxuan.top/img/avatar1.jpg\n- name: 全栈杂货站\n  desc: 千里万里杂货站里，天青色等烟雨，而我在等你。\n  avatar: http://cdn.tea-culture.top/tech/images/avatar/3.jpg\n  link: http://tech.tea-culture.top/\n- name: 小鱼博客\n  desc: 总是半途而废的废柴\n  avatar: https://cdn.jsdelivr.net/gh/xiaoyu-666/image_store/blog/minion.png\n  link: https://xiaoyu-666.github.io/\n- name: 大胡子\n  desc: 记录你我，分享精彩。\n  avatar: https://photo.jakehu.cn/favicon.png\n  link: https://www.jakehu.cn\n- name: 嘟先生学webgl\n  desc: 流水不争先，争的是滔滔不绝。\n  avatar: https://joy1412.cn/img/dudu.jpeg\n  link: https://joy1412.cn\n- name: 嶋屿麋鹿\n  desc: 小鹿的知识库\n  avatar: https://www.fongloo.com/img/logo.png\n  link: https://www.fongloo.com/\n- name: '@小右_'\n  desc: 学而不厌 不耻下问\n  avatar: https://lordblog.cn/upload/2021/05/logo%20(4)-742f1f7e15db44a1b3140035104ea239.png\n  link: https://lordblog.cn/\n- name: 途中的树\n  desc: 走出自己的傲慢，承认自己的局限。\n  avatar: https://zkpeace.com/blog/img/avatar.jpg\n  link: https://zkpeace.com/\n- name: haobo's blog\n  link: https://discover304.top/\n  avatar: https://discover304.top/img/head.png\n  desc: 半只脚跨入炼丹师的大门的新人\n- name: 小胖墩er\n  desc: 迟到总比不到的好，所以好好加油吧。\n  avatar: https://cdn.jsdelivr.net/gh/chubby-duner/image-hosting@master/blog/logo.jpeg\n  link: https://chubbyduner.top\n- name: cloudnative operations\n  desc: 专注于云原生运维,致敬每个爱学习的你。\n  avatar: https://kubesre.com/img/logo.png\n  link: https://kubesre.com/\n- name: joseph z.\n  desc: joseph z.的小站\n  avatar: https://josephz.top/res/joseph.jpg\n  link: https://josephz.top/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n\n\n\n# 友链申请\n\n与我 联系 或者 在本页面评论区留言您的友链信息，格式：(点击代码块右上角一键复制)\n\n- name: evan's blog # 昵称\n  desc: 积跬步以至千里，喜欢学习喜欢你。 # 介绍\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像\n  link: https://xugaoyi.com/  # 链接\n\n\n1\n2\n3\n4\n\n\n申请前记得先添加本站哦~",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"关于",frontmatter:{title:"关于",date:"2022-02-20T14:27:01.000Z",permalink:"/about",sidebar:!1,article:!1},regularPath:"/05.%E5%85%B3%E4%BA%8E/01.%E5%85%B3%E4%BA%8E.html",relativePath:"05.关于/01.关于.md",key:"v-7d6f7b6e",path:"/about/",headers:[{level:2,title:"📚Blog",slug:"📚blog",normalizedTitle:"📚blog",charIndex:2},{level:2,title:"🎨Theme",slug:"🎨theme",normalizedTitle:"🎨theme",charIndex:97},{level:2,title:"🐼Me",slug:"🐼me",normalizedTitle:"🐼me",charIndex:249},{level:3,title:"技能",slug:"技能",normalizedTitle:"技能",charIndex:265},{level:2,title:"✉️ 联系",slug:"联系",normalizedTitle:"✉️ 联系",charIndex:367}],headersStr:"📚Blog 🎨Theme 🐼Me 技能 ✉️ 联系",content:"# 📚Blog\n\n这是一个兼具博客文章、知识管理、文档查找的个人网站，主要内容是后端技术。 ( •̀ ω •́ )✧\n\n提示\n\n文章内容仅是我个人的小总结，资历尚浅，如有误还请指正。\n\n\n# 🎨Theme\n\n\n\n本站主题是 Vdoing，这是一款简洁高效的VuePress 知识管理&博客 主题。旨在轻松打造一个结构化与碎片化并存的个人在线知识库&博客，让你的知识海洋像一本本书一样清晰易读。配合多维索引，让每一个知识点都可以快速定位！ Github地址 | 在线vscode预览源码\n\n\n# 🐼Me\n\n后端小学生\n\n\n# 技能\n\n * 熟悉 Java,Spring 的拼写\n * 了解 Linux、windows、macOS 的开关机方式\n * 精通 Git 的 pull 和 push，并注册了 GitHub 帐号\n\n\n# ✉️ 联系\n\n * QQ: 83663028\n * Email: 83663028@qq.com\n * GitHub: https://github.com/studentcui",normalizedContent:"# 📚blog\n\n这是一个兼具博客文章、知识管理、文档查找的个人网站，主要内容是后端技术。 ( • ω • )✧\n\n提示\n\n文章内容仅是我个人的小总结，资历尚浅，如有误还请指正。\n\n\n# 🎨theme\n\n\n\n本站主题是 vdoing，这是一款简洁高效的vuepress 知识管理&博客 主题。旨在轻松打造一个结构化与碎片化并存的个人在线知识库&博客，让你的知识海洋像一本本书一样清晰易读。配合多维索引，让每一个知识点都可以快速定位！ github地址 | 在线vscode预览源码\n\n\n# 🐼me\n\n后端小学生\n\n\n# 技能\n\n * 熟悉 java,spring 的拼写\n * 了解 linux、windows、macos 的开关机方式\n * 精通 git 的 pull 和 push，并注册了 github 帐号\n\n\n# ✉️ 联系\n\n * qq: 83663028\n * email: 83663028@qq.com\n * github: https://github.com/studentcui",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-53104ef6",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"网站",frontmatter:{title:"网站",permalink:"/pages/beb6c0bd8a66cea6",date:"2020-04-19T11:33:04.000Z",article:!1},regularPath:"/06.%E6%94%B6%E8%97%8F%E5%A4%B9/01.%E7%BD%91%E7%AB%99.html",relativePath:"06.收藏夹/01.网站.md",key:"v-2a378a94",path:"/pages/beb6c0bd8a66cea6/",headers:[{level:2,title:"推荐",slug:"推荐",normalizedTitle:"推荐",charIndex:12},{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:136},{level:2,title:"社区",slug:"社区",normalizedTitle:"社区",charIndex:344},{level:3,title:"社区互动",slug:"社区互动",normalizedTitle:"社区互动",charIndex:565},{level:2,title:"技巧",slug:"技巧",normalizedTitle:"技巧",charIndex:592},{level:2,title:"博客",slug:"博客",normalizedTitle:"博客",charIndex:680},{level:2,title:"电子书",slug:"电子书",normalizedTitle:"电子书",charIndex:744},{level:2,title:"优秀文章",slug:"优秀文章",normalizedTitle:"优秀文章",charIndex:802},{level:2,title:"视频",slug:"视频",normalizedTitle:"视频",charIndex:866},{level:2,title:"Github",slug:"github",normalizedTitle:"github",charIndex:351},{level:2,title:"评论系统",slug:"评论系统",normalizedTitle:"评论系统",charIndex:1117},{level:2,title:"前端小工具",slug:"前端小工具",normalizedTitle:"前端小工具",charIndex:1166},{level:2,title:"代码编辑",slug:"代码编辑",normalizedTitle:"代码编辑",charIndex:1238},{level:2,title:"Emoji表情",slug:"emoji表情",normalizedTitle:"emoji表情",charIndex:1299},{level:2,title:"图片工具",slug:"图片工具",normalizedTitle:"图片工具",charIndex:1462},{level:2,title:"思维导图",slug:"思维导图",normalizedTitle:"思维导图",charIndex:1722},{level:2,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:844},{level:2,title:"CDN加速",slug:"cdn加速",normalizedTitle:"cdn加速",charIndex:2059},{level:2,title:"网站托管",slug:"网站托管",normalizedTitle:"网站托管",charIndex:2119},{level:2,title:"正则",slug:"正则",normalizedTitle:"正则",charIndex:2149},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:2210},{level:2,title:"设计",slug:"设计",normalizedTitle:"设计",charIndex:543},{level:2,title:"图库",slug:"图库",normalizedTitle:"图库",charIndex:3311},{level:2,title:"3D",slug:"_3d",normalizedTitle:"3d",charIndex:1936},{level:2,title:"交互",slug:"交互",normalizedTitle:"交互",charIndex:2389},{level:2,title:"有趣",slug:"有趣",normalizedTitle:"有趣",charIndex:3732},{level:2,title:"生成器",slug:"生成器",normalizedTitle:"生成器",charIndex:1808},{level:2,title:"元宇宙",slug:"元宇宙",normalizedTitle:"元宇宙",charIndex:4305},{level:2,title:"教程",slug:"教程",normalizedTitle:"教程",charIndex:220},{level:2,title:"产品",slug:"产品",normalizedTitle:"产品",charIndex:3298},{level:2,title:"实用",slug:"实用",normalizedTitle:"实用",charIndex:4525},{level:2,title:"Talk",slug:"talk",normalizedTitle:"talk",charIndex:4898},{level:2,title:"算法",slug:"算法",normalizedTitle:"算法",charIndex:2299},{level:2,title:"nginx",slug:"nginx",normalizedTitle:"nginx",charIndex:4978},{level:2,title:"生活",slug:"生活",normalizedTitle:"生活",charIndex:5006}],excerpt:'<h1 id="个人收藏夹"><a class="header-anchor" href="#个人收藏夹">#</a> 个人收藏夹</h1>\n<h2 id="推荐"><a class="header-anchor" href="#推荐">#</a> 推荐</h2>\n<ul>\n<li><a href="https://panjiachen.github.io/awesome-bookmarks/" target="_blank" rel="noopener noreferrer">panjiachen<OutboundLink/></a> by 花裤衩</li>\n<li><a href="https://www.code-nav.cn/" target="_blank" rel="noopener noreferrer">编程导航<OutboundLink/></a> by 程序员鱼皮</li>\n<li><a href="https://r2coding.com/" target="_blank" rel="noopener noreferrer">编程自学之路<OutboundLink/></a> by 程序羊</li>\n<li><a href="https://gitee.com/jishupang/web_atlas" target="_blank" rel="noopener noreferrer">前端知识图谱+B站资源整合<OutboundLink/></a> by 技术胖</li>\n<li><a href="https://shengxinjing.cn/" target="_blank" rel="noopener noreferrer">大圣编程自学网<OutboundLink/></a> by 大圣</li>\n<li><a href="https://devtool.tech/" target="_blank" rel="noopener noreferrer">开发者武器库<OutboundLink/></a></li>\n<li><a href="https://www.fly63.com/tool/home.html" target="_blank" rel="noopener noreferrer">工具大全<OutboundLink/></a></li>\n</ul>\n<p align="center">\n<img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store@master/blog/qrcode.zdqv9mlfc0g.jpg" width="200">\n</p>\n',headersStr:"推荐 文档 社区 社区互动 技巧 博客 电子书 优秀文章 视频 Github 评论系统 前端小工具 代码编辑 Emoji表情 图片工具 思维导图 CSS CDN加速 网站托管 正则 其他 设计 图库 3D 交互 有趣 生成器 元宇宙 教程 产品 实用 Talk 算法 nginx 生活",content:"# 个人收藏夹\n\n\n# 推荐\n\n * panjiachen by 花裤衩\n * 编程导航 by 程序员鱼皮\n * 编程自学之路 by 程序羊\n * 前端知识图谱+B站资源整合 by 技术胖\n * 大圣编程自学网 by 大圣\n * 开发者武器库\n * 工具大全\n\n\n\n\n# 文档\n\n * MDN | MDN-JS标准内置对象 Web技术权威文档\n * DevDocs Web 开发技术文档，非常不错的学习手册！\n * 现代JavaScript教程 以最新标准为基准的JS教程\n * ES5教程 阮一峰的JS教程\n * ES6教程 阮一峰的ES6教程\n * Bash 脚本教程 阮一峰编写\n * ECMA ECMA官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * Github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * InfoQ 促进软件开发及相关领域知识与创新的传播\n * V2EX 创意工作者们的社区\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n\n\n# 社区互动\n\n * gitter\n * 兔小巢\n\n\n# 技巧\n\n * Google 趋势 查看某项技术或关键字的热度趋势，可用于分析某项技术的发展前景，或对比某两项技术的热度。\n * 百度指数 同上，但百度的数据仅限国内。\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * SoBooks 免费的电子书资源网站\n\n\n# 优秀文章\n\n * 我做系统架构的一些原则 作者对系统架构的方法论总结\n * 灵活运用CSS开发技巧\n * 防御性CSS\n\n\n# 视频\n\n * bilibili B站，上面很多免费教学视频\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学MOOC 涵盖计算机、外语、心理学等专业免费课程\n * egghead 质量还不错的短视频教程，外网\n\n\n# Github\n\n * Repobeats 生成仓库的动态数据统计图\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 Stars 增长曲线\n\n\n# 评论系统\n\n * giscus 由 GitHub Discussions 驱动的评论系统\n\n\n# 前端小工具\n\n * Can I use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌VSCode的在线IDE\n\n\n# Emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * 根据文本匹配emoji\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> 在任意输入框快速打开emoji表情方法：\n> Windows系统下按Win + .\n> Mac系统下按Control + Command + 空格\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * 微图 浏览器端图片压缩，不会上传图片到服务器\n * Squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线AI图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove AI抠图\n * backgroundremover 又一个抠图的\n\n\n# 思维导图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n * plectica 绘制知识图谱\n\n\n# CSS\n\n * 各种CSS生成器和JS代码片段\n\n * CSS Tricks CSS技巧收集与演示\n * CSS生成器\n * CSS渐变生成器\n * CSS3-Box Shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3D字体\n * css-tricks css技巧文章\n * You-need-to-know-css CSS的各种DEMO，很全\n * animista CSS动画可视化工具，复制代码就能用\n * navnav 各种炫酷的CSS动画组件\n\n\n# CDN加速\n\n * jsDelivr 国外的一家优秀的公共 CDN 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * iHateRegex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * Linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove AI抠图，抠图算法很厉害\n * Manypixels 插画\n * Undraw 插画\n * storytale 插画，种类丰富，包含3D插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * Bēhance dribbble 是设计师的微博，Bēhance 是设计师的博客\n * Logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * Flat UI 色表 Flat UI 色表\n * 0to255 颜色梯度\n * Ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * Unsplash 提供免费的高清图片\n * Pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * CSS triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * Lorem Picsum 提供免费的占位图\n * Canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd（免抠元素）\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷 国内优秀的设计作品展示\n * 花瓣\n * 虎克 ps 学习教程\n * beTheme\n * UI 中国\n * wallhaven 壁纸网站-\n\n\n# 3D\n\n * sketchfab 3D模型\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n\n * Little Big Details 同上，一个国外微交互汇集网站\n\n * cruip 登录页的各种页面设计，可以免费下载模板\n\n * Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * FC在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * URL 地址播放 Emojis 动画 在地址栏里面播放 emoji\n * Can't Unsee 强烈建议前端、客户端、UI 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * ascii video 使用ascii编码生成视频动画\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n\n\n# 生成器\n\n * artbreeder 动漫图生成真人图像\n\n * 声音生成器 生成下雨、咖啡厅、海浪、火车等声音，可几种声音合成\n\n * 诺基亚短信图片生成器\n\n * 到账语音生成器 支付宝到账1亿元\n\n\n# 元宇宙\n\n符合元宇宙特征的几个网站，允许用户拥有虚拟土地，在上面构建自己的世界：\n\n * 沙盒\n * 梦境空间\n * Decentraland\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * VideoFk VideoFk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * UzerMe 云端办公工具\n * SoBooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * ENFI 下载器 不限速下载器\n * 来画视频 像做 PPT 一样做短视频\n * Arkie 海报制作工具\n * 优品 PPT\n * 比格 PPT\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * Notion 知识库、快速笔记、TaskList、日记、读书清单，各种类型，应有尽有\n\n\n# Talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# nginx\n\n * nginx 可视化配置工具\n\n\n# 生活\n\n * Ventusky 风雨气温图",normalizedContent:"# 个人收藏夹\n\n\n# 推荐\n\n * panjiachen by 花裤衩\n * 编程导航 by 程序员鱼皮\n * 编程自学之路 by 程序羊\n * 前端知识图谱+b站资源整合 by 技术胖\n * 大圣编程自学网 by 大圣\n * 开发者武器库\n * 工具大全\n\n\n\n\n# 文档\n\n * mdn | mdn-js标准内置对象 web技术权威文档\n * devdocs web 开发技术文档，非常不错的学习手册！\n * 现代javascript教程 以最新标准为基准的js教程\n * es5教程 阮一峰的js教程\n * es6教程 阮一峰的es6教程\n * bash 脚本教程 阮一峰编写\n * ecma ecma官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * infoq 促进软件开发及相关领域知识与创新的传播\n * v2ex 创意工作者们的社区\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n\n\n# 社区互动\n\n * gitter\n * 兔小巢\n\n\n# 技巧\n\n * google 趋势 查看某项技术或关键字的热度趋势，可用于分析某项技术的发展前景，或对比某两项技术的热度。\n * 百度指数 同上，但百度的数据仅限国内。\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * sobooks 免费的电子书资源网站\n\n\n# 优秀文章\n\n * 我做系统架构的一些原则 作者对系统架构的方法论总结\n * 灵活运用css开发技巧\n * 防御性css\n\n\n# 视频\n\n * bilibili b站，上面很多免费教学视频\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学mooc 涵盖计算机、外语、心理学等专业免费课程\n * egghead 质量还不错的短视频教程，外网\n\n\n# github\n\n * repobeats 生成仓库的动态数据统计图\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 stars 增长曲线\n\n\n# 评论系统\n\n * giscus 由 github discussions 驱动的评论系统\n\n\n# 前端小工具\n\n * can i use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌vscode的在线ide\n\n\n# emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * 根据文本匹配emoji\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> 在任意输入框快速打开emoji表情方法：\n> windows系统下按win + .\n> mac系统下按control + command + 空格\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * 微图 浏览器端图片压缩，不会上传图片到服务器\n * squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线ai图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove ai抠图\n * backgroundremover 又一个抠图的\n\n\n# 思维导图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n * plectica 绘制知识图谱\n\n\n# css\n\n * 各种css生成器和js代码片段\n\n * css tricks css技巧收集与演示\n * css生成器\n * css渐变生成器\n * css3-box shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3d字体\n * css-tricks css技巧文章\n * you-need-to-know-css css的各种demo，很全\n * animista css动画可视化工具，复制代码就能用\n * navnav 各种炫酷的css动画组件\n\n\n# cdn加速\n\n * jsdelivr 国外的一家优秀的公共 cdn 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * ihateregex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove ai抠图，抠图算法很厉害\n * manypixels 插画\n * undraw 插画\n * storytale 插画，种类丰富，包含3d插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * behance dribbble 是设计师的微博，behance 是设计师的博客\n * logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * flat ui 色表 flat ui 色表\n * 0to255 颜色梯度\n * ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * unsplash 提供免费的高清图片\n * pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * css triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * lorem picsum 提供免费的占位图\n * canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd（免抠元素）\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷 国内优秀的设计作品展示\n * 花瓣\n * 虎克 ps 学习教程\n * betheme\n * ui 中国\n * wallhaven 壁纸网站-\n\n\n# 3d\n\n * sketchfab 3d模型\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n\n * little big details 同上，一个国外微交互汇集网站\n\n * cruip 登录页的各种页面设计，可以免费下载模板\n\n * comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * fc在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * url 地址播放 emojis 动画 在地址栏里面播放 emoji\n * can't unsee 强烈建议前端、客户端、ui 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * ascii video 使用ascii编码生成视频动画\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n\n\n# 生成器\n\n * artbreeder 动漫图生成真人图像\n\n * 声音生成器 生成下雨、咖啡厅、海浪、火车等声音，可几种声音合成\n\n * 诺基亚短信图片生成器\n\n * 到账语音生成器 支付宝到账1亿元\n\n\n# 元宇宙\n\n符合元宇宙特征的几个网站，允许用户拥有虚拟土地，在上面构建自己的世界：\n\n * 沙盒\n * 梦境空间\n * decentraland\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * videofk videofk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * uzerme 云端办公工具\n * sobooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * enfi 下载器 不限速下载器\n * 来画视频 像做 ppt 一样做短视频\n * arkie 海报制作工具\n * 优品 ppt\n * 比格 ppt\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * notion 知识库、快速笔记、tasklist、日记、读书清单，各种类型，应有尽有\n\n\n# talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# nginx\n\n * nginx 可视化配置工具\n\n\n# 生活\n\n * ventusky 风雨气温图",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-1a9d53e5",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-150b83f6",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"你知道的越多，不知道的也就越多",frontmatter:{title:"你知道的越多，不知道的也就越多",date:"2020-05-06T15:52:40.000Z",permalink:"/pages/f2e63f",sidebar:"auto",categories:["随笔"],tags:["学习","知识","鸡汤"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/_posts/%E9%9A%8F%E7%AC%94/%E4%BD%A0%E7%9F%A5%E9%81%93%E7%9A%84%E8%B6%8A%E5%A4%9A%EF%BC%8C%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%B9%9F%E5%B0%B1%E8%B6%8A%E5%A4%9A.html",relativePath:"_posts/随笔/你知道的越多，不知道的也就越多.md",key:"v-95c08fd2",path:"/pages/f2e63f/",excerpt:"<p>不知道大家有没有发现，我们身边经常有这样的人，他们越是有能力的，越是有知识的，越是低调，越是谦逊，因为他们深知，知道的越多，不知道的也就越多。</p>\n",headersStr:null,content:"不知道大家有没有发现，我们身边经常有这样的人，他们越是有能力的，越是有知识的，越是低调，越是谦逊，因为他们深知，知道的越多，不知道的也就越多。\n\n你知道的越多，你不知道的也就越多，这是一句非常有哲理的话。\n\n每个人的知识面都是有限的，你有可能在某个领域会有较深的研究，成为这个领域里的专家，等到你站在高处的时候，才会发现，自己是多么的渺小，才知道自己有多少没有涉及的领域。知道的越多，疑惑、问题就会越来越多，对已知的质疑、疑虑、困惑就会越来越多。\n\n即使如此，我们也应该努力，至少可以成为某个领域的佼佼者。\n\n鸡汤1\n\n弱小的人，才习惯嘲讽与否定，而内心强大的人，从不吝啬赞美与鼓励。\n\n鸡汤2\n\n当代青年人都应该摆脱冷气，只管向上走，不必听从自暴自弃者的流言。能做事的做事，能发声的发声。有一份热，发一份光，就像萤火一般，也可以在黑暗里发一点光，不必等候炬火。",normalizedContent:"不知道大家有没有发现，我们身边经常有这样的人，他们越是有能力的，越是有知识的，越是低调，越是谦逊，因为他们深知，知道的越多，不知道的也就越多。\n\n你知道的越多，你不知道的也就越多，这是一句非常有哲理的话。\n\n每个人的知识面都是有限的，你有可能在某个领域会有较深的研究，成为这个领域里的专家，等到你站在高处的时候，才会发现，自己是多么的渺小，才知道自己有多少没有涉及的领域。知道的越多，疑惑、问题就会越来越多，对已知的质疑、疑虑、困惑就会越来越多。\n\n即使如此，我们也应该努力，至少可以成为某个领域的佼佼者。\n\n鸡汤1\n\n弱小的人，才习惯嘲讽与否定，而内心强大的人，从不吝啬赞美与鼓励。\n\n鸡汤2\n\n当代青年人都应该摆脱冷气，只管向上走，不必听从自暴自弃者的流言。能做事的做事，能发声的发声。有一份热，发一份光，就像萤火一般，也可以在黑暗里发一点光，不必等候炬火。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"拥抱生活，拥抱快乐",frontmatter:{title:"拥抱生活，拥抱快乐",date:"2020-06-26T20:40:38.000Z",permalink:"/pages/cd8bde/",sidebar:"auto",categories:["随笔"],tags:["鸡汤"],author:{name:"xugaoyi",link:"https://github.com/xugaoyi"}},regularPath:"/_posts/%E9%9A%8F%E7%AC%94/%E6%8B%A5%E6%8A%B1%E7%94%9F%E6%B4%BB%EF%BC%8C%E6%8B%A5%E6%8A%B1%E5%BF%AB%E4%B9%90.html",relativePath:"_posts/随笔/拥抱生活，拥抱快乐.md",key:"v-77761d97",path:"/pages/cd8bde/",excerpt:"<p>生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。</p>\n",headersStr:null,content:"生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。\n\n当你怀疑人生没有意义时，难道怀疑本身不值得怀疑吗？\n\n不要任由你内心的虚无感蔓延，我们需要去拥抱真实的生活。\n\n所有真实的快乐，都离不开艰辛的努力，无论是金榜题名的快乐，还是事业成功的喜悦，甚至包括洞房花烛的激动。所有真实的快乐，都需要长久的铺垫与努力，没有辛勤的汗水，快乐也就不再真实。\n\n如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。因此，对于年轻人而言，一个重要的功课就是学会去节制欲望。\n\n所有通过捷径所带来的快乐，都是廉价的，以至于所有追求都变得毫无意义，人生就了无生趣。我们需要在每天真实的努力中去拥抱生活，追寻真实的快乐。\n\n\n\n> 文章摘录自:B站视频《罗翔说刑法》，链接https://b23.tv/K8ulrE",normalizedContent:"生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。\n\n当你怀疑人生没有意义时，难道怀疑本身不值得怀疑吗？\n\n不要任由你内心的虚无感蔓延，我们需要去拥抱真实的生活。\n\n所有真实的快乐，都离不开艰辛的努力，无论是金榜题名的快乐，还是事业成功的喜悦，甚至包括洞房花烛的激动。所有真实的快乐，都需要长久的铺垫与努力，没有辛勤的汗水，快乐也就不再真实。\n\n如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。因此，对于年轻人而言，一个重要的功课就是学会去节制欲望。\n\n所有通过捷径所带来的快乐，都是廉价的，以至于所有追求都变得毫无意义，人生就了无生趣。我们需要在每天真实的努力中去拥抱生活，追寻真实的快乐。\n\n\n\n> 文章摘录自:b站视频《罗翔说刑法》，链接https://b23.tv/k8ulre",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Home",frontmatter:{home:!0,heroText:"Yao's blog",tagline:"后端技术博客，积跬步以至千里，致敬每个爱学习的你。",features:[{title:"后端",details:"Java、Spring框架等后端技术",link:"/backend/",imgUrl:"/img/web.png"},{title:"算法",details:"ACM，算法相关",link:"/acm/",imgUrl:"/img/ui.png"},{title:"技术",details:"技术文档、教程、技巧、总结等文章",link:"/technology/",imgUrl:"/img/other.png"}]},regularPath:"/",relativePath:"index.md",key:"v-a113e2c4",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"常用Git命令清单",frontmatter:{title:"常用Git命令清单",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/8292d8/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E6%89%8B%E5%86%8C/00.%E5%B8%B8%E7%94%A8Git%E5%91%BD%E4%BB%A4%E6%B8%85%E5%8D%95.html",relativePath:"《Git》学习笔记/10.手册/00.常用Git命令清单.md",key:"v-5663e71d",path:"/pages/8292d8/",headers:[{level:2,title:"一、新建代码库",slug:"一、新建代码库",normalizedTitle:"一、新建代码库",charIndex:187},{level:2,title:"二、配置",slug:"二、配置",normalizedTitle:"二、配置",charIndex:334},{level:2,title:"三、增加/删除文件",slug:"三、增加-删除文件",normalizedTitle:"三、增加/删除文件",charIndex:605},{level:2,title:"四、代码提交",slug:"四、代码提交",normalizedTitle:"四、代码提交",charIndex:1005},{level:2,title:"五、分支",slug:"五、分支",normalizedTitle:"五、分支",charIndex:1406},{level:2,title:"六、标签",slug:"六、标签",normalizedTitle:"六、标签",charIndex:2199},{level:2,title:"七、查看信息",slug:"七、查看信息",normalizedTitle:"七、查看信息",charIndex:2616},{level:2,title:"八、远程同步",slug:"八、远程同步",normalizedTitle:"八、远程同步",charIndex:3725},{level:2,title:"九、撤销",slug:"九、撤销",normalizedTitle:"九、撤销",charIndex:4147},{level:2,title:"十、常用操作组合",slug:"十、常用操作组合",normalizedTitle:"十、常用操作组合",charIndex:4799},{level:3,title:"1. 修改本地分支名和远程分支名",slug:"_1-修改本地分支名和远程分支名",normalizedTitle:"1. 修改本地分支名和远程分支名",charIndex:4812}],headersStr:"一、新建代码库 二、配置 三、增加/删除文件 四、代码提交 五、分支 六、标签 七、查看信息 八、远程同步 九、撤销 十、常用操作组合 1. 修改本地分支名和远程分支名",content:'# 常用Git命令清单\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n>  * Workspace：工作区\n>  * Index / Stage：暂存区\n>  * Repository：仓库区（或本地仓库）\n>  * Remote：远程仓库\n\n\n# 一、新建代码库\n\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、配置\n\nGit的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name "[name]"\n$ git config [--global] user.email "[email address]"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三、增加/删除文件\n\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 四、代码提交\n\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 五、分支\n\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 六、标签\n\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 七、查看信息\n\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat "@{0 day ago}"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 八、远程同步\n\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 九、撤销\n\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 十、常用操作组合\n\n\n# 1. 修改本地分支名和远程分支名\n\ngit branch -m old_branch new_branch # 重命名本地分支\ngit push origin :old_branch # 删除远程旧分支（分支名前有冒号）\ngit push --set-upstream origin new_branch # 推送新的分支，并设置本地分支跟踪新的远程分支\n\n\n1\n2\n3\n\n\n相关文章：\n\n《如何撤销 Git 操作？》\n\n《git cherry-pick 教程》 复制某分支上的部分提交到另一个分支上（相对于可以选择指定提交的 rebase 操作）。\n\n> 命令清单来源：https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html',normalizedContent:'# 常用git命令清单\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n\n\n下面是我整理的常用 git 命令清单。几个专用名词的译名如下。\n\n>  * workspace：工作区\n>  * index / stage：暂存区\n>  * repository：仓库区（或本地仓库）\n>  * remote：远程仓库\n\n\n# 一、新建代码库\n\n# 在当前目录新建一个git代码库\n$ git init\n\n# 新建一个目录，将其初始化为git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、配置\n\ngit的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n# 显示当前的git配置\n$ git config --list\n\n# 编辑git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name "[name]"\n$ git config [--global] user.email "[email address]"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三、增加/删除文件\n\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 四、代码提交\n\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 五、分支\n\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 六、标签\n\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagname]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 七、查看信息\n\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -s [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] head --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件\n$ git log [tag] head --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff head\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat "@{0 day ago}"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 八、远程同步\n\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 九、撤销\n\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的head为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前head为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 十、常用操作组合\n\n\n# 1. 修改本地分支名和远程分支名\n\ngit branch -m old_branch new_branch # 重命名本地分支\ngit push origin :old_branch # 删除远程旧分支（分支名前有冒号）\ngit push --set-upstream origin new_branch # 推送新的分支，并设置本地分支跟踪新的远程分支\n\n\n1\n2\n3\n\n\n相关文章：\n\n《如何撤销 git 操作？》\n\n《git cherry-pick 教程》 复制某分支上的部分提交到另一个分支上（相对于可以选择指定提交的 rebase 操作）。\n\n> 命令清单来源：https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git变基合并",frontmatter:{title:"Git变基合并",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/c10281/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E6%89%8B%E5%86%8C/03.Git%E5%8F%98%E5%9F%BA%E5%90%88%E5%B9%B6.html",relativePath:"《Git》学习笔记/10.手册/03.Git变基合并.md",key:"v-05714acb",path:"/pages/c10281/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:17},{level:3,title:"变基要遵守的准则",slug:"变基要遵守的准则",normalizedTitle:"变基要遵守的准则",charIndex:750},{level:3,title:"变基的实质",slug:"变基的实质",normalizedTitle:"变基的实质",charIndex:815},{level:2,title:"后悔药",slug:"后悔药",normalizedTitle:"后悔药",charIndex:531},{level:2,title:"开发期间的rebase操作",slug:"开发期间的rebase操作",normalizedTitle:"开发期间的rebase操作",charIndex:1887},{level:3,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:1905},{level:3,title:"操作步骤",slug:"操作步骤",normalizedTitle:"操作步骤",charIndex:2159},{level:3,title:"git cherry-pick",slug:"git-cherry-pick",normalizedTitle:"git cherry-pick",charIndex:2524}],headersStr:"说明 变基要遵守的准则 变基的实质 后悔药 开发期间的rebase操作 背景 操作步骤 git cherry-pick",content:"# rebase分支合并\n\n\n# 说明\n\n以下 v2 是某个需求的开发分支， dev是总的开发分支，v2 是基于dev分支签出的。\n\n当完成v2的开发后，需要把代码合并到dev，我们可以使用rebase进行合并：\n\n# 首先将 v2 push到远程仓库\ngit add .\ngit commit -m 'xxx'\ngit push origin v2\n\n# 切换到 dev 拉取最新代码\ngit checkout dev\ngit pull origin dev\n\n# 切换到 v2\ngit checkout v2\ngit rebase dev # 将 v2 的所有[commit] 变基到(应用到) dev\n\n# 切换到 dev\ngit checkout dev\ngit merge v2  # 将 dev分支 快进合并 （此时 (HEAD -> dev, v2) [commit] 两个分支指向同一个提交）\n\n# 查看 原v2的[commit]记录 是否在dev分支的最前面（变基成功会把v2的提交记录应用到dev分支的最前面）\ngit log\n\n\t# 如果到这一步发现有问题，尝试使用 git --abort中止变基，如果还是有问题的可以在dev分支上使用《后悔药》操作， 再到v2分支上使用《后悔药》操作，即可使两个分支都回退到 rebase变基 之前的状态\n\n# 试运行项目是否有问题\nyarn start\n\ngit status # 查看状态是否有问题\ngit push origin dev # 推送到远程仓库的 dev\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 变基要遵守的准则\n\n几个人同时在一个分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 因此，变基操作过后的分支将不要再使用。\n\n\n# 后悔药\n\n# 查看HEAD指针变动记录\ngit reflog\n# 记录示例(当前分支是v2):\n07c398f (HEAD -> v2, master) HEAD@{0}: checkout: moving from master to v2\n07c398f (HEAD -> v2, master) HEAD@{1}: rebase (finish): returning to refs/heads/master\n07c398f (HEAD -> v2, master) HEAD@{2}: rebase (start): checkout v2\n15a97d8 HEAD@{3}: reset: moving to 15a97d8\n07c398f (HEAD -> v2, master) HEAD@{4}: merge v2: Fast-forward\n15a97d8 HEAD@{5}: checkout: moving from v2 to master\n07c398f (HEAD -> v2, master) HEAD@{6}: rebase (finish): returning to refs/heads/v2\n07c398f (HEAD -> v2, master) HEAD@{7}: rebase (pick): C\n15a97d8 HEAD@{8}: rebase (start): checkout master # 首次rebase\nd278ecd HEAD@{9}: checkout: moving from master to v2 # rebase前的状态\n15a97d8 HEAD@{10}: commit: D\n\n# 可见，示例中最初的 rebase 操作是 HEAD@{8}，想回退到变基前的状态需让指针指向 HEAD@{9}\ngit reset --hard d278ecd  # 重置当前分支的HEAD为指定[commit]，同时重置暂存区和工作区，与指定[commit]一致\n\n# 此时打印 log 查看是否回到之前的状态\ngit log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n注意：此操作只能回退当前的分支，如其他分支也要回退，需要切换到该分支并执行上面操作。\n\n\n# 开发期间的rebase操作\n\n\n# 背景\n\n有两个分支：\n\ndev\n*v2\n\n\n1\n2\n\n\n2.4-dev 是基于dev切出来的。\n\n提交记录如下：\n\n\t\tdev\na - b - c\n\t\tv2\n\n\n1\n2\n3\n\n\n开发期间，两个分支同时有新的commit ：\n\n\t\t\t\tdev\na - b - c - d - e\n\t\t\\ - f - g\n\t\t\t\tv2\n\n\n1\n2\n3\n4\n\n\n当前你正在v2进行开发，dev也同时进行开发，并有重大的改变，你需要把dev的提交同步到v2。\n\n需求： 把dev中新的提交同步到v2，且不能影响dev分支。\n\n\n# 操作步骤\n\n 1. 基于最新的 dev 切一个新的分支 dev-copy\n    \n    > dev-copy 和 dev 两者的 commit ID 一致。\n\n 2. 在dev-copy中执行rebase，将 dev-copy 的提交变基到 v2\n    \n    git rebase v2 # 将 dev-copy 的提交[commit] 变基到(应用到) v2\n    \n    \n    1\n    \n\n 3. 删除原v2分支，将dev-copy分支名改为v2\n    \n    # 当前在 dev-copy 分支\n    git branch -d v2 # 删除分支\n    git branch -m dev-copy v2 # 重命名\n    \n    \n    1\n    2\n    3\n    \n\n\n# git cherry-pick\n\n来源：《git cherry-pick 教程》\n\n用于将单个或几个[commit]复制到另一个分支。\n\n# 基本应用\n\ngit cherry-pick <commitHash> # 将commitHash应用于当前分支\n\n\n1\n\n\n上面命令就会将指定的提交commitHash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。\n\ngit cherry-pick命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。\n\n# 转移多个提交\n\nCherry pick 支持一次转移多个提交。\n\ngit cherry-pick <HashA> <HashB> # A和B提交\n\n\n1\n\n\n上面的命令将 A 和 B 两个提交应用到当前分支。这会在当前分支生成两个对应的新提交。\n\n如果想要转移一系列的连续提交，可以使用下面的简便语法。\n\ngit cherry-pick A..B # A到B提交，不包含A\n\n\n1\n\n\n上面的命令可以转移从 A 到 B 的所有提交。它们必须按照正确的顺序放置：提交 A 必须早于提交 B，否则命令将失败，但不会报错。\n\n注意，使用上面的命令，提交 A 将不会包含在 Cherry pick 中。如果要包含提交 A，可以使用下面的语法。\n\ngit cherry-pick A^..B # A到B提交，包含A\n\n\n1\n",normalizedContent:"# rebase分支合并\n\n\n# 说明\n\n以下 v2 是某个需求的开发分支， dev是总的开发分支，v2 是基于dev分支签出的。\n\n当完成v2的开发后，需要把代码合并到dev，我们可以使用rebase进行合并：\n\n# 首先将 v2 push到远程仓库\ngit add .\ngit commit -m 'xxx'\ngit push origin v2\n\n# 切换到 dev 拉取最新代码\ngit checkout dev\ngit pull origin dev\n\n# 切换到 v2\ngit checkout v2\ngit rebase dev # 将 v2 的所有[commit] 变基到(应用到) dev\n\n# 切换到 dev\ngit checkout dev\ngit merge v2  # 将 dev分支 快进合并 （此时 (head -> dev, v2) [commit] 两个分支指向同一个提交）\n\n# 查看 原v2的[commit]记录 是否在dev分支的最前面（变基成功会把v2的提交记录应用到dev分支的最前面）\ngit log\n\n\t# 如果到这一步发现有问题，尝试使用 git --abort中止变基，如果还是有问题的可以在dev分支上使用《后悔药》操作， 再到v2分支上使用《后悔药》操作，即可使两个分支都回退到 rebase变基 之前的状态\n\n# 试运行项目是否有问题\nyarn start\n\ngit status # 查看状态是否有问题\ngit push origin dev # 推送到远程仓库的 dev\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 变基要遵守的准则\n\n几个人同时在一个分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 因此，变基操作过后的分支将不要再使用。\n\n\n# 后悔药\n\n# 查看head指针变动记录\ngit reflog\n# 记录示例(当前分支是v2):\n07c398f (head -> v2, master) head@{0}: checkout: moving from master to v2\n07c398f (head -> v2, master) head@{1}: rebase (finish): returning to refs/heads/master\n07c398f (head -> v2, master) head@{2}: rebase (start): checkout v2\n15a97d8 head@{3}: reset: moving to 15a97d8\n07c398f (head -> v2, master) head@{4}: merge v2: fast-forward\n15a97d8 head@{5}: checkout: moving from v2 to master\n07c398f (head -> v2, master) head@{6}: rebase (finish): returning to refs/heads/v2\n07c398f (head -> v2, master) head@{7}: rebase (pick): c\n15a97d8 head@{8}: rebase (start): checkout master # 首次rebase\nd278ecd head@{9}: checkout: moving from master to v2 # rebase前的状态\n15a97d8 head@{10}: commit: d\n\n# 可见，示例中最初的 rebase 操作是 head@{8}，想回退到变基前的状态需让指针指向 head@{9}\ngit reset --hard d278ecd  # 重置当前分支的head为指定[commit]，同时重置暂存区和工作区，与指定[commit]一致\n\n# 此时打印 log 查看是否回到之前的状态\ngit log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n注意：此操作只能回退当前的分支，如其他分支也要回退，需要切换到该分支并执行上面操作。\n\n\n# 开发期间的rebase操作\n\n\n# 背景\n\n有两个分支：\n\ndev\n*v2\n\n\n1\n2\n\n\n2.4-dev 是基于dev切出来的。\n\n提交记录如下：\n\n\t\tdev\na - b - c\n\t\tv2\n\n\n1\n2\n3\n\n\n开发期间，两个分支同时有新的commit ：\n\n\t\t\t\tdev\na - b - c - d - e\n\t\t\\ - f - g\n\t\t\t\tv2\n\n\n1\n2\n3\n4\n\n\n当前你正在v2进行开发，dev也同时进行开发，并有重大的改变，你需要把dev的提交同步到v2。\n\n需求： 把dev中新的提交同步到v2，且不能影响dev分支。\n\n\n# 操作步骤\n\n 1. 基于最新的 dev 切一个新的分支 dev-copy\n    \n    > dev-copy 和 dev 两者的 commit id 一致。\n\n 2. 在dev-copy中执行rebase，将 dev-copy 的提交变基到 v2\n    \n    git rebase v2 # 将 dev-copy 的提交[commit] 变基到(应用到) v2\n    \n    \n    1\n    \n\n 3. 删除原v2分支，将dev-copy分支名改为v2\n    \n    # 当前在 dev-copy 分支\n    git branch -d v2 # 删除分支\n    git branch -m dev-copy v2 # 重命名\n    \n    \n    1\n    2\n    3\n    \n\n\n# git cherry-pick\n\n来源：《git cherry-pick 教程》\n\n用于将单个或几个[commit]复制到另一个分支。\n\n# 基本应用\n\ngit cherry-pick <commithash> # 将commithash应用于当前分支\n\n\n1\n\n\n上面命令就会将指定的提交commithash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。\n\ngit cherry-pick命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。\n\n# 转移多个提交\n\ncherry pick 支持一次转移多个提交。\n\ngit cherry-pick <hasha> <hashb> # a和b提交\n\n\n1\n\n\n上面的命令将 a 和 b 两个提交应用到当前分支。这会在当前分支生成两个对应的新提交。\n\n如果想要转移一系列的连续提交，可以使用下面的简便语法。\n\ngit cherry-pick a..b # a到b提交，不包含a\n\n\n1\n\n\n上面的命令可以转移从 a 到 b 的所有提交。它们必须按照正确的顺序放置：提交 a 必须早于提交 b，否则命令将失败，但不会报错。\n\n注意，使用上面的命令，提交 a 将不会包含在 cherry pick 中。如果要包含提交 a，可以使用下面的语法。\n\ngit cherry-pick a^..b # a到b提交，包含a\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git命令思维导图",frontmatter:{title:"Git命令思维导图",date:"2020-11-18T17:46:22.000Z",permalink:"/pages/4cbc21/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E6%89%8B%E5%86%8C/06.Git%E5%91%BD%E4%BB%A4%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.html",relativePath:"《Git》学习笔记/10.手册/06.Git命令思维导图.md",key:"v-9c92ccb8",path:"/pages/4cbc21/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git基础与命令",frontmatter:{title:"Git基础与命令",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/635088/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/10.Git%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%91%BD%E4%BB%A4.html",relativePath:"《Git》学习笔记/20.文档笔记/10.Git基础与命令.md",key:"v-95bf8eac",path:"/pages/635088/",headers:[{level:2,title:"Git基础",slug:"git基础",normalizedTitle:"git基础",charIndex:2},{level:3,title:"全局配置",slug:"全局配置",normalizedTitle:"全局配置",charIndex:93},{level:3,title:"检查配置信息",slug:"检查配置信息",normalizedTitle:"检查配置信息",charIndex:202},{level:3,title:"获取帮助",slug:"获取帮助",normalizedTitle:"获取帮助",charIndex:237},{level:3,title:"初始化仓库",slug:"初始化仓库",normalizedTitle:"初始化仓库",charIndex:398},{level:3,title:"克隆远程仓库",slug:"克隆远程仓库",normalizedTitle:"克隆远程仓库",charIndex:474},{level:3,title:"检查文件状态",slug:"检查文件状态",normalizedTitle:"检查文件状态",charIndex:623},{level:3,title:"加入暂存区 (跟踪文件)",slug:"加入暂存区-跟踪文件",normalizedTitle:"加入暂存区 (跟踪文件)",charIndex:950},{level:3,title:"忽略文件",slug:"忽略文件",normalizedTitle:"忽略文件",charIndex:1119},{level:3,title:"查看修改的具体内容",slug:"查看修改的具体内容",normalizedTitle:"查看修改的具体内容",charIndex:2105},{level:3,title:"提交更新",slug:"提交更新",normalizedTitle:"提交更新",charIndex:2263},{level:3,title:"跳过使用暂存区域",slug:"跳过使用暂存区域",normalizedTitle:"跳过使用暂存区域",charIndex:2406},{level:2,title:"Git 基础 - 查看提交历史",slug:"git-基础-查看提交历史",normalizedTitle:"git 基础 - 查看提交历史",charIndex:2506},{level:2,title:"Git 基础 - 撤消操作",slug:"git-基础-撤消操作",normalizedTitle:"git 基础 - 撤消操作",charIndex:4022},{level:2,title:"Git 基础 - 远程仓库的使用",slug:"git-基础-远程仓库的使用",normalizedTitle:"git 基础 - 远程仓库的使用",charIndex:4228},{level:3,title:"查看远程仓库",slug:"查看远程仓库",normalizedTitle:"查看远程仓库",charIndex:4249},{level:3,title:"添加远程仓库",slug:"添加远程仓库",normalizedTitle:"添加远程仓库",charIndex:4323},{level:3,title:"从远程仓库中抓取与拉取",slug:"从远程仓库中抓取与拉取",normalizedTitle:"从远程仓库中抓取与拉取",charIndex:4370},{level:3,title:"推送到远程仓库",slug:"推送到远程仓库",normalizedTitle:"推送到远程仓库",charIndex:1106},{level:3,title:"查看某个远程仓库",slug:"查看某个远程仓库",normalizedTitle:"查看某个远程仓库",charIndex:4825},{level:3,title:"远程仓库的重命名与移除",slug:"远程仓库的重命名与移除",normalizedTitle:"远程仓库的重命名与移除",charIndex:4951},{level:2,title:"Git 基础 - 打标签",slug:"git-基础-打标签",normalizedTitle:"git 基础 - 打标签",charIndex:5049},{level:3,title:"列出标签",slug:"列出标签",normalizedTitle:"列出标签",charIndex:5066},{level:3,title:"创建标签",slug:"创建标签",normalizedTitle:"创建标签",charIndex:5164},{level:3,title:"附注标签",slug:"附注标签",normalizedTitle:"附注标签",charIndex:5199},{level:3,title:"轻量标签",slug:"轻量标签",normalizedTitle:"轻量标签",charIndex:5181},{level:3,title:"后期打标签",slug:"后期打标签",normalizedTitle:"后期打标签",charIndex:5893},{level:3,title:"共享标签",slug:"共享标签",normalizedTitle:"共享标签",charIndex:6294},{level:3,title:"删除标签",slug:"删除标签",normalizedTitle:"删除标签",charIndex:6527},{level:3,title:"检出标签",slug:"检出标签",normalizedTitle:"检出标签",charIndex:7014},{level:2,title:"Git 命令别名",slug:"git-命令别名",normalizedTitle:"git 命令别名",charIndex:8135}],headersStr:"Git基础 全局配置 检查配置信息 获取帮助 初始化仓库 克隆远程仓库 检查文件状态 加入暂存区 (跟踪文件) 忽略文件 查看修改的具体内容 提交更新 跳过使用暂存区域 Git 基础 - 查看提交历史 Git 基础 - 撤消操作 Git 基础 - 远程仓库的使用 查看远程仓库 添加远程仓库 从远程仓库中抓取与拉取 推送到远程仓库 查看某个远程仓库 远程仓库的重命名与移除 Git 基础 - 打标签 列出标签 创建标签 附注标签 轻量标签 后期打标签 共享标签 删除标签 检出标签 Git 命令别名",content:"# Git基础与命令\n\n官方文档（中文）：https://git-scm.com/book/zh/v2\n\n> 本文档是根据官方文档来编写的，以官方文档为准。\n\n\n# Git基础\n\n\n# 全局配置\n\ngit config --global user.name 'your name'\ngit config --global user.email 'xxx@xx.com'\n\n\n1\n2\n\n\n自报家门\n\n\n# 检查配置信息\n\ngit config --list\n\n\n1\n\n\n\n# 获取帮助\n\n# 获取全局帮助手册\ngit help\n\n# 获取特定命令的详细版帮助手册 (两个命令是等价的)\ngit help <某个命令>\ngit <某个命令> --help # 两个横杠\n\n# 获取特定命令的简明版帮助手册\ngit <某个命令> -h  # 一个横杠\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 初始化仓库\n\n# 本地目录初始化仓库\ngit init\n\n\n1\n2\n\n\n如果你是从远程仓库clone的项目，则该项目是已经初始化好的git仓库\n\n\n# 克隆远程仓库\n\n# 克隆\ngit clone <url>\n\n# 克隆同时修改目录名\ngit clone <url> <name>\n\n\n1\n2\n3\n4\n5\n\n\n初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态，因为 Git 刚刚检出了它们， 而你尚未编辑过它们\n\n\n# 检查文件状态\n\n# 查看详细状态说明\ngit status\n\n# 查看简明状态说明\ngit status -s  # -s 或 --short\n M README # 已修改，但未暂存 （M的位置靠右，红色）\nMM Rakefile # 已修改，暂存后又作了修改（有暂存和未暂存）\nA  lib/git.rb # 新添加到暂存区，未提交\nM  lib/simplegit.rb # 已修改，已暂存 （M的位置靠左，绿色）\n?? LICENSE.txt # 新添加，未跟踪\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n * git目录中的文件状态包含：是否跟踪、是否修改、是否已存入暂存区\n\n * 参数的一个横杠表示缩写，两个横杠表示全称。\n\n\n# 加入暂存区 (跟踪文件)\n\n# 文件加入暂存区（跟踪指定文件)\ngit add <files>\n\n\n1\n2\n\n\ngit add 命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件。\n\nadd 命令是将文件加入到暂存区，commit 命令的提交到本地仓库，push 命令是推送到远程仓库。\n\n\n# 忽略文件\n\n添加一个名为 .gitignore 的文件，列出要忽略的文件的模式\n\n*.[oa]  # 忽略以 .o 或 .a 结尾的文件（一般这类文件是编译过程出现）\n*~      # 忽略以 ~ 结尾的文件（一般是文本编辑软件保存的副本）\n\n\n1\n2\n\n\n文件 .gitignore 的格式规范如下：\n\n * 所有空行或者以 # 开头的行都会被 Git 忽略（注释符号）。\n\n * 可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。\n   \n   > glob 模式是指 shell 所使用的简化了的正则表达式\n\n * 匹配模式可以以（/）开头防止递归。\n\n * 匹配模式可以以（/）结尾指定目录。\n\n * 要忽略指定模式以外的文件或目录，可以在模式前加上叹号（!）取反。\n\n----------------------------------------\n\n * 星号（*）匹配零个或多个任意字符\n * [abc] 匹配任何一个列在方括号中的字符 （这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）\n * 问号（?）只匹配一个任意字符\n * [0-9] 表示匹配所有 0 到 9 的数字。在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配\n * 使用两个星号（**）表示匹配任意中间目录，比如 a/**/z 可以匹配 a/z 、 a/b/z 或 a/b/c/z 等。\n\n# 忽略所有的 .a 文件\n*.a\n\n# 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件\n!lib.a\n\n# 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO\n/TODO\n\n# 忽略任何目录下名为 build 的文件夹\nbuild/\n\n# 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt\ndoc/*.txt\n\n# 忽略 doc/ 目录及其所有子目录下的 .pdf 文件\ndoc/**/*.pdf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nGitHub 有一个十分详细的针对数十种项目及语言的 .gitignore 文件列表， 你可以在 https://github.com/github/gitignore 找到它。\n\n\n# 查看修改的具体内容\n\ngit diff # 比较修改之后还没有暂存起来的变化内容。\n\ngit diff --staged # 查看已暂存的将要添加到下次提交里的内容\n\n\n1\n2\n3\n\n\ngit status 只能查看文件变动的状态，并不能查看具体修改了哪些内容。使用git diff可以看到具体变动的内容。\n\n\n# 提交更新\n\ngit commit # 未带参数的会打开默认文本编辑器让你输入提交说明\n\ngit commit -m '提交说明' # 带-m参数直接输入提交说明\n\n\n1\n2\n3\n\n\n使用git commit提交更新，在此之前，务必确认所有变动已经被git add添加到暂存区。\n\n\n# 跳过使用暂存区域\n\ngit commit -a -m '提交说明'\n\n\n1\n\n\n添加-a选项可以跳过git add 步骤，把已经跟踪过的文件一并提交。\n\n注意：这个操作无法提交未跟踪的文件。\n\n\n# Git 基础 - 查看提交历史\n\ngit log\n\n\n1\n\n\n不传入任何参数的默认情况下，git log 会按时间先后顺序列出所有的提交，最近的更新排在最上面。\n\n此命令打印的数据中有一项是一长串的 SHA-1 校验码。\n\n带入-p或--patch查看提交的具体差异：\n\ngit log -p -2 # -p显示差异  -2显示最近的提交次数\n\n\n1\n\n\n--stat 显示每次提交的差异统计\n\ngit log --stat\n\n\n1\n\n\n--pretty 这个选项可以使用不同于默认格式的方式展示提交历史\n\n这个选项有一些内建的子选项供你使用。 比如 oneline 会将每个提交放在一行显示，在浏览大量的提交时非常有用。 另外还有 short，full 和 fuller 选项，它们展示信息的格式基本一致，但是详尽程度不一：\n\n$ git log --pretty=oneline\nca82a6dff817ec66f44342007202690a93763949 changed the version number\n085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary test\na11bef06a3f659402fe7563abf99ad00de2209e6 first commit\n\n\n1\n2\n3\n4\n\n\n最有意思的是 format ，可以定制记录的显示格式。 这样的输出对后期提取分析格外有用——因为你知道输出的格式不会随着 Git 的更新而发生改变：\n\n$ git log --pretty=format:\"%h - %an, %ar : %s\"\nca82a6d - Scott Chacon, 6 years ago : changed the version number\n085bb3b - Scott Chacon, 6 years ago : removed unnecessary test\na11bef0 - Scott Chacon, 6 years ago : first commit\n\n\n1\n2\n3\n4\n\n\ngit log --pretty=format 常用的选项 列出了 format 接受的常用格式占位符的写法及其代表的意义。\n\n当 oneline 或 format 与另一个 log 选项 --graph 结合使用时尤其有用。 这个选项添加了一些 ASCII 字符串来形象地展示你的分支、合并历史：\n\n$ git log --pretty=format:\"%h %s\" --graph\n* 2d3acf9 ignore errors from SIGCHLD on trap\n*  5e3ee11 Merge branch 'master' of git://github.com/dustin/grit\n|\\\n| * 420eac9 Added a method for getting the current branch.\n* | 30e367c timeout code and tests\n* | 5a09431 add timeout protection to grit\n* | e1193f8 support for heads with slashes in them\n|/\n* d6016bc require time for xmlschema\n*  11d191e Merge branch 'defunkt' into local\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# Git 基础 - 撤消操作\n\n你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：\n\n$ git commit -m 'initial commit'\n$ git add forgotten_file\n$ git commit --amend # 重新提交，且只有一次提交记录\n\n\n1\n2\n3\n\n\n最终你只会有一个提交——第二次提交将代替第一次提交的结果。\n\n更多撤销操作请了解 reset命令。\n\n\n# Git 基础 - 远程仓库的使用\n\n\n# 查看远程仓库\n\ngit remote # 仅显示远程仓库的名称\ngit remote -v # 显示远程仓库的名称 + 地址\n\n\n1\n2\n\n\n\n# 添加远程仓库\n\n git remote add <远程仓库名> <url>\n\n\n1\n\n\n\n# 从远程仓库中抓取与拉取\n\n就如刚才所见，从远程仓库中获得数据，可以执行：\n\ngit fetch <remote>\n\n\n1\n\n\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。\n\n注意： git fetch 命令只会将数据下载到你的本地仓库——它并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。\n\ngit pull\n\n\n1\n\n\n用 git pull 命令来自动抓取后合并该远程分支到当前分支。 这或许是个更加简单舒服的工作流程。默认情况下，git clone 命令会自动设置本地 master 分支跟踪克隆的远程仓库的 master 分支（或其它名字的默认分支）。 运行 git pull 通常会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支。\n\n\n# 推送到远程仓库\n\ngit push <remote> <branch> # git push origin master\n\n\n1\n\n\n\n# 查看某个远程仓库\n\n git remote show <remote> # git remote show origin\n\n\n1\n\n\n查看远程仓库的详细信息。这个命令列出了当你在特定的分支上执行 git push 会自动地推送到哪一个远程分支\n\n\n# 远程仓库的重命名与移除\n\ngit remote rename <原名> <新名> # 重命名\ngit remote remove paul <remote># 移除远程仓库\n\n\n1\n2\n\n\n\n# Git 基础 - 打标签\n\n\n# 列出标签\n\ngit tag # 完整标签列表\ngit tag -l \"v2.0*\" # 只显示包含 v2.0 的标签。 注意加星号(*)\n\n\n1\n2\n\n\n-l 或 --list 都可以。\n\n\n# 创建标签\n\nGit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）。\n\n轻量标签很像一个不会改变的分支——它只是某个特定提交的引用。\n\n而附注标签是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。 通常会建议创建附注标签，这样你可以拥有以上所有信息。但是如果你只是想用一个临时的标签， 或者因为某些原因不想要保存这些信息，那么也可以用轻量标签。\n\n\n# 附注标签\n\ngit tag -a v1.4 -m \"my version 1.4\" # -a表示add， -m 表示附件信息\n\n\n1\n\n\n通过使用 git show 命令可以看到标签信息和与之对应的提交信息：\n\ngit show v1.4\n\n\n1\n\n\n\n# 轻量标签\n\n轻量标签本质上是将提交校验和存储到一个文件中——没有保存任何其他信息。 创建轻量标签，不需要使用 -a、-s 或 -m 选项，只需要提供标签名字：\n\ngit tag v1.4-lw # 不需要添加选项\n\n\n1\n\n\n这时，如果在标签上运行 git show，你不会看到额外的标签信息。 命令只会显示出提交信息：\n\n$ git show v1.4-lw\ncommit ca82a6dff817ec66f44342007202690a93763949\nAuthor: Scott Chacon <schacon@gee-mail.com>\nDate:   Mon Mar 17 21:52:11 2008 -0700\n\n\n1\n2\n3\n4\n\n\n\n# 后期打标签\n\n你也可以对过去的提交打标签。 假设提交历史是这样的：\n\n$ git log --pretty=oneline\n166ae0c4d3f420721acbb115cc33848dfcc2121a started write support\n9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile\n8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme\n\n\n1\n2\n3\n4\n\n\n现在，假设在 v1.2 时你忘记给项目打标签，也就是在 “updated rakefile” 提交。 你可以在之后补上标签。 要在那个提交上打标签，你需要在命令的末尾指定提交的校验和（或部分校验和）：\n\n$ git tag -a v1.2 9fceb02 # 打的标签属于附注标签\n\n\n1\n\n\n\n# 共享标签\n\ngit push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上。 这个过程就像共享远程分支一样——你可以运行 git push origin <tagname>。\n\ngit push origin v1.5 # 显式地推送标签到远程仓库\ngit push origin --tags # 一次性推送所有不在远程仓库上的标签\n\n\n1\n2\n\n\n现在，当其他人从仓库中克隆或拉取，他们也能得到你的那些标签。\n\n\n# 删除标签\n\n要删除掉你本地仓库上的标签，可以使用命令 git tag -d <tagname>。 例如，可以使用以下命令删除一个轻量标签：\n\n$ git tag -d v1.4-lw\nDeleted tag 'v1.4-lw' (was e7d5add)\n\n\n1\n2\n\n\n注意上述命令并不会从任何远程仓库中移除这个标签，你必须用 git push <remote> :refs/tags/<tagname> 来更新你的远程仓库：\n\n第一种变体是 git push <remote> :refs/tags/<tagname> ：\n\n$ git push origin :refs/tags/v1.4-lw\nTo /git@github.com:schacon/simplegit.git\n - [deleted]         v1.4-lw\n\n\n1\n2\n3\n\n\n上面这种操作的含义是，将冒号前面的空值推送到远程标签名，从而高效地删除它。\n\n第二种更直观的删除远程标签的方式是：\n\n$ git push origin --delete <tagname>\n\n\n1\n\n\n\n# 检出标签\n\n如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用：\n\n$ git checkout 2.0.0\nNote: checking out '2.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b <new-branch>\n\nHEAD is now at 99ada87... Merge pull request #89 from schacon/appendix-final\n\n$ git checkout 2.0-beta-0.1\nPrevious HEAD position was 99ada87... Merge pull request #89 from schacon/appendix-final\nHEAD is now at df3f601... add atlas.json and cover image\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支：\n\n$ git checkout -b version2 v2.0.0\nSwitched to a new branch 'version2'\n\n\n1\n2\n\n\n如果在这之后又进行了一次提交，version2 分支就会因为这个改动向前移动， 此时它就会和 v2.0.0 标签稍微有些不同，这时就要当心了。\n\n\n# Git 命令别名\n\nGit 并不会在你输入部分命令时自动推断出你想要的命令。 如果不想每次都输入完整的 Git 命令，可以通过 git config 文件来轻松地为每一个命令设置一个别名。 这里有一些例子你可以试试：\n\n$ git config --global alias.co checkout\n$ git config --global alias.br branch\n$ git config --global alias.ci commit\n$ git config --global alias.st status\n\n\n1\n2\n3\n4\n\n\n这意味着，当要输入 git commit 时，只需要输入 git ci。\n\n在创建你认为应该存在的命令时这个技术会很有用。 例如，为了解决取消暂存文件的易用性问题，可以向 Git 中添加你自己的取消暂存别名：\n\n$ git config --global alias.unstage 'reset HEAD --'\n\n\n1\n\n\n这会使下面的两个命令等价：\n\n$ git unstage fileA\n$ git reset HEAD -- fileA\n\n\n1\n2\n\n\n这样看起来更清楚一些。 通常也会添加一个 last 命令，像这样：\n\n$ git config --global alias.last 'log -1 HEAD'\n\n\n1\n\n\n这样，可以轻松地看到最后一次提交：\n\n$ git last\ncommit 66938dae3329c7aebe598c2246a8e6af90d04646\nAuthor: Josh Goebel <dreamer3@example.com>\nDate:   Tue Aug 26 19:48:51 2008 +0800\n\n    test for current head\n\n    Signed-off-by: Scott Chacon <schacon@example.com>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n可以看出，Git 只是简单地将别名替换为对应的命令。 然而，你可能想要执行外部命令，而不是一个 Git 子命令。 如果是那样的话，可以在命令前面加入 ! 符号。 如果你自己要写一些与 Git 仓库协作的工具的话，那会很有用。 我们现在演示将 git visual 定义为 gitk 的别名：\n\n$ git config --global alias.visual '!gitk'\n\n\n1\n",normalizedContent:"# git基础与命令\n\n官方文档（中文）：https://git-scm.com/book/zh/v2\n\n> 本文档是根据官方文档来编写的，以官方文档为准。\n\n\n# git基础\n\n\n# 全局配置\n\ngit config --global user.name 'your name'\ngit config --global user.email 'xxx@xx.com'\n\n\n1\n2\n\n\n自报家门\n\n\n# 检查配置信息\n\ngit config --list\n\n\n1\n\n\n\n# 获取帮助\n\n# 获取全局帮助手册\ngit help\n\n# 获取特定命令的详细版帮助手册 (两个命令是等价的)\ngit help <某个命令>\ngit <某个命令> --help # 两个横杠\n\n# 获取特定命令的简明版帮助手册\ngit <某个命令> -h  # 一个横杠\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 初始化仓库\n\n# 本地目录初始化仓库\ngit init\n\n\n1\n2\n\n\n如果你是从远程仓库clone的项目，则该项目是已经初始化好的git仓库\n\n\n# 克隆远程仓库\n\n# 克隆\ngit clone <url>\n\n# 克隆同时修改目录名\ngit clone <url> <name>\n\n\n1\n2\n3\n4\n5\n\n\n初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态，因为 git 刚刚检出了它们， 而你尚未编辑过它们\n\n\n# 检查文件状态\n\n# 查看详细状态说明\ngit status\n\n# 查看简明状态说明\ngit status -s  # -s 或 --short\n m readme # 已修改，但未暂存 （m的位置靠右，红色）\nmm rakefile # 已修改，暂存后又作了修改（有暂存和未暂存）\na  lib/git.rb # 新添加到暂存区，未提交\nm  lib/simplegit.rb # 已修改，已暂存 （m的位置靠左，绿色）\n?? license.txt # 新添加，未跟踪\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n * git目录中的文件状态包含：是否跟踪、是否修改、是否已存入暂存区\n\n * 参数的一个横杠表示缩写，两个横杠表示全称。\n\n\n# 加入暂存区 (跟踪文件)\n\n# 文件加入暂存区（跟踪指定文件)\ngit add <files>\n\n\n1\n2\n\n\ngit add 命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件。\n\nadd 命令是将文件加入到暂存区，commit 命令的提交到本地仓库，push 命令是推送到远程仓库。\n\n\n# 忽略文件\n\n添加一个名为 .gitignore 的文件，列出要忽略的文件的模式\n\n*.[oa]  # 忽略以 .o 或 .a 结尾的文件（一般这类文件是编译过程出现）\n*~      # 忽略以 ~ 结尾的文件（一般是文本编辑软件保存的副本）\n\n\n1\n2\n\n\n文件 .gitignore 的格式规范如下：\n\n * 所有空行或者以 # 开头的行都会被 git 忽略（注释符号）。\n\n * 可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。\n   \n   > glob 模式是指 shell 所使用的简化了的正则表达式\n\n * 匹配模式可以以（/）开头防止递归。\n\n * 匹配模式可以以（/）结尾指定目录。\n\n * 要忽略指定模式以外的文件或目录，可以在模式前加上叹号（!）取反。\n\n----------------------------------------\n\n * 星号（*）匹配零个或多个任意字符\n * [abc] 匹配任何一个列在方括号中的字符 （这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）\n * 问号（?）只匹配一个任意字符\n * [0-9] 表示匹配所有 0 到 9 的数字。在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配\n * 使用两个星号（**）表示匹配任意中间目录，比如 a/**/z 可以匹配 a/z 、 a/b/z 或 a/b/c/z 等。\n\n# 忽略所有的 .a 文件\n*.a\n\n# 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件\n!lib.a\n\n# 只忽略当前目录下的 todo 文件，而不忽略 subdir/todo\n/todo\n\n# 忽略任何目录下名为 build 的文件夹\nbuild/\n\n# 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt\ndoc/*.txt\n\n# 忽略 doc/ 目录及其所有子目录下的 .pdf 文件\ndoc/**/*.pdf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\ngithub 有一个十分详细的针对数十种项目及语言的 .gitignore 文件列表， 你可以在 https://github.com/github/gitignore 找到它。\n\n\n# 查看修改的具体内容\n\ngit diff # 比较修改之后还没有暂存起来的变化内容。\n\ngit diff --staged # 查看已暂存的将要添加到下次提交里的内容\n\n\n1\n2\n3\n\n\ngit status 只能查看文件变动的状态，并不能查看具体修改了哪些内容。使用git diff可以看到具体变动的内容。\n\n\n# 提交更新\n\ngit commit # 未带参数的会打开默认文本编辑器让你输入提交说明\n\ngit commit -m '提交说明' # 带-m参数直接输入提交说明\n\n\n1\n2\n3\n\n\n使用git commit提交更新，在此之前，务必确认所有变动已经被git add添加到暂存区。\n\n\n# 跳过使用暂存区域\n\ngit commit -a -m '提交说明'\n\n\n1\n\n\n添加-a选项可以跳过git add 步骤，把已经跟踪过的文件一并提交。\n\n注意：这个操作无法提交未跟踪的文件。\n\n\n# git 基础 - 查看提交历史\n\ngit log\n\n\n1\n\n\n不传入任何参数的默认情况下，git log 会按时间先后顺序列出所有的提交，最近的更新排在最上面。\n\n此命令打印的数据中有一项是一长串的 sha-1 校验码。\n\n带入-p或--patch查看提交的具体差异：\n\ngit log -p -2 # -p显示差异  -2显示最近的提交次数\n\n\n1\n\n\n--stat 显示每次提交的差异统计\n\ngit log --stat\n\n\n1\n\n\n--pretty 这个选项可以使用不同于默认格式的方式展示提交历史\n\n这个选项有一些内建的子选项供你使用。 比如 oneline 会将每个提交放在一行显示，在浏览大量的提交时非常有用。 另外还有 short，full 和 fuller 选项，它们展示信息的格式基本一致，但是详尽程度不一：\n\n$ git log --pretty=oneline\nca82a6dff817ec66f44342007202690a93763949 changed the version number\n085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary test\na11bef06a3f659402fe7563abf99ad00de2209e6 first commit\n\n\n1\n2\n3\n4\n\n\n最有意思的是 format ，可以定制记录的显示格式。 这样的输出对后期提取分析格外有用——因为你知道输出的格式不会随着 git 的更新而发生改变：\n\n$ git log --pretty=format:\"%h - %an, %ar : %s\"\nca82a6d - scott chacon, 6 years ago : changed the version number\n085bb3b - scott chacon, 6 years ago : removed unnecessary test\na11bef0 - scott chacon, 6 years ago : first commit\n\n\n1\n2\n3\n4\n\n\ngit log --pretty=format 常用的选项 列出了 format 接受的常用格式占位符的写法及其代表的意义。\n\n当 oneline 或 format 与另一个 log 选项 --graph 结合使用时尤其有用。 这个选项添加了一些 ascii 字符串来形象地展示你的分支、合并历史：\n\n$ git log --pretty=format:\"%h %s\" --graph\n* 2d3acf9 ignore errors from sigchld on trap\n*  5e3ee11 merge branch 'master' of git://github.com/dustin/grit\n|\\\n| * 420eac9 added a method for getting the current branch.\n* | 30e367c timeout code and tests\n* | 5a09431 add timeout protection to grit\n* | e1193f8 support for heads with slashes in them\n|/\n* d6016bc require time for xmlschema\n*  11d191e merge branch 'defunkt' into local\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# git 基础 - 撤消操作\n\n你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：\n\n$ git commit -m 'initial commit'\n$ git add forgotten_file\n$ git commit --amend # 重新提交，且只有一次提交记录\n\n\n1\n2\n3\n\n\n最终你只会有一个提交——第二次提交将代替第一次提交的结果。\n\n更多撤销操作请了解 reset命令。\n\n\n# git 基础 - 远程仓库的使用\n\n\n# 查看远程仓库\n\ngit remote # 仅显示远程仓库的名称\ngit remote -v # 显示远程仓库的名称 + 地址\n\n\n1\n2\n\n\n\n# 添加远程仓库\n\n git remote add <远程仓库名> <url>\n\n\n1\n\n\n\n# 从远程仓库中抓取与拉取\n\n就如刚才所见，从远程仓库中获得数据，可以执行：\n\ngit fetch <remote>\n\n\n1\n\n\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。\n\n注意： git fetch 命令只会将数据下载到你的本地仓库——它并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。\n\ngit pull\n\n\n1\n\n\n用 git pull 命令来自动抓取后合并该远程分支到当前分支。 这或许是个更加简单舒服的工作流程。默认情况下，git clone 命令会自动设置本地 master 分支跟踪克隆的远程仓库的 master 分支（或其它名字的默认分支）。 运行 git pull 通常会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支。\n\n\n# 推送到远程仓库\n\ngit push <remote> <branch> # git push origin master\n\n\n1\n\n\n\n# 查看某个远程仓库\n\n git remote show <remote> # git remote show origin\n\n\n1\n\n\n查看远程仓库的详细信息。这个命令列出了当你在特定的分支上执行 git push 会自动地推送到哪一个远程分支\n\n\n# 远程仓库的重命名与移除\n\ngit remote rename <原名> <新名> # 重命名\ngit remote remove paul <remote># 移除远程仓库\n\n\n1\n2\n\n\n\n# git 基础 - 打标签\n\n\n# 列出标签\n\ngit tag # 完整标签列表\ngit tag -l \"v2.0*\" # 只显示包含 v2.0 的标签。 注意加星号(*)\n\n\n1\n2\n\n\n-l 或 --list 都可以。\n\n\n# 创建标签\n\ngit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）。\n\n轻量标签很像一个不会改变的分支——它只是某个特定提交的引用。\n\n而附注标签是存储在 git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 gnu privacy guard （gpg）签名并验证。 通常会建议创建附注标签，这样你可以拥有以上所有信息。但是如果你只是想用一个临时的标签， 或者因为某些原因不想要保存这些信息，那么也可以用轻量标签。\n\n\n# 附注标签\n\ngit tag -a v1.4 -m \"my version 1.4\" # -a表示add， -m 表示附件信息\n\n\n1\n\n\n通过使用 git show 命令可以看到标签信息和与之对应的提交信息：\n\ngit show v1.4\n\n\n1\n\n\n\n# 轻量标签\n\n轻量标签本质上是将提交校验和存储到一个文件中——没有保存任何其他信息。 创建轻量标签，不需要使用 -a、-s 或 -m 选项，只需要提供标签名字：\n\ngit tag v1.4-lw # 不需要添加选项\n\n\n1\n\n\n这时，如果在标签上运行 git show，你不会看到额外的标签信息。 命令只会显示出提交信息：\n\n$ git show v1.4-lw\ncommit ca82a6dff817ec66f44342007202690a93763949\nauthor: scott chacon <schacon@gee-mail.com>\ndate:   mon mar 17 21:52:11 2008 -0700\n\n\n1\n2\n3\n4\n\n\n\n# 后期打标签\n\n你也可以对过去的提交打标签。 假设提交历史是这样的：\n\n$ git log --pretty=oneline\n166ae0c4d3f420721acbb115cc33848dfcc2121a started write support\n9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile\n8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme\n\n\n1\n2\n3\n4\n\n\n现在，假设在 v1.2 时你忘记给项目打标签，也就是在 “updated rakefile” 提交。 你可以在之后补上标签。 要在那个提交上打标签，你需要在命令的末尾指定提交的校验和（或部分校验和）：\n\n$ git tag -a v1.2 9fceb02 # 打的标签属于附注标签\n\n\n1\n\n\n\n# 共享标签\n\ngit push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上。 这个过程就像共享远程分支一样——你可以运行 git push origin <tagname>。\n\ngit push origin v1.5 # 显式地推送标签到远程仓库\ngit push origin --tags # 一次性推送所有不在远程仓库上的标签\n\n\n1\n2\n\n\n现在，当其他人从仓库中克隆或拉取，他们也能得到你的那些标签。\n\n\n# 删除标签\n\n要删除掉你本地仓库上的标签，可以使用命令 git tag -d <tagname>。 例如，可以使用以下命令删除一个轻量标签：\n\n$ git tag -d v1.4-lw\ndeleted tag 'v1.4-lw' (was e7d5add)\n\n\n1\n2\n\n\n注意上述命令并不会从任何远程仓库中移除这个标签，你必须用 git push <remote> :refs/tags/<tagname> 来更新你的远程仓库：\n\n第一种变体是 git push <remote> :refs/tags/<tagname> ：\n\n$ git push origin :refs/tags/v1.4-lw\nto /git@github.com:schacon/simplegit.git\n - [deleted]         v1.4-lw\n\n\n1\n2\n3\n\n\n上面这种操作的含义是，将冒号前面的空值推送到远程标签名，从而高效地删除它。\n\n第二种更直观的删除远程标签的方式是：\n\n$ git push origin --delete <tagname>\n\n\n1\n\n\n\n# 检出标签\n\n如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached head）”的状态——这个状态有些不好的副作用：\n\n$ git checkout 2.0.0\nnote: checking out '2.0.0'.\n\nyou are in 'detached head' state. you can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nif you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. example:\n\n  git checkout -b <new-branch>\n\nhead is now at 99ada87... merge pull request #89 from schacon/appendix-final\n\n$ git checkout 2.0-beta-0.1\nprevious head position was 99ada87... merge pull request #89 from schacon/appendix-final\nhead is now at df3f601... add atlas.json and cover image\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支：\n\n$ git checkout -b version2 v2.0.0\nswitched to a new branch 'version2'\n\n\n1\n2\n\n\n如果在这之后又进行了一次提交，version2 分支就会因为这个改动向前移动， 此时它就会和 v2.0.0 标签稍微有些不同，这时就要当心了。\n\n\n# git 命令别名\n\ngit 并不会在你输入部分命令时自动推断出你想要的命令。 如果不想每次都输入完整的 git 命令，可以通过 git config 文件来轻松地为每一个命令设置一个别名。 这里有一些例子你可以试试：\n\n$ git config --global alias.co checkout\n$ git config --global alias.br branch\n$ git config --global alias.ci commit\n$ git config --global alias.st status\n\n\n1\n2\n3\n4\n\n\n这意味着，当要输入 git commit 时，只需要输入 git ci。\n\n在创建你认为应该存在的命令时这个技术会很有用。 例如，为了解决取消暂存文件的易用性问题，可以向 git 中添加你自己的取消暂存别名：\n\n$ git config --global alias.unstage 'reset head --'\n\n\n1\n\n\n这会使下面的两个命令等价：\n\n$ git unstage filea\n$ git reset head -- filea\n\n\n1\n2\n\n\n这样看起来更清楚一些。 通常也会添加一个 last 命令，像这样：\n\n$ git config --global alias.last 'log -1 head'\n\n\n1\n\n\n这样，可以轻松地看到最后一次提交：\n\n$ git last\ncommit 66938dae3329c7aebe598c2246a8e6af90d04646\nauthor: josh goebel <dreamer3@example.com>\ndate:   tue aug 26 19:48:51 2008 +0800\n\n    test for current head\n\n    signed-off-by: scott chacon <schacon@example.com>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n可以看出，git 只是简单地将别名替换为对应的命令。 然而，你可能想要执行外部命令，而不是一个 git 子命令。 如果是那样的话，可以在命令前面加入 ! 符号。 如果你自己要写一些与 git 仓库协作的工具的话，那会很有用。 我们现在演示将 git visual 定义为 gitk 的别名：\n\n$ git config --global alias.visual '!gitk'\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git工具-重写历史",frontmatter:{title:"Git工具-重写历史",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/1832fe/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/100.Git%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2.html",relativePath:"《Git》学习笔记/20.文档笔记/100.Git工具-重写历史.md",key:"v-dcde98f2",path:"/pages/1832fe/",headers:[{level:2,title:"修改最后一次提交",slug:"修改最后一次提交",normalizedTitle:"修改最后一次提交",charIndex:453},{level:3,title:"修改提交信息",slug:"修改提交信息",normalizedTitle:"修改提交信息",charIndex:519},{level:3,title:"修改实际内容",slug:"修改实际内容",normalizedTitle:"修改实际内容",charIndex:700},{level:2,title:"修改多个提交信息",slug:"修改多个提交信息",normalizedTitle:"修改多个提交信息",charIndex:1113},{level:2,title:"重新排序提交",slug:"重新排序提交",normalizedTitle:"重新排序提交",charIndex:4034},{level:2,title:"压缩提交",slug:"压缩提交",normalizedTitle:"压缩提交",charIndex:4460},{level:2,title:"拆分提交",slug:"拆分提交",normalizedTitle:"拆分提交",charIndex:6218},{level:2,title:"核武器级选项：filter-branch",slug:"核武器级选项-filter-branch",normalizedTitle:"核武器级选项：filter-branch",charIndex:7244},{level:3,title:"从每一个提交中移除一个文件",slug:"从每一个提交中移除一个文件",normalizedTitle:"从每一个提交中移除一个文件",charIndex:7318},{level:3,title:"使一个子目录做为新的根目录",slug:"使一个子目录做为新的根目录",normalizedTitle:"使一个子目录做为新的根目录",charIndex:8358},{level:3,title:"全局修改邮箱地址",slug:"全局修改邮箱地址",normalizedTitle:"全局修改邮箱地址",charIndex:8684}],headersStr:"修改最后一次提交 修改提交信息 修改实际内容 修改多个提交信息 重新排序提交 压缩提交 拆分提交 核武器级选项：filter-branch 从每一个提交中移除一个文件 使一个子目录做为新的根目录 全局修改邮箱地址",content:"# Git 工具 - 重写历史\n\n许多时候，在使用 Git 时，你可能想要修订提交历史。 Git 很棒的一点是它允许你在最后时刻做决定。 你可以在将暂存区内容提交前决定哪些文件进入提交，可以通过 git stash 来决定不与某些内容工作， 也可以重写已经发生的提交就像它们以另一种方式发生的一样。 这可能涉及改变提交的顺序，改变提交中的信息或修改文件，将提交压缩或是拆分， 或完全地移除提交——在将你的工作成果与他人共享之前。\n\n在本节中，你可以学到如何完成这些工作，这样在与他人分享你的工作成果时你的提交历史将如你所愿地展示出来。\n\nNOTE   在满意之前不要推送你的工作GIT 的基本原则之一是，由于克隆中有很多工作是本地的，因此你可以 在本地 随便重写历史记录。\n       然而一旦推送了你的工作，那就完全是另一回事了，除非你有充分的理由进行更改，否则应该将推送的工作视为最终结果。\n       简而言之，在对它感到满意并准备与他人分享之前，应当避免推送你的工作。\n       \n\n\n# 修改最后一次提交\n\n修改你最近一次提交可能是所有修改历史提交的操作中最常见的一个。 对于你的最近一次提交，你往往想做两件事情：简单地修改提交信息， 或者通过添加、移除或修改文件来更改提交实际的内容。\n\n\n# 修改提交信息\n\n如果，你只是想修改最近一次提交的提交信息，那么很简单：\n\n$ git commit --amend\n\n\n1\n\n\n上面这条命令会将最后一次的提交信息载入到编辑器中供你修改。 当保存并关闭编辑器后，编辑器会将更新后的提交信息写入新提交中，它会成为新的最后一次提交。\n\n\n# 修改实际内容\n\n另一方面，如果你想要修改最后一次提交的实际内容，那么流程很相似：首先作出你想要补上的修改， 暂存它们，然后用 git commit --amend 以新的改进后的提交来 替换 掉旧有的最后一次提交，\n\n使用这个技巧的时候需要小心，因为修正会改变提交的 SHA-1 校验和。 它类似于一个小的变基——如果已经推送了最后一次提交就不要修正它。\n\nTIP   修补后的提交可能需要修补提交信息当你在修补一次提交时，可以同时修改提交信息和提交内容。\n      如果你修补了提交的内容，那么几乎肯定要更新提交消息以反映修改后的内容。另一方面，如果你的修补是琐碎的（如修改了一个笔误或添加了一个忘记暂存的文件），\n      那么之前的提交信息不必修改，你只需作出更改，暂存它们，然后通过以下命令避免不必要的编辑器环节即可：$ GIT\n      COMMIT --AMEND --NO-EDIT\n      \n\n\n# 修改多个提交信息\n\n为了修改在提交历史中较远的提交，必须使用更复杂的工具。 Git 没有一个改变历史工具，但是可以使用变基工具来变基一系列提交，基于它们原来的 HEAD 而不是将其移动到另一个新的上面。 通过交互式变基工具，可以在任何想要修改的提交后停止，然后修改信息、添加文件或做任何想做的事情。 可以通过给 git rebase 增加 -i 选项来交互式地运行变基。 必须指定想要重写多久远的历史，这可以通过告诉命令将要变基到的提交来做到。\n\n例如，如果想要修改最近三次提交信息，或者那组提交中的任意一个提交信息， 将想要修改的最近一次提交的父提交作为参数传递给 git rebase -i 命令，即 HEAD~2^ 或 HEAD~3。 记住 ~3 可能比较容易，因为你正尝试修改最后三次提交；但是注意实际上指定了以前的四次提交，即想要修改提交的父提交：\n\n$ git rebase -i HEAD~3\n\n\n1\n\n\n再次记住这是一个变基命令——在 HEAD~3..HEAD 范围内的每一个修改了提交信息的提交及其 所有后裔 都会被重写。 不要涉及任何已经推送到中央服务器的提交——这样做会产生一次变更的两个版本，因而使他人困惑。\n\n运行这个命令会在文本编辑器上给你一个提交的列表，看起来像下面这样：\n\npick f7f3f6d changed my name a bit\npick 310154e updated README formatting and added blame\npick a5f4a0d added cat-file\n\n# Rebase 710f0f8..a5f4a0d onto 710f0f8\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n需要重点注意的是相对于正常使用的 log 命令，这些提交显示的顺序是相反的。 运行一次 log 命令，会看到类似这样的东西：\n\n$ git log --pretty=format:\"%h %s\" HEAD~3..HEAD\na5f4a0d added cat-file\n310154e updated README formatting and added blame\nf7f3f6d changed my name a bit\n\n\n1\n2\n3\n4\n\n\n注意其中的反序显示。 交互式变基给你一个它将会运行的脚本。 它将会从你在命令行中指定的提交（HEAD~3）开始，从上到下的依次重演每一个提交引入的修改。 它将最旧的而不是最新的列在上面，因为那会是第一个将要重演的。\n\n你需要修改脚本来让它停留在你想修改的变更上。 要达到这个目的，你只要将你想修改的每一次提交前面的 ‘pick’ 改为 ‘edit’。 例如，只想修改第三次提交信息，可以像下面这样修改文件：\n\nedit f7f3f6d changed my name a bit\npick 310154e updated README formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n当保存并退出编辑器时，Git 将你带回到列表中的最后一次提交，把你送回命令行并提示以下信息：\n\n$ git rebase -i HEAD~3\nStopped at f7f3f6d... changed my name a bit\nYou can amend the commit now, with\n\n       git commit --amend\n\nOnce you're satisfied with your changes, run\n\n       git rebase --continue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n这些指令准确地告诉你该做什么。 输入\n\n$ git commit --amend\n\n\n1\n\n\n修改提交信息，然后退出编辑器。 然后，运行\n\n$ git rebase --continue\n\n\n1\n\n\n这个命令将会自动地应用另外两个提交，然后就完成了。 如果需要将不止一处的 pick 改为 edit，需要在每一个修改为 edit 的提交上重复这些步骤。 每一次，Git 将会停止，让你修正提交，然后继续直到完成。\n\n\n# 重新排序提交\n\n也可以使用交互式变基来重新排序或完全移除提交。 如果想要移除 “added cat-file” 提交然后修改另外两个提交引入的顺序，可以将变基脚本从这样：\n\npick f7f3f6d changed my name a bit\npick 310154e updated README formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n改为这样：\n\npick 310154e updated README formatting and added blame\npick f7f3f6d changed my name a bit\n\n\n1\n2\n\n\n当保存并退出编辑器时，Git 将你的分支带回这些提交的父提交，应用 310154e 然后应用 f7f3f6d，最后停止。 事实修改了那些提交的顺序并完全地移除了 “added cat-file” 提交。\n\n\n# 压缩提交\n\n通过交互式变基工具，也可以将一连串提交压缩成一个单独的提交。 在变基信息中脚本给出了有用的指令：\n\n#\n# Commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current HEAD with a name\n# t, reset <label> = reset HEAD to a label\n# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). Use -c <commit> to reword the commit message.\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n如果，指定 “squash” 而不是 “pick” 或 “edit”，Git 将应用两者的修改并合并提交信息在一起。 所以，如果想要这三次提交变为一个提交，可以这样修改脚本：\n\npick f7f3f6d changed my name a bit\nsquash 310154e updated README formatting and added blame\nsquash a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n当保存并退出编辑器时，Git 应用所有的三次修改然后将你放到编辑器中来合并三次提交信息：\n\n# This is a combination of 3 commits.\n# The first commit's message is:\nchanged my name a bit\n\n# This is the 2nd commit message:\n\nupdated README formatting and added blame\n\n# This is the 3rd commit message:\n\nadded cat-file\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n当你保存之后，你就拥有了一个包含前三次提交的全部变更的提交。\n\n\n# 拆分提交\n\n拆分一个提交会撤消这个提交，然后多次地部分地暂存与提交直到完成你所需次数的提交。 例如，假设想要拆分三次提交的中间那次提交。 想要将它拆分为两次提交：第一个 “updated README formatting”，第二个 “added blame” 来代替原来的 “updated README formatting and added blame”。 可以通过修改 rebase -i 的脚本来做到这点，将要拆分的提交的指令修改为 “edit”：\n\npick f7f3f6d changed my name a bit\nedit 310154e updated README formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n然后，当脚本带你进入到命令行时，重置那个提交，拿到被重置的修改，从中创建几次提交。 当保存并退出编辑器时，Git 带你到列表中第一个提交的父提交，应用第一个提交（f7f3f6d）， 应用第二个提交（310154e），然后让你进入命令行。 那里，可以通过 git reset HEAD^ 做一次针对那个提交的混合重置，实际上将会撤消那次提交并将修改的文件取消暂存。 现在可以暂存并提交文件直到有几个提交，然后当完成时运行 git rebase --continue：\n\n$ git reset HEAD^\n$ git add README\n$ git commit -m 'updated README formatting'\n$ git add lib/simplegit.rb\n$ git commit -m 'added blame'\n$ git rebase --continue\n\n\n1\n2\n3\n4\n5\n6\n\n\nGit 在脚本中应用最后一次提交（a5f4a0d），历史记录看起来像这样：\n\n$ git log -4 --pretty=format:\"%h %s\"\n1c002dd added cat-file\n9b29157 added blame\n35cfb2b updated README formatting\nf3cc40e changed my name a bit\n\n\n1\n2\n3\n4\n5\n\n\n再次强调，这些改动了所有在列表中的提交的 SHA-1 校验和，所以要确保列表中的提交还没有推送到共享仓库中。\n\n\n# 核武器级选项：filter-branch\n\n有另一个历史改写的选项，如果想要通过脚本的方式改写大量提交的话可以使用它——例如，全局修改你的邮箱地址或从每一个提交中移除一个文件。 这个命令是 filter-branch，它可以改写历史中大量的提交，除非你的项目还没有公开并且其他人没有基于要改写的工作的提交做的工作，否则你不应当使用它。 然而，它可以很有用。 你将会学习到几个常用的用途，这样就得到了它适合使用地方的想法。\n\nCAUTION   GIT FILTER-BRANCH 有很多陷阱，不再推荐使用它来重写历史。 请考虑使用\n          GIT-FILTER-REPO，它是一个 PYTHON 脚本，相比大多数使用 FILTER-BRANCH\n          的应用来说，它做得要更好。它的文档和源码可访问\n          HTTPS://GITHUB.COM/NEWREN/GIT-FILTER-REPO 获取。\n          \n\n\n# 从每一个提交中移除一个文件\n\n这经常发生。 有人粗心地通过 git add . 提交了一个巨大的二进制文件，你想要从所有地方删除。 可能偶然地提交了一个包括一个密码的文件，然而你想要开源项目。 filter-branch 是一个可能会用来擦洗整个提交历史的工具。 为了从整个提交历史中移除一个叫做 passwords.txt 的文件，可以使用 --tree-filter 选项给 filter-branch：\n\n$ git filter-branch --tree-filter 'rm -f passwords.txt' HEAD\nRewrite 6b9b3cf04e7c5686a9cb838c3f36a8cb6a0fc2bd (21/21)\nRef 'refs/heads/master' was rewritten\n\n\n1\n2\n3\n\n\n--tree-filter 选项在检出项目的每一个提交后运行指定的命令然后重新提交结果。 在本例中，你从每一个快照中移除了一个叫作 passwords.txt 的文件，无论它是否存在。 如果想要移除所有偶然提交的编辑器备份文件，可以运行类似 git filter-branch --tree-filter 'rm -f *~' HEAD 的命令。\n\n最后将可以看到 Git 重写树与提交然后移动分支指针。 通常一个好的想法是在一个测试分支中做这件事，然后当你决定最终结果是真正想要的，可以硬重置 master 分支。 为了让 filter-branch 在所有分支上运行，可以给命令传递 --all 选项。\n\n\n# 使一个子目录做为新的根目录\n\n假设已经从另一个源代码控制系统中导入，并且有几个没意义的子目录（trunk、tags 等等）。 如果想要让 trunk 子目录作为每一个提交的新的项目根目录，filter-branch 也可以帮助你那么做：\n\n$ git filter-branch --subdirectory-filter trunk HEAD\nRewrite 856f0bf61e41a27326cdae8f09fe708d679f596f (12/12)\nRef 'refs/heads/master' was rewritten\n\n\n1\n2\n3\n\n\n现在新项目根目录是 trunk 子目录了。 Git 会自动移除所有不影响子目录的提交。\n\n\n# 全局修改邮箱地址\n\n另一个常见的情形是在你开始工作时忘记运行 git config 来设置你的名字与邮箱地址， 或者你想要开源一个项目并且修改所有你的工作邮箱地址为你的个人邮箱地址。 任何情形下，你也可以通过 filter-branch 来一次性修改多个提交中的邮箱地址。 需要小心的是只修改你自己的邮箱地址，所以你使用 --commit-filter：\n\n$ git filter-branch --commit-filter '\n        if [ \"$GIT_AUTHOR_EMAIL\" = \"schacon@localhost\" ];\n        then\n                GIT_AUTHOR_NAME=\"Scott Chacon\";\n                GIT_AUTHOR_EMAIL=\"schacon@example.com\";\n                git commit-tree \"$@\";\n        else\n                git commit-tree \"$@\";\n        fi' HEAD\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n这会遍历并重写每一个提交来包含你的新邮箱地址。 因为提交包含了它们父提交的 SHA-1 校验和，这个命令会修改你的历史中的每一个提交的 SHA-1 校验和， 而不仅仅只是那些匹配邮箱地址的提交。",normalizedContent:"# git 工具 - 重写历史\n\n许多时候，在使用 git 时，你可能想要修订提交历史。 git 很棒的一点是它允许你在最后时刻做决定。 你可以在将暂存区内容提交前决定哪些文件进入提交，可以通过 git stash 来决定不与某些内容工作， 也可以重写已经发生的提交就像它们以另一种方式发生的一样。 这可能涉及改变提交的顺序，改变提交中的信息或修改文件，将提交压缩或是拆分， 或完全地移除提交——在将你的工作成果与他人共享之前。\n\n在本节中，你可以学到如何完成这些工作，这样在与他人分享你的工作成果时你的提交历史将如你所愿地展示出来。\n\nnote   在满意之前不要推送你的工作git 的基本原则之一是，由于克隆中有很多工作是本地的，因此你可以 在本地 随便重写历史记录。\n       然而一旦推送了你的工作，那就完全是另一回事了，除非你有充分的理由进行更改，否则应该将推送的工作视为最终结果。\n       简而言之，在对它感到满意并准备与他人分享之前，应当避免推送你的工作。\n       \n\n\n# 修改最后一次提交\n\n修改你最近一次提交可能是所有修改历史提交的操作中最常见的一个。 对于你的最近一次提交，你往往想做两件事情：简单地修改提交信息， 或者通过添加、移除或修改文件来更改提交实际的内容。\n\n\n# 修改提交信息\n\n如果，你只是想修改最近一次提交的提交信息，那么很简单：\n\n$ git commit --amend\n\n\n1\n\n\n上面这条命令会将最后一次的提交信息载入到编辑器中供你修改。 当保存并关闭编辑器后，编辑器会将更新后的提交信息写入新提交中，它会成为新的最后一次提交。\n\n\n# 修改实际内容\n\n另一方面，如果你想要修改最后一次提交的实际内容，那么流程很相似：首先作出你想要补上的修改， 暂存它们，然后用 git commit --amend 以新的改进后的提交来 替换 掉旧有的最后一次提交，\n\n使用这个技巧的时候需要小心，因为修正会改变提交的 sha-1 校验和。 它类似于一个小的变基——如果已经推送了最后一次提交就不要修正它。\n\ntip   修补后的提交可能需要修补提交信息当你在修补一次提交时，可以同时修改提交信息和提交内容。\n      如果你修补了提交的内容，那么几乎肯定要更新提交消息以反映修改后的内容。另一方面，如果你的修补是琐碎的（如修改了一个笔误或添加了一个忘记暂存的文件），\n      那么之前的提交信息不必修改，你只需作出更改，暂存它们，然后通过以下命令避免不必要的编辑器环节即可：$ git\n      commit --amend --no-edit\n      \n\n\n# 修改多个提交信息\n\n为了修改在提交历史中较远的提交，必须使用更复杂的工具。 git 没有一个改变历史工具，但是可以使用变基工具来变基一系列提交，基于它们原来的 head 而不是将其移动到另一个新的上面。 通过交互式变基工具，可以在任何想要修改的提交后停止，然后修改信息、添加文件或做任何想做的事情。 可以通过给 git rebase 增加 -i 选项来交互式地运行变基。 必须指定想要重写多久远的历史，这可以通过告诉命令将要变基到的提交来做到。\n\n例如，如果想要修改最近三次提交信息，或者那组提交中的任意一个提交信息， 将想要修改的最近一次提交的父提交作为参数传递给 git rebase -i 命令，即 head~2^ 或 head~3。 记住 ~3 可能比较容易，因为你正尝试修改最后三次提交；但是注意实际上指定了以前的四次提交，即想要修改提交的父提交：\n\n$ git rebase -i head~3\n\n\n1\n\n\n再次记住这是一个变基命令——在 head~3..head 范围内的每一个修改了提交信息的提交及其 所有后裔 都会被重写。 不要涉及任何已经推送到中央服务器的提交——这样做会产生一次变更的两个版本，因而使他人困惑。\n\n运行这个命令会在文本编辑器上给你一个提交的列表，看起来像下面这样：\n\npick f7f3f6d changed my name a bit\npick 310154e updated readme formatting and added blame\npick a5f4a0d added cat-file\n\n# rebase 710f0f8..a5f4a0d onto 710f0f8\n#\n# commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current head with a name\n# t, reset <label> = reset head to a label\n# m, merge [-c <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). use -c <commit> to reword the commit message.\n#\n# these lines can be re-ordered; they are executed from top to bottom.\n#\n# if you remove a line here that commit will be lost.\n#\n# however, if you remove everything, the rebase will be aborted.\n#\n# note that empty commits are commented out\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n需要重点注意的是相对于正常使用的 log 命令，这些提交显示的顺序是相反的。 运行一次 log 命令，会看到类似这样的东西：\n\n$ git log --pretty=format:\"%h %s\" head~3..head\na5f4a0d added cat-file\n310154e updated readme formatting and added blame\nf7f3f6d changed my name a bit\n\n\n1\n2\n3\n4\n\n\n注意其中的反序显示。 交互式变基给你一个它将会运行的脚本。 它将会从你在命令行中指定的提交（head~3）开始，从上到下的依次重演每一个提交引入的修改。 它将最旧的而不是最新的列在上面，因为那会是第一个将要重演的。\n\n你需要修改脚本来让它停留在你想修改的变更上。 要达到这个目的，你只要将你想修改的每一次提交前面的 ‘pick’ 改为 ‘edit’。 例如，只想修改第三次提交信息，可以像下面这样修改文件：\n\nedit f7f3f6d changed my name a bit\npick 310154e updated readme formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n当保存并退出编辑器时，git 将你带回到列表中的最后一次提交，把你送回命令行并提示以下信息：\n\n$ git rebase -i head~3\nstopped at f7f3f6d... changed my name a bit\nyou can amend the commit now, with\n\n       git commit --amend\n\nonce you're satisfied with your changes, run\n\n       git rebase --continue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n这些指令准确地告诉你该做什么。 输入\n\n$ git commit --amend\n\n\n1\n\n\n修改提交信息，然后退出编辑器。 然后，运行\n\n$ git rebase --continue\n\n\n1\n\n\n这个命令将会自动地应用另外两个提交，然后就完成了。 如果需要将不止一处的 pick 改为 edit，需要在每一个修改为 edit 的提交上重复这些步骤。 每一次，git 将会停止，让你修正提交，然后继续直到完成。\n\n\n# 重新排序提交\n\n也可以使用交互式变基来重新排序或完全移除提交。 如果想要移除 “added cat-file” 提交然后修改另外两个提交引入的顺序，可以将变基脚本从这样：\n\npick f7f3f6d changed my name a bit\npick 310154e updated readme formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n改为这样：\n\npick 310154e updated readme formatting and added blame\npick f7f3f6d changed my name a bit\n\n\n1\n2\n\n\n当保存并退出编辑器时，git 将你的分支带回这些提交的父提交，应用 310154e 然后应用 f7f3f6d，最后停止。 事实修改了那些提交的顺序并完全地移除了 “added cat-file” 提交。\n\n\n# 压缩提交\n\n通过交互式变基工具，也可以将一连串提交压缩成一个单独的提交。 在变基信息中脚本给出了有用的指令：\n\n#\n# commands:\n# p, pick <commit> = use commit\n# r, reword <commit> = use commit, but edit the commit message\n# e, edit <commit> = use commit, but stop for amending\n# s, squash <commit> = use commit, but meld into previous commit\n# f, fixup <commit> = like \"squash\", but discard this commit's log message\n# x, exec <command> = run command (the rest of the line) using shell\n# b, break = stop here (continue rebase later with 'git rebase --continue')\n# d, drop <commit> = remove commit\n# l, label <label> = label current head with a name\n# t, reset <label> = reset head to a label\n# m, merge [-c <commit> | -c <commit>] <label> [# <oneline>]\n# .       create a merge commit using the original merge commit's\n# .       message (or the oneline, if no original merge commit was\n# .       specified). use -c <commit> to reword the commit message.\n#\n# these lines can be re-ordered; they are executed from top to bottom.\n#\n# if you remove a line here that commit will be lost.\n#\n# however, if you remove everything, the rebase will be aborted.\n#\n# note that empty commits are commented out\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n如果，指定 “squash” 而不是 “pick” 或 “edit”，git 将应用两者的修改并合并提交信息在一起。 所以，如果想要这三次提交变为一个提交，可以这样修改脚本：\n\npick f7f3f6d changed my name a bit\nsquash 310154e updated readme formatting and added blame\nsquash a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n当保存并退出编辑器时，git 应用所有的三次修改然后将你放到编辑器中来合并三次提交信息：\n\n# this is a combination of 3 commits.\n# the first commit's message is:\nchanged my name a bit\n\n# this is the 2nd commit message:\n\nupdated readme formatting and added blame\n\n# this is the 3rd commit message:\n\nadded cat-file\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n当你保存之后，你就拥有了一个包含前三次提交的全部变更的提交。\n\n\n# 拆分提交\n\n拆分一个提交会撤消这个提交，然后多次地部分地暂存与提交直到完成你所需次数的提交。 例如，假设想要拆分三次提交的中间那次提交。 想要将它拆分为两次提交：第一个 “updated readme formatting”，第二个 “added blame” 来代替原来的 “updated readme formatting and added blame”。 可以通过修改 rebase -i 的脚本来做到这点，将要拆分的提交的指令修改为 “edit”：\n\npick f7f3f6d changed my name a bit\nedit 310154e updated readme formatting and added blame\npick a5f4a0d added cat-file\n\n\n1\n2\n3\n\n\n然后，当脚本带你进入到命令行时，重置那个提交，拿到被重置的修改，从中创建几次提交。 当保存并退出编辑器时，git 带你到列表中第一个提交的父提交，应用第一个提交（f7f3f6d）， 应用第二个提交（310154e），然后让你进入命令行。 那里，可以通过 git reset head^ 做一次针对那个提交的混合重置，实际上将会撤消那次提交并将修改的文件取消暂存。 现在可以暂存并提交文件直到有几个提交，然后当完成时运行 git rebase --continue：\n\n$ git reset head^\n$ git add readme\n$ git commit -m 'updated readme formatting'\n$ git add lib/simplegit.rb\n$ git commit -m 'added blame'\n$ git rebase --continue\n\n\n1\n2\n3\n4\n5\n6\n\n\ngit 在脚本中应用最后一次提交（a5f4a0d），历史记录看起来像这样：\n\n$ git log -4 --pretty=format:\"%h %s\"\n1c002dd added cat-file\n9b29157 added blame\n35cfb2b updated readme formatting\nf3cc40e changed my name a bit\n\n\n1\n2\n3\n4\n5\n\n\n再次强调，这些改动了所有在列表中的提交的 sha-1 校验和，所以要确保列表中的提交还没有推送到共享仓库中。\n\n\n# 核武器级选项：filter-branch\n\n有另一个历史改写的选项，如果想要通过脚本的方式改写大量提交的话可以使用它——例如，全局修改你的邮箱地址或从每一个提交中移除一个文件。 这个命令是 filter-branch，它可以改写历史中大量的提交，除非你的项目还没有公开并且其他人没有基于要改写的工作的提交做的工作，否则你不应当使用它。 然而，它可以很有用。 你将会学习到几个常用的用途，这样就得到了它适合使用地方的想法。\n\ncaution   git filter-branch 有很多陷阱，不再推荐使用它来重写历史。 请考虑使用\n          git-filter-repo，它是一个 python 脚本，相比大多数使用 filter-branch\n          的应用来说，它做得要更好。它的文档和源码可访问\n          https://github.com/newren/git-filter-repo 获取。\n          \n\n\n# 从每一个提交中移除一个文件\n\n这经常发生。 有人粗心地通过 git add . 提交了一个巨大的二进制文件，你想要从所有地方删除。 可能偶然地提交了一个包括一个密码的文件，然而你想要开源项目。 filter-branch 是一个可能会用来擦洗整个提交历史的工具。 为了从整个提交历史中移除一个叫做 passwords.txt 的文件，可以使用 --tree-filter 选项给 filter-branch：\n\n$ git filter-branch --tree-filter 'rm -f passwords.txt' head\nrewrite 6b9b3cf04e7c5686a9cb838c3f36a8cb6a0fc2bd (21/21)\nref 'refs/heads/master' was rewritten\n\n\n1\n2\n3\n\n\n--tree-filter 选项在检出项目的每一个提交后运行指定的命令然后重新提交结果。 在本例中，你从每一个快照中移除了一个叫作 passwords.txt 的文件，无论它是否存在。 如果想要移除所有偶然提交的编辑器备份文件，可以运行类似 git filter-branch --tree-filter 'rm -f *~' head 的命令。\n\n最后将可以看到 git 重写树与提交然后移动分支指针。 通常一个好的想法是在一个测试分支中做这件事，然后当你决定最终结果是真正想要的，可以硬重置 master 分支。 为了让 filter-branch 在所有分支上运行，可以给命令传递 --all 选项。\n\n\n# 使一个子目录做为新的根目录\n\n假设已经从另一个源代码控制系统中导入，并且有几个没意义的子目录（trunk、tags 等等）。 如果想要让 trunk 子目录作为每一个提交的新的项目根目录，filter-branch 也可以帮助你那么做：\n\n$ git filter-branch --subdirectory-filter trunk head\nrewrite 856f0bf61e41a27326cdae8f09fe708d679f596f (12/12)\nref 'refs/heads/master' was rewritten\n\n\n1\n2\n3\n\n\n现在新项目根目录是 trunk 子目录了。 git 会自动移除所有不影响子目录的提交。\n\n\n# 全局修改邮箱地址\n\n另一个常见的情形是在你开始工作时忘记运行 git config 来设置你的名字与邮箱地址， 或者你想要开源一个项目并且修改所有你的工作邮箱地址为你的个人邮箱地址。 任何情形下，你也可以通过 filter-branch 来一次性修改多个提交中的邮箱地址。 需要小心的是只修改你自己的邮箱地址，所以你使用 --commit-filter：\n\n$ git filter-branch --commit-filter '\n        if [ \"$git_author_email\" = \"schacon@localhost\" ];\n        then\n                git_author_name=\"scott chacon\";\n                git_author_email=\"schacon@example.com\";\n                git commit-tree \"$@\";\n        else\n                git commit-tree \"$@\";\n        fi' head\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n这会遍历并重写每一个提交来包含你的新邮箱地址。 因为提交包含了它们父提交的 sha-1 校验和，这个命令会修改你的历史中的每一个提交的 sha-1 校验和， 而不仅仅只是那些匹配邮箱地址的提交。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git工具-重置揭密",frontmatter:{title:"Git工具-重置揭密",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/d9e9c6/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/110.Git%E5%B7%A5%E5%85%B7-%E9%87%8D%E7%BD%AE%E6%8F%AD%E5%AF%86.html",relativePath:"《Git》学习笔记/20.文档笔记/110.Git工具-重置揭密.md",key:"v-3a58e5af",path:"/pages/d9e9c6/",headers:[{level:2,title:"三棵树",slug:"三棵树",normalizedTitle:"三棵树",charIndex:147},{level:3,title:"HEAD",slug:"head",normalizedTitle:"head",charIndex:348},{level:3,title:"索引",slug:"索引",normalizedTitle:"索引",charIndex:257},{level:3,title:"工作目录",slug:"工作目录",normalizedTitle:"工作目录",charIndex:1116},{level:2,title:"工作流程",slug:"工作流程",normalizedTitle:"工作流程",charIndex:1764},{level:2,title:"重置的作用",slug:"重置的作用",normalizedTitle:"重置的作用",charIndex:2573},{level:3,title:"第 1 步：移动 HEAD",slug:"第-1-步-移动-head",normalizedTitle:"第 1 步：移动 head",charIndex:2720},{level:3,title:"第 2 步：更新索引（--mixed）",slug:"第-2-步-更新索引-mixed",normalizedTitle:"第 2 步：更新索引（--mixed）",charIndex:3207},{level:3,title:"第 3 步：更新工作目录（--hard）",slug:"第-3-步-更新工作目录-hard",normalizedTitle:"第 3 步：更新工作目录（--hard）",charIndex:3507},{level:3,title:"回顾",slug:"回顾",normalizedTitle:"回顾",charIndex:3867},{level:2,title:"通过路径来重置",slug:"通过路径来重置",normalizedTitle:"通过路径来重置",charIndex:4002},{level:2,title:"压缩",slug:"压缩",normalizedTitle:"压缩",charIndex:4855},{level:2,title:"检出",slug:"检出",normalizedTitle:"检出",charIndex:1113},{level:3,title:"不带路径",slug:"不带路径",normalizedTitle:"不带路径",charIndex:5428},{level:3,title:"带路径",slug:"带路径",normalizedTitle:"带路径",charIndex:5429},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:6348}],headersStr:"三棵树 HEAD 索引 工作目录 工作流程 重置的作用 第 1 步：移动 HEAD 第 2 步：更新索引（--mixed） 第 3 步：更新工作目录（--hard） 回顾 通过路径来重置 压缩 检出 不带路径 带路径 总结",content:"# Git 工具 - 重置揭密\n\n在继续了解更专业的工具前，我们先探讨一下 Git 的 reset 和 checkout 命令。 在初遇的 Git 命令中，这两个是最让人困惑的。 它们能做很多事情，所以看起来我们很难真正地理解并恰当地运用它们。 针对这一点，我们先来做一个简单的比喻。\n\n\n# 三棵树\n\n理解 reset 和 checkout 的最简方法，就是以 Git 的思维框架（将其作为内容管理器）来管理三棵不同的树。 “树” 在我们这里的实际意思是 “文件的集合”，而不是指特定的数据结构。 （在某些情况下索引看起来并不像一棵树，不过我们现在的目的是用简单的方式思考它。）\n\nGit 作为一个系统，是以它的一般操作来管理并操纵这三棵树的：\n\n树                   用途\nHEAD                上一次提交的快照，下一次提交的父结点\nIndex               预期的下一次提交的快照\nWorking Directory   沙盒\n\n\n# HEAD\n\nHEAD 是当前分支引用的指针，它总是指向该分支上的最后一次提交。 这表示 HEAD 将是下一次提交的父结点。 通常，理解 HEAD 的最简方式，就是将它看做 该分支上的最后一次提交 的快照。\n\n其实，查看快照的样子很容易。 下例就显示了 HEAD 快照实际的目录列表，以及其中每个文件的 SHA-1 校验和：\n\n$ git cat-file -p HEAD\ntree cfda3bf379e4f8dba8717dee55aab78aef7f4daf\nauthor Scott Chacon  1301511835 -0700\ncommitter Scott Chacon  1301511835 -0700\n\ninitial commit\n\n$ git ls-tree -r HEAD\n100644 blob a906cb2a4a904a152...   README\n100644 blob 8f94139338f9404f2...   Rakefile\n040000 tree 99f1a6d12cb4b6f19...   lib\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nGit 的 cat-file 和 ls-tree 是底层命令，它们一般用于底层工作，在日常工作中并不使用。 不过它们能帮助我们了解到底发生了什么。\n\n\n# 索引\n\n索引是你的 预期的下一次提交。 我们也会将这个概念引用为 Git 的“暂存区”，这就是当你运行 git commit 时 Git 看起来的样子。\n\nGit 将上一次检出到工作目录中的所有文件填充到索引区，它们看起来就像最初被检出时的样子。 之后你会将其中一些文件替换为新版本，接着通过 git commit 将它们转换为树来用作新的提交。\n\n$ git ls-files -s\n100644 a906cb2a4a904a152e80877d4088654daad0c859 0\tREADME\n100644 8f94139338f9404f26296befa88755fc2598c289 0\tRakefile\n100644 47c6340d6459e05787f644c2447d2595f5d3a54b 0\tlib/simplegit.rb\n\n\n1\n2\n3\n4\n\n\n再说一次，我们在这里又用到了 git ls-files 这个幕后的命令，它会显示出索引当前的样子。\n\n确切来说，索引在技术上并非树结构，它其实是以扁平的清单实现的。不过对我们而言，把它当做树就够了。\n\n\n# 工作目录\n\n最后，你就有了自己的 工作目录（通常也叫 工作区）。 另外两棵树以一种高效但并不直观的方式，将它们的内容存储在 .git 文件夹中。 工作目录会将它们解包为实际的文件以便编辑。 你可以把工作目录当做 沙盒。在你将修改提交到暂存区并记录到历史之前，可以随意更改。\n\n$ tree\n.\n├── README\n├── Rakefile\n└── lib\n    └── simplegit.rb\n\n1 directory, 3 files\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 工作流程\n\n经典的 Git 工作流程是通过操纵这三个区域来以更加连续的状态记录项目快照的。\n\n\n\n让我们来可视化这个过程：假设我们进入到一个新目录，其中有一个文件。 我们称其为该文件的 v1 版本，将它标记为蓝色。 现在运行 git init，这会创建一个 Git 仓库，其中的 HEAD 引用指向未创建的 master 分支。\n\n\n\n此时，只有工作目录有内容。\n\n现在我们想要提交这个文件，所以用 git add 来获取工作目录中的内容，并将其复制到索引中。\n\n\n\n接着运行 git commit，它会取得索引中的内容并将它保存为一个永久的快照， 然后创建一个指向该快照的提交对象，最后更新 master 来指向本次提交。\n\n\n\n此时如果我们运行 git status，会发现没有任何改动，因为现在三棵树完全相同。\n\n现在我们想要对文件进行修改然后提交它。 我们将会经历同样的过程；首先在工作目录中修改文件。 我们称其为该文件的 v2 版本，并将它标记为红色。\n\n\n\n如果现在运行 git status，我们会看到文件显示在 “Changes not staged for commit” 下面并被标记为红色，因为该条目在索引与工作目录之间存在不同。 接着我们运行 git add 来将它暂存到索引中。\n\n\n\n此时，由于索引和 HEAD 不同，若运行 git status 的话就会看到 “Changes to be committed” 下的该文件变为绿色 ——也就是说，现在预期的下一次提交与上一次提交不同。 最后，我们运行 git commit 来完成提交。\n\n\n\n现在运行 git status 会没有输出，因为三棵树又变得相同了。\n\n切换分支或克隆的过程也类似。 当检出一个分支时，它会修改 HEAD 指向新的分支引用，将 索引 填充为该次提交的快照， 然后将 索引 的内容复制到 工作目录 中。\n\n\n# 重置的作用\n\n在以下情景中观察 reset 命令会更有意义。\n\n为了演示这些例子，假设我们再次修改了 file.txt 文件并第三次提交它。 现在的历史看起来是这样的：\n\n\n\n让我们跟着 reset 看看它都做了什么。 它以一种简单可预见的方式直接操纵这三棵树。 它做了三个基本操作。\n\n\n# 第 1 步：移动 HEAD\n\nreset 做的第一件事是移动 HEAD 的指向。 这与改变 HEAD 自身不同（checkout 所做的）；reset 移动 HEAD 指向的分支。 这意味着如果 HEAD 设置为 master 分支（例如，你正在 master 分支上）， 运行 git reset 9e5e6a4 将会使 master 指向 9e5e6a4。\n\n\n\n无论你调用了何种形式的带有一个提交的 reset，它首先都会尝试这样做。 使用 reset --soft，它将仅仅停在那儿。\n\n现在看一眼上图，理解一下发生的事情：它本质上是撤销了上一次 git commit 命令。 当你在运行 git commit 时，Git 会创建一个新的提交，并移动 HEAD 所指向的分支来使其指向该提交。 当你将它 reset 回 HEAD~（HEAD 的父结点）时，其实就是把该分支移动回原来的位置，而不会改变索引和工作目录。 现在你可以更新索引并再次运行 git commit 来完成 git commit --amend 所要做的事情了（见 修改最后一次提交）。\n\n\n# 第 2 步：更新索引（--mixed）\n\n注意，如果你现在运行 git status 的话，就会看到新的 HEAD 和以绿色标出的它和索引之间的区别。\n\n接下来，reset 会用 HEAD 指向的当前快照的内容来更新索引。\n\n\n\n如果指定 --mixed 选项，reset 将会在这时停止。 这也是默认行为，所以如果没有指定任何选项（在本例中只是 git reset HEAD~），这就是命令将会停止的地方。\n\n现在再看一眼上图，理解一下发生的事情：它依然会撤销一上次 提交，但还会 取消暂存 所有的东西。 于是，我们回滚到了所有 git add 和 git commit 的命令执行之前。\n\n\n# 第 3 步：更新工作目录（--hard）\n\nreset 要做的的第三件事情就是让工作目录看起来像索引。 如果使用 --hard 选项，它将会继续这一步。\n\n\n\n现在让我们回想一下刚才发生的事情。 你撤销了最后的提交、git add 和 git commit 命令 以及 工作目录中的所有工作。\n\n必须注意，--hard 标记是 reset 命令唯一的危险用法，它也是 Git 会真正地销毁数据的仅有的几个操作之一。 其他任何形式的 reset 调用都可以轻松撤消，但是 --hard 选项不能，因为它强制覆盖了工作目录中的文件。 在这种特殊情况下，我们的 Git 数据库中的一个提交内还留有该文件的 v3 版本， 我们可以通过 reflog 来找回它。但是若该文件还未提交，Git 仍会覆盖它从而导致无法恢复。\n\n\n# 回顾\n\nreset 命令会以特定的顺序重写这三棵树，在你指定以下选项时停止：\n\n 1. 移动 HEAD 分支的指向 （若指定了 --soft，则到此停止）\n 2. 使索引看起来像 HEAD （若未指定 --hard，则到此停止）\n 3. 使工作目录看起来像索引\n\n\n# 通过路径来重置\n\n前面讲述了 reset 基本形式的行为，不过你还可以给它提供一个作用路径。 若指定了一个路径，reset 将会跳过第 1 步，并且将它的作用范围限定为指定的文件或文件集合。 这样做自然有它的道理，因为 HEAD 只是一个指针，你无法让它同时指向两个提交中各自的一部分。 不过索引和工作目录 可以部分更新，所以重置会继续进行第 2、3 步。\n\n现在，假如我们运行 git reset file.txt （这其实是 git reset --mixed HEAD file.txt 的简写形式，因为你既没有指定一个提交的 SHA-1 或分支，也没有指定 --soft 或 --hard），它会：\n\n 1. 移动 HEAD 分支的指向 （已跳过）\n 2. 让索引看起来像 HEAD （到此处停止）\n\n所以它本质上只是将 file.txt 从 HEAD 复制到索引中。\n\n\n\n它还有 取消暂存文件 的实际效果。 如果我们查看该命令的示意图，然后再想想 git add 所做的事，就会发现它们正好相反。\n\n\n\n这就是为什么 git status 命令的输出会建议运行此命令来取消暂存一个文件。 （查看 取消暂存的文件 来了解更多。）\n\n我们可以不让 Git 从 HEAD 拉取数据，而是通过具体指定一个提交来拉取该文件的对应版本。 我们只需运行类似于 git reset eb43bf file.txt 的命令即可。\n\n\n\n它其实做了同样的事情，也就是把工作目录中的文件恢复到 v1 版本，运行 git add 添加它， 然后再将它恢复到 v3 版本（只是不用真的过一遍这些步骤）。 如果我们现在运行 git commit，它就会记录一条“将该文件恢复到 v1 版本”的更改， 尽管我们并未在工作目录中真正地再次拥有它。\n\n还有一点同 git add 一样，就是 reset 命令也可以接受一个 --patch 选项来一块一块地取消暂存的内容。 这样你就可以根据选择来取消暂存或恢复内容了。\n\n\n# 压缩\n\n我们来看看如何利用这种新的功能来做一些有趣的事情——压缩提交。\n\n假设你的一系列提交信息中有 “oops.”“WIP” 和 “forgot this file”， 聪明的你就能使用 reset 来轻松快速地将它们压缩成单个提交，也显出你的聪明。 （压缩提交 展示了另一种方式，不过在本例中用 reset 更简单。）\n\n假设你有一个项目，第一次提交中有一个文件，第二次提交增加了一个新的文件并修改了第一个文件，第三次提交再次修改了第一个文件。 由于第二次提交是一个未完成的工作，因此你想要压缩它。\n\n\n\n那么可以运行 git reset --soft HEAD~2 来将 HEAD 分支移动到一个旧一点的提交上（即你想要保留的最近的提交）：\n\n\n\n然后只需再次运行 git commit：\n\n\n\n现在你可以查看可到达的历史，即将会推送的历史，现在看起来有个 v1 版 file-a.txt 的提交， 接着第二个提交将 file-a.txt 修改成了 v3 版并增加了 file-b.txt。 包含 v2 版本的文件已经不在历史中了。\n\n\n# 检出\n\n最后，你大概还想知道 checkout 和 reset 之间的区别。 和 reset 一样，checkout 也操纵三棵树，不过它有一点不同，这取决于你是否传给该命令一个文件路径。\n\n\n# 不带路径\n\n运行 git checkout [branch] 与运行 git reset --hard [branch] 非常相似，它会更新所有三棵树使其看起来像 [branch]，不过有两点重要的区别。\n\n首先不同于 reset --hard，checkout 对工作目录是安全的，它会通过检查来确保不会将已更改的文件弄丢。 其实它还更聪明一些。它会在工作目录中先试着简单合并一下，这样所有_还未修改过的_文件都会被更新。 而 reset --hard 则会不做检查就全面地替换所有东西。\n\n第二个重要的区别是 checkout 如何更新 HEAD。 reset 会移动 HEAD 分支的指向，而 checkout 只会移动 HEAD 自身来指向另一个分支。\n\n例如，假设我们有 master 和 develop 分支，它们分别指向不同的提交；我们现在在 develop 上（所以 HEAD 指向它）。 如果我们运行 git reset master，那么 develop 自身现在会和 master 指向同一个提交。 而如果我们运行 git checkout master 的话，develop 不会移动，HEAD 自身会移动。 现在 HEAD 将会指向 master。\n\n所以，虽然在这两种情况下我们都移动 HEAD 使其指向了提交 A，但_做法_是非常不同的。 reset 会移动 HEAD 分支的指向，而 checkout 则移动 HEAD 自身。\n\n\n\n\n# 带路径\n\n运行 checkout 的另一种方式就是指定一个文件路径，这会像 reset 一样不会移动 HEAD。 它就像 git reset [branch] file 那样用该次提交中的那个文件来更新索引，但是它也会覆盖工作目录中对应的文件。 它就像是 git reset --hard [branch] file（如果 reset 允许你这样运行的话）， 这样对工作目录并不安全，它也不会移动 HEAD。\n\n此外，同 git reset 和 git add 一样，checkout 也接受一个 --patch 选项，允许你根据选择一块一块地恢复文件内容。\n\n\n# 总结\n\n希望你现在熟悉并理解了 reset 命令，不过关于它和 checkout 之间的区别，你可能还是会有点困惑，毕竟不太可能记住不同调用的所有规则。\n\n下面的速查表列出了命令对树的影响。 “HEAD” 一列中的 “REF” 表示该命令移动了 HEAD 指向的分支引用，而 “HEAD” 则表示只移动了 HEAD 自身。 特别注意 WD Safe? 一列——如果它标记为 NO，那么运行该命令之前请考虑一下。\n\n                            HEAD   INDEX   WORKDIR   WD SAFE?\nCommit Level                                         \nreset --soft [commit]       REF    NO      NO        YES\nreset [commit]              REF    YES     NO        YES\nreset --hard [commit]       REF    YES     YES       NO\ncheckout <commit>           HEAD   YES     YES       YES\nFile Level                                           \nreset [commit] <paths>      NO     YES     NO        YES\ncheckout [commit] <paths>   NO     YES     YES       NO",normalizedContent:"# git 工具 - 重置揭密\n\n在继续了解更专业的工具前，我们先探讨一下 git 的 reset 和 checkout 命令。 在初遇的 git 命令中，这两个是最让人困惑的。 它们能做很多事情，所以看起来我们很难真正地理解并恰当地运用它们。 针对这一点，我们先来做一个简单的比喻。\n\n\n# 三棵树\n\n理解 reset 和 checkout 的最简方法，就是以 git 的思维框架（将其作为内容管理器）来管理三棵不同的树。 “树” 在我们这里的实际意思是 “文件的集合”，而不是指特定的数据结构。 （在某些情况下索引看起来并不像一棵树，不过我们现在的目的是用简单的方式思考它。）\n\ngit 作为一个系统，是以它的一般操作来管理并操纵这三棵树的：\n\n树                   用途\nhead                上一次提交的快照，下一次提交的父结点\nindex               预期的下一次提交的快照\nworking directory   沙盒\n\n\n# head\n\nhead 是当前分支引用的指针，它总是指向该分支上的最后一次提交。 这表示 head 将是下一次提交的父结点。 通常，理解 head 的最简方式，就是将它看做 该分支上的最后一次提交 的快照。\n\n其实，查看快照的样子很容易。 下例就显示了 head 快照实际的目录列表，以及其中每个文件的 sha-1 校验和：\n\n$ git cat-file -p head\ntree cfda3bf379e4f8dba8717dee55aab78aef7f4daf\nauthor scott chacon  1301511835 -0700\ncommitter scott chacon  1301511835 -0700\n\ninitial commit\n\n$ git ls-tree -r head\n100644 blob a906cb2a4a904a152...   readme\n100644 blob 8f94139338f9404f2...   rakefile\n040000 tree 99f1a6d12cb4b6f19...   lib\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ngit 的 cat-file 和 ls-tree 是底层命令，它们一般用于底层工作，在日常工作中并不使用。 不过它们能帮助我们了解到底发生了什么。\n\n\n# 索引\n\n索引是你的 预期的下一次提交。 我们也会将这个概念引用为 git 的“暂存区”，这就是当你运行 git commit 时 git 看起来的样子。\n\ngit 将上一次检出到工作目录中的所有文件填充到索引区，它们看起来就像最初被检出时的样子。 之后你会将其中一些文件替换为新版本，接着通过 git commit 将它们转换为树来用作新的提交。\n\n$ git ls-files -s\n100644 a906cb2a4a904a152e80877d4088654daad0c859 0\treadme\n100644 8f94139338f9404f26296befa88755fc2598c289 0\trakefile\n100644 47c6340d6459e05787f644c2447d2595f5d3a54b 0\tlib/simplegit.rb\n\n\n1\n2\n3\n4\n\n\n再说一次，我们在这里又用到了 git ls-files 这个幕后的命令，它会显示出索引当前的样子。\n\n确切来说，索引在技术上并非树结构，它其实是以扁平的清单实现的。不过对我们而言，把它当做树就够了。\n\n\n# 工作目录\n\n最后，你就有了自己的 工作目录（通常也叫 工作区）。 另外两棵树以一种高效但并不直观的方式，将它们的内容存储在 .git 文件夹中。 工作目录会将它们解包为实际的文件以便编辑。 你可以把工作目录当做 沙盒。在你将修改提交到暂存区并记录到历史之前，可以随意更改。\n\n$ tree\n.\n├── readme\n├── rakefile\n└── lib\n    └── simplegit.rb\n\n1 directory, 3 files\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 工作流程\n\n经典的 git 工作流程是通过操纵这三个区域来以更加连续的状态记录项目快照的。\n\n\n\n让我们来可视化这个过程：假设我们进入到一个新目录，其中有一个文件。 我们称其为该文件的 v1 版本，将它标记为蓝色。 现在运行 git init，这会创建一个 git 仓库，其中的 head 引用指向未创建的 master 分支。\n\n\n\n此时，只有工作目录有内容。\n\n现在我们想要提交这个文件，所以用 git add 来获取工作目录中的内容，并将其复制到索引中。\n\n\n\n接着运行 git commit，它会取得索引中的内容并将它保存为一个永久的快照， 然后创建一个指向该快照的提交对象，最后更新 master 来指向本次提交。\n\n\n\n此时如果我们运行 git status，会发现没有任何改动，因为现在三棵树完全相同。\n\n现在我们想要对文件进行修改然后提交它。 我们将会经历同样的过程；首先在工作目录中修改文件。 我们称其为该文件的 v2 版本，并将它标记为红色。\n\n\n\n如果现在运行 git status，我们会看到文件显示在 “changes not staged for commit” 下面并被标记为红色，因为该条目在索引与工作目录之间存在不同。 接着我们运行 git add 来将它暂存到索引中。\n\n\n\n此时，由于索引和 head 不同，若运行 git status 的话就会看到 “changes to be committed” 下的该文件变为绿色 ——也就是说，现在预期的下一次提交与上一次提交不同。 最后，我们运行 git commit 来完成提交。\n\n\n\n现在运行 git status 会没有输出，因为三棵树又变得相同了。\n\n切换分支或克隆的过程也类似。 当检出一个分支时，它会修改 head 指向新的分支引用，将 索引 填充为该次提交的快照， 然后将 索引 的内容复制到 工作目录 中。\n\n\n# 重置的作用\n\n在以下情景中观察 reset 命令会更有意义。\n\n为了演示这些例子，假设我们再次修改了 file.txt 文件并第三次提交它。 现在的历史看起来是这样的：\n\n\n\n让我们跟着 reset 看看它都做了什么。 它以一种简单可预见的方式直接操纵这三棵树。 它做了三个基本操作。\n\n\n# 第 1 步：移动 head\n\nreset 做的第一件事是移动 head 的指向。 这与改变 head 自身不同（checkout 所做的）；reset 移动 head 指向的分支。 这意味着如果 head 设置为 master 分支（例如，你正在 master 分支上）， 运行 git reset 9e5e6a4 将会使 master 指向 9e5e6a4。\n\n\n\n无论你调用了何种形式的带有一个提交的 reset，它首先都会尝试这样做。 使用 reset --soft，它将仅仅停在那儿。\n\n现在看一眼上图，理解一下发生的事情：它本质上是撤销了上一次 git commit 命令。 当你在运行 git commit 时，git 会创建一个新的提交，并移动 head 所指向的分支来使其指向该提交。 当你将它 reset 回 head~（head 的父结点）时，其实就是把该分支移动回原来的位置，而不会改变索引和工作目录。 现在你可以更新索引并再次运行 git commit 来完成 git commit --amend 所要做的事情了（见 修改最后一次提交）。\n\n\n# 第 2 步：更新索引（--mixed）\n\n注意，如果你现在运行 git status 的话，就会看到新的 head 和以绿色标出的它和索引之间的区别。\n\n接下来，reset 会用 head 指向的当前快照的内容来更新索引。\n\n\n\n如果指定 --mixed 选项，reset 将会在这时停止。 这也是默认行为，所以如果没有指定任何选项（在本例中只是 git reset head~），这就是命令将会停止的地方。\n\n现在再看一眼上图，理解一下发生的事情：它依然会撤销一上次 提交，但还会 取消暂存 所有的东西。 于是，我们回滚到了所有 git add 和 git commit 的命令执行之前。\n\n\n# 第 3 步：更新工作目录（--hard）\n\nreset 要做的的第三件事情就是让工作目录看起来像索引。 如果使用 --hard 选项，它将会继续这一步。\n\n\n\n现在让我们回想一下刚才发生的事情。 你撤销了最后的提交、git add 和 git commit 命令 以及 工作目录中的所有工作。\n\n必须注意，--hard 标记是 reset 命令唯一的危险用法，它也是 git 会真正地销毁数据的仅有的几个操作之一。 其他任何形式的 reset 调用都可以轻松撤消，但是 --hard 选项不能，因为它强制覆盖了工作目录中的文件。 在这种特殊情况下，我们的 git 数据库中的一个提交内还留有该文件的 v3 版本， 我们可以通过 reflog 来找回它。但是若该文件还未提交，git 仍会覆盖它从而导致无法恢复。\n\n\n# 回顾\n\nreset 命令会以特定的顺序重写这三棵树，在你指定以下选项时停止：\n\n 1. 移动 head 分支的指向 （若指定了 --soft，则到此停止）\n 2. 使索引看起来像 head （若未指定 --hard，则到此停止）\n 3. 使工作目录看起来像索引\n\n\n# 通过路径来重置\n\n前面讲述了 reset 基本形式的行为，不过你还可以给它提供一个作用路径。 若指定了一个路径，reset 将会跳过第 1 步，并且将它的作用范围限定为指定的文件或文件集合。 这样做自然有它的道理，因为 head 只是一个指针，你无法让它同时指向两个提交中各自的一部分。 不过索引和工作目录 可以部分更新，所以重置会继续进行第 2、3 步。\n\n现在，假如我们运行 git reset file.txt （这其实是 git reset --mixed head file.txt 的简写形式，因为你既没有指定一个提交的 sha-1 或分支，也没有指定 --soft 或 --hard），它会：\n\n 1. 移动 head 分支的指向 （已跳过）\n 2. 让索引看起来像 head （到此处停止）\n\n所以它本质上只是将 file.txt 从 head 复制到索引中。\n\n\n\n它还有 取消暂存文件 的实际效果。 如果我们查看该命令的示意图，然后再想想 git add 所做的事，就会发现它们正好相反。\n\n\n\n这就是为什么 git status 命令的输出会建议运行此命令来取消暂存一个文件。 （查看 取消暂存的文件 来了解更多。）\n\n我们可以不让 git 从 head 拉取数据，而是通过具体指定一个提交来拉取该文件的对应版本。 我们只需运行类似于 git reset eb43bf file.txt 的命令即可。\n\n\n\n它其实做了同样的事情，也就是把工作目录中的文件恢复到 v1 版本，运行 git add 添加它， 然后再将它恢复到 v3 版本（只是不用真的过一遍这些步骤）。 如果我们现在运行 git commit，它就会记录一条“将该文件恢复到 v1 版本”的更改， 尽管我们并未在工作目录中真正地再次拥有它。\n\n还有一点同 git add 一样，就是 reset 命令也可以接受一个 --patch 选项来一块一块地取消暂存的内容。 这样你就可以根据选择来取消暂存或恢复内容了。\n\n\n# 压缩\n\n我们来看看如何利用这种新的功能来做一些有趣的事情——压缩提交。\n\n假设你的一系列提交信息中有 “oops.”“wip” 和 “forgot this file”， 聪明的你就能使用 reset 来轻松快速地将它们压缩成单个提交，也显出你的聪明。 （压缩提交 展示了另一种方式，不过在本例中用 reset 更简单。）\n\n假设你有一个项目，第一次提交中有一个文件，第二次提交增加了一个新的文件并修改了第一个文件，第三次提交再次修改了第一个文件。 由于第二次提交是一个未完成的工作，因此你想要压缩它。\n\n\n\n那么可以运行 git reset --soft head~2 来将 head 分支移动到一个旧一点的提交上（即你想要保留的最近的提交）：\n\n\n\n然后只需再次运行 git commit：\n\n\n\n现在你可以查看可到达的历史，即将会推送的历史，现在看起来有个 v1 版 file-a.txt 的提交， 接着第二个提交将 file-a.txt 修改成了 v3 版并增加了 file-b.txt。 包含 v2 版本的文件已经不在历史中了。\n\n\n# 检出\n\n最后，你大概还想知道 checkout 和 reset 之间的区别。 和 reset 一样，checkout 也操纵三棵树，不过它有一点不同，这取决于你是否传给该命令一个文件路径。\n\n\n# 不带路径\n\n运行 git checkout [branch] 与运行 git reset --hard [branch] 非常相似，它会更新所有三棵树使其看起来像 [branch]，不过有两点重要的区别。\n\n首先不同于 reset --hard，checkout 对工作目录是安全的，它会通过检查来确保不会将已更改的文件弄丢。 其实它还更聪明一些。它会在工作目录中先试着简单合并一下，这样所有_还未修改过的_文件都会被更新。 而 reset --hard 则会不做检查就全面地替换所有东西。\n\n第二个重要的区别是 checkout 如何更新 head。 reset 会移动 head 分支的指向，而 checkout 只会移动 head 自身来指向另一个分支。\n\n例如，假设我们有 master 和 develop 分支，它们分别指向不同的提交；我们现在在 develop 上（所以 head 指向它）。 如果我们运行 git reset master，那么 develop 自身现在会和 master 指向同一个提交。 而如果我们运行 git checkout master 的话，develop 不会移动，head 自身会移动。 现在 head 将会指向 master。\n\n所以，虽然在这两种情况下我们都移动 head 使其指向了提交 a，但_做法_是非常不同的。 reset 会移动 head 分支的指向，而 checkout 则移动 head 自身。\n\n\n\n\n# 带路径\n\n运行 checkout 的另一种方式就是指定一个文件路径，这会像 reset 一样不会移动 head。 它就像 git reset [branch] file 那样用该次提交中的那个文件来更新索引，但是它也会覆盖工作目录中对应的文件。 它就像是 git reset --hard [branch] file（如果 reset 允许你这样运行的话）， 这样对工作目录并不安全，它也不会移动 head。\n\n此外，同 git reset 和 git add 一样，checkout 也接受一个 --patch 选项，允许你根据选择一块一块地恢复文件内容。\n\n\n# 总结\n\n希望你现在熟悉并理解了 reset 命令，不过关于它和 checkout 之间的区别，你可能还是会有点困惑，毕竟不太可能记住不同调用的所有规则。\n\n下面的速查表列出了命令对树的影响。 “head” 一列中的 “ref” 表示该命令移动了 head 指向的分支引用，而 “head” 则表示只移动了 head 自身。 特别注意 wd safe? 一列——如果它标记为 no，那么运行该命令之前请考虑一下。\n\n                            head   index   workdir   wd safe?\ncommit level                                         \nreset --soft [commit]       ref    no      no        yes\nreset [commit]              ref    yes     no        yes\nreset --hard [commit]       ref    yes     yes       no\ncheckout <commit>           head   yes     yes       yes\nfile level                                           \nreset [commit] <paths>      no     yes     no        yes\ncheckout [commit] <paths>   no     yes     yes       no",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支-分支原理",frontmatter:{title:"Git分支-分支原理",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/4bef1a/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/20.Git%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E5%8E%9F%E7%90%86.html",relativePath:"《Git》学习笔记/20.文档笔记/20.Git分支-分支原理.md",key:"v-1191ec14",path:"/pages/4bef1a/",headers:[{level:3,title:"首次提交",slug:"首次提交",normalizedTitle:"首次提交",charIndex:130},{level:3,title:"再次提交",slug:"再次提交",normalizedTitle:"再次提交",charIndex:823},{level:3,title:"Git 的分支",slug:"git-的分支",normalizedTitle:"git 的分支",charIndex:896},{level:3,title:"创建分支",slug:"创建分支",normalizedTitle:"创建分支",charIndex:1088},{level:3,title:"当前分支的指针",slug:"当前分支的指针",normalizedTitle:"当前分支的指针",charIndex:1252},{level:3,title:"查看当前所在分支",slug:"查看当前所在分支",normalizedTitle:"查看当前所在分支",charIndex:1432},{level:3,title:"分支切换",slug:"分支切换",normalizedTitle:"分支切换",charIndex:1771},{level:3,title:"创建分支同时切换",slug:"创建分支同时切换",normalizedTitle:"创建分支同时切换",charIndex:3223}],headersStr:"首次提交 再次提交 Git 的分支 创建分支 当前分支的指针 查看当前所在分支 分支切换 创建分支同时切换",content:"# Git分支-分支原理\n\nGit 处理分支的方式可谓是难以置信的轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷。 与许多其它版本控制系统不同，Git 鼓励在工作流程中频繁地使用分支与合并，哪怕一天之内进行许多次。\n\n\n# 首次提交\n\n在进行提交操作时，Git 会保存一个提交对象（commit object）。\n\n假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中 （Git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：\n\n$ git add README test.rb LICENSE\n$ git commit -m 'The initial commit of my project'\n\n\n1\n2\n\n\n当使用 git commit 进行提交操作时，Git 会先计算每一个子目录（本例中只有项目根目录）的校验和， 然后在 Git 仓库中这些校验和保存为树对象。随后，Git 便会创建一个提交对象， 它除了包含上面提到的那些信息外，还包含指向这个树对象（项目根目录）的指针。 如此一来，Git 就可以在需要的时候重现此次保存的快照。\n\n现在，Git 仓库中有五个对象：三个 blob 对象（保存着文件快照）、一个 树对象 （记录着目录结构和 blob 对象索引）以及一个 提交对象（包含着指向前述树对象的指针和所有提交信息）。\n\n\n\n图1. 首次提交对象及其树结构 ▲\n\n# 小结：\n\n 1. git add 加入暂存操作，会为每个文件创建计算校验和，以及每个文件对应的文件快照（blob对象）。\n\n 2. git commit 提交操作，计算子目录或跟目录的校验和 保存为树对象。随后，创建一个提交对象，包含着指向树对象的指针和所有提交信息。\n\n\n# 再次提交\n\n做些修改后再次提交，那么这次产生的提交对象会包含一个指向上次提交对象（父对象）的指针。\n\n\n\n图2. 提交对象及其父对象 ▲\n\n\n# Git 的分支\n\nGit 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 master 分支指针会在每次提交时自动向前移动。\n\n> Git 的 master 分支并不是一个特殊分支。 它就跟其它分支完全没有区别。\n\n\n\n图3. 分支及其提交历史 ▲\n\n\n# 创建分支\n\nGit 是怎么创建新分支的呢？ 很简单，它只是为你创建了一个可以移动的新的指针。 比如，创建一个 testing 分支， 你需要使用 git branch 命令：\n\n$ git branch testing\n\n\n1\n\n\n这会在当前所在的提交对象上创建一个指针。\n\n\n\n图4. 两个指向相同提交历史的分支 ▲\n\n\n# 当前分支的指针\n\nGit 是怎么知道当前在哪一个分支上呢？ 很简单，它有一个名为 HEAD 的特殊指针，指向当前所在的本地分支（译注：将 HEAD 想象为当前分支的别名）。 在本例中，你仍然在 master 分支上。 因为 git branch 命令仅仅 创建 一个新分支，并不会自动切换到新分支中去。\n\n\n\n图5. HEAD 指向当前所在的分支 ▲\n\n\n# 查看当前所在分支\n\n你可以简单地使用 git log 命令查看各个分支当前所指的对象。 提供这一功能的参数是 --decorate。\n\n$ git log --oneline --decorate\nf30ab (HEAD -> master, testing) add feature # f30ab提交对象 (HEAD当前所在分支 -> master分支，testing 分支)\n34ac2 Fixed bug # 34ac2 提交对象\n98ca9 The initial commit of my project # 98ca9 提交对象\n\n\n1\n2\n3\n4\n\n\n正如你所见，当前 master 和 testing 分支均指向校验和以 f30ab 开头的提交对象。\n\n\n# 分支切换\n\n$ git checkout testing  # git checkout <分支名>\n\n\n1\n\n\n这样 HEAD 就指向 testing 分支了。\n\n\n\n图6. HEAD 指向当前所在的分支 ▲\n\n那么，这样的实现方式会给我们带来什么好处呢？ 现在不妨再提交一次：\n\n$ vim test.rb\n$ git commit -a -m 'made a change'\n\n\n1\n2\n\n\n\n\n图7. HEAD 分支随着提交操作自动向前移动 ▲\n\n如图所示，你的 testing 分支向前移动了，但是 master 分支却没有，它仍然指向运行 git checkout 时所指的对象。 这就有意思了，现在我们切换回 master 分支看看：\n\n$ git checkout master\n\n\n1\n\n\n\n\n图8. 检出时 HEAD 随之移动 ▲\n\n这条命令做了两件事。 一是使 HEAD 指回 master 分支，二是将工作目录恢复成 master 分支所指向的快照内容。 也就是说，你现在做修改的话，项目将始于一个较旧的版本。 本质上来讲，这就是忽略 testing 分支所做的修改，以便于向另一个方向进行开发。\n\n我们不妨再稍微做些修改并提交：\n\n$ vim test.rb\n$ git commit -a -m 'made other changes'\n\n\n1\n2\n\n\n现在，这个项目的提交历史已经产生了分叉（参见 项目分叉历史）。 因为刚才你创建了一个新分支，并切换过去进行了一些工作，随后又切换回 master 分支进行了另外一些工作。 上述两次改动针对的是不同分支：你可以在不同分支间不断地来回切换和工作，并在时机成熟时将它们合并起来。 而所有这些工作，你需要的命令只有 branch、checkout 和 commit。\n\n\n\n图9. 项目分叉历史 ▲\n\n你可以简单地使用 git log 命令查看分叉历史。 运行 git log --oneline --decorate --graph --all ，它会输出你的提交历史、各个分支的指向以及项目的分支分叉情况。\n\n$ git log --oneline --decorate --graph --all\n* c2b9e (HEAD, master) made other changes\n| * 87ab2 (testing) made a change\n|/\n* f30ab add feature\n* 34ac2 fixed bug\n* 98ca9 initial commit of my project\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n由于 Git 的分支实质上仅是包含所指对象校验和（长度为 40 的 SHA-1 值字符串）的文件，所以它的创建和销毁都异常高效。 创建一个新分支就相当于往一个文件中写入 41 个字节（40 个字符和 1 个换行符），如此的简单能不快吗？\n\n这与过去大多数版本控制系统形成了鲜明的对比，它们在创建分支时，将所有的项目文件都复制一遍，并保存到一个特定的目录。 完成这样繁琐的过程通常需要好几秒钟，有时甚至需要好几分钟。所需时间的长短，完全取决于项目的规模。 而在 Git 中，任何规模的项目都能在瞬间创建新分支。 同时，由于每次提交都会记录父对象，所以寻找恰当的合并基础（译注：即共同祖先）也是同样的简单和高效。 这些高效的特性使得 Git 鼓励开发人员频繁地创建和使用分支。\n\n\n# 创建分支同时切换\n\n通常我们会在创建一个新分支后立即切换过去，可以使用如下命令：\n\ngit checkout -b <newbranchname>\n\n\n1\n",normalizedContent:"# git分支-分支原理\n\ngit 处理分支的方式可谓是难以置信的轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷。 与许多其它版本控制系统不同，git 鼓励在工作流程中频繁地使用分支与合并，哪怕一天之内进行许多次。\n\n\n# 首次提交\n\n在进行提交操作时，git 会保存一个提交对象（commit object）。\n\n假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用 sha-1 哈希算法），然后会把当前版本的文件快照保存到 git 仓库中 （git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：\n\n$ git add readme test.rb license\n$ git commit -m 'the initial commit of my project'\n\n\n1\n2\n\n\n当使用 git commit 进行提交操作时，git 会先计算每一个子目录（本例中只有项目根目录）的校验和， 然后在 git 仓库中这些校验和保存为树对象。随后，git 便会创建一个提交对象， 它除了包含上面提到的那些信息外，还包含指向这个树对象（项目根目录）的指针。 如此一来，git 就可以在需要的时候重现此次保存的快照。\n\n现在，git 仓库中有五个对象：三个 blob 对象（保存着文件快照）、一个 树对象 （记录着目录结构和 blob 对象索引）以及一个 提交对象（包含着指向前述树对象的指针和所有提交信息）。\n\n\n\n图1. 首次提交对象及其树结构 ▲\n\n# 小结：\n\n 1. git add 加入暂存操作，会为每个文件创建计算校验和，以及每个文件对应的文件快照（blob对象）。\n\n 2. git commit 提交操作，计算子目录或跟目录的校验和 保存为树对象。随后，创建一个提交对象，包含着指向树对象的指针和所有提交信息。\n\n\n# 再次提交\n\n做些修改后再次提交，那么这次产生的提交对象会包含一个指向上次提交对象（父对象）的指针。\n\n\n\n图2. 提交对象及其父对象 ▲\n\n\n# git 的分支\n\ngit 的分支，其实本质上仅仅是指向提交对象的可变指针。 git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 master 分支指针会在每次提交时自动向前移动。\n\n> git 的 master 分支并不是一个特殊分支。 它就跟其它分支完全没有区别。\n\n\n\n图3. 分支及其提交历史 ▲\n\n\n# 创建分支\n\ngit 是怎么创建新分支的呢？ 很简单，它只是为你创建了一个可以移动的新的指针。 比如，创建一个 testing 分支， 你需要使用 git branch 命令：\n\n$ git branch testing\n\n\n1\n\n\n这会在当前所在的提交对象上创建一个指针。\n\n\n\n图4. 两个指向相同提交历史的分支 ▲\n\n\n# 当前分支的指针\n\ngit 是怎么知道当前在哪一个分支上呢？ 很简单，它有一个名为 head 的特殊指针，指向当前所在的本地分支（译注：将 head 想象为当前分支的别名）。 在本例中，你仍然在 master 分支上。 因为 git branch 命令仅仅 创建 一个新分支，并不会自动切换到新分支中去。\n\n\n\n图5. head 指向当前所在的分支 ▲\n\n\n# 查看当前所在分支\n\n你可以简单地使用 git log 命令查看各个分支当前所指的对象。 提供这一功能的参数是 --decorate。\n\n$ git log --oneline --decorate\nf30ab (head -> master, testing) add feature # f30ab提交对象 (head当前所在分支 -> master分支，testing 分支)\n34ac2 fixed bug # 34ac2 提交对象\n98ca9 the initial commit of my project # 98ca9 提交对象\n\n\n1\n2\n3\n4\n\n\n正如你所见，当前 master 和 testing 分支均指向校验和以 f30ab 开头的提交对象。\n\n\n# 分支切换\n\n$ git checkout testing  # git checkout <分支名>\n\n\n1\n\n\n这样 head 就指向 testing 分支了。\n\n\n\n图6. head 指向当前所在的分支 ▲\n\n那么，这样的实现方式会给我们带来什么好处呢？ 现在不妨再提交一次：\n\n$ vim test.rb\n$ git commit -a -m 'made a change'\n\n\n1\n2\n\n\n\n\n图7. head 分支随着提交操作自动向前移动 ▲\n\n如图所示，你的 testing 分支向前移动了，但是 master 分支却没有，它仍然指向运行 git checkout 时所指的对象。 这就有意思了，现在我们切换回 master 分支看看：\n\n$ git checkout master\n\n\n1\n\n\n\n\n图8. 检出时 head 随之移动 ▲\n\n这条命令做了两件事。 一是使 head 指回 master 分支，二是将工作目录恢复成 master 分支所指向的快照内容。 也就是说，你现在做修改的话，项目将始于一个较旧的版本。 本质上来讲，这就是忽略 testing 分支所做的修改，以便于向另一个方向进行开发。\n\n我们不妨再稍微做些修改并提交：\n\n$ vim test.rb\n$ git commit -a -m 'made other changes'\n\n\n1\n2\n\n\n现在，这个项目的提交历史已经产生了分叉（参见 项目分叉历史）。 因为刚才你创建了一个新分支，并切换过去进行了一些工作，随后又切换回 master 分支进行了另外一些工作。 上述两次改动针对的是不同分支：你可以在不同分支间不断地来回切换和工作，并在时机成熟时将它们合并起来。 而所有这些工作，你需要的命令只有 branch、checkout 和 commit。\n\n\n\n图9. 项目分叉历史 ▲\n\n你可以简单地使用 git log 命令查看分叉历史。 运行 git log --oneline --decorate --graph --all ，它会输出你的提交历史、各个分支的指向以及项目的分支分叉情况。\n\n$ git log --oneline --decorate --graph --all\n* c2b9e (head, master) made other changes\n| * 87ab2 (testing) made a change\n|/\n* f30ab add feature\n* 34ac2 fixed bug\n* 98ca9 initial commit of my project\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n由于 git 的分支实质上仅是包含所指对象校验和（长度为 40 的 sha-1 值字符串）的文件，所以它的创建和销毁都异常高效。 创建一个新分支就相当于往一个文件中写入 41 个字节（40 个字符和 1 个换行符），如此的简单能不快吗？\n\n这与过去大多数版本控制系统形成了鲜明的对比，它们在创建分支时，将所有的项目文件都复制一遍，并保存到一个特定的目录。 完成这样繁琐的过程通常需要好几秒钟，有时甚至需要好几分钟。所需时间的长短，完全取决于项目的规模。 而在 git 中，任何规模的项目都能在瞬间创建新分支。 同时，由于每次提交都会记录父对象，所以寻找恰当的合并基础（译注：即共同祖先）也是同样的简单和高效。 这些高效的特性使得 git 鼓励开发人员频繁地创建和使用分支。\n\n\n# 创建分支同时切换\n\n通常我们会在创建一个新分支后立即切换过去，可以使用如下命令：\n\ngit checkout -b <newbranchname>\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支的新建与合并-分支操作",frontmatter:{title:"Git分支的新建与合并-分支操作",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/ea5a8c/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/30.Git%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6-%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C.html",relativePath:"《Git》学习笔记/20.文档笔记/30.Git分支的新建与合并-分支操作.md",key:"v-4067c8ac",path:"/pages/ea5a8c/",headers:[{level:3,title:"创建分支并切换",slug:"创建分支并切换",normalizedTitle:"创建分支并切换",charIndex:45},{level:3,title:"切换分支",slug:"切换分支",normalizedTitle:"切换分支",charIndex:187},{level:3,title:"合并分支",slug:"合并分支",normalizedTitle:"合并分支",charIndex:575},{level:3,title:"删除分支",slug:"删除分支",normalizedTitle:"删除分支",charIndex:666},{level:3,title:"多次提交之后合并分支",slug:"多次提交之后合并分支",normalizedTitle:"多次提交之后合并分支",charIndex:781},{level:3,title:"遇到冲突时的分支合并",slug:"遇到冲突时的分支合并",normalizedTitle:"遇到冲突时的分支合并",charIndex:1123}],headersStr:"创建分支并切换 切换分支 合并分支 删除分支 多次提交之后合并分支 遇到冲突时的分支合并",content:"# Git分支的新建与合并-分支操作\n\n文档：Git 分支 - 分支的新建与合并\n\n\n# 创建分支并切换\n\n此时有一个需求需要在新的分支iss53上工作：\n\n$ git checkout -b iss53  # b表示branch\n\n\n1\n\n\n它是下面两条命令的简写：\n\n$ git branch iss53\n$ git checkout iss53\n\n\n1\n2\n\n\n\n# 切换分支\n\n突然有一个紧急问题要解决，需要在原来的master分支进行修复：\n\n$ git checkout master\n\n\n1\n\n\n在切换到master之前，需要iss53分支保持好一个干净的状态（修改都已提交）。\n\n注意：切换分支Git 会重置你的工作目录。\n\n> checkout 中文含义 “检出”，checkout <branch> 检出分支 => 检出指定分支的代码 => 重置工作目录并切换分支。\n\n接下来，你要修复这个紧急问题。 建立一个 hotfix 分支，在该分支上工作直到问题解决：\n\n$ git checkout -b hotfix\n\n# 中间过程在hotfix上修改了代码并提交\n$ echo 'test' > ./hotfix.txt\n$ git add .\n$ git commit -m 'fixed'\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 合并分支\n\n$ git checkout master # 首先切回master分支\n$ git merge hotfix # 把 hotfix 分支合并过来\n\n\n1\n2\n\n\n\n# 删除分支\n\n$ git branch -d hotfix # d表示delete\n\n# 然后切回iss53继续工作\n$ git checkout iss53\n\n\n1\n2\n3\n4\n\n\n注意删除分支是在 branch 命令上\n\n\n# 多次提交之后合并分支\n\n假设你已经修正了 #53 问题，打算合并到master分支：\n\n$ git checkout master\n$ git merga iss53\n\n\n1\n2\n\n\n这看似和之前的合并区别不大。此时你的开发历史从一个更早的地方开始分叉开来（diverged）。 因为，master 分支所在提交并不是 iss53 分支所在提交的直接祖先，Git 不得不做一些额外的工作。 出现这种情况的时候，Git 会使用两个分支的末端所指的快照以及这两个分支的公共祖先，做一个简单的三方合并。\n\n和之前将分支指针向前推进所不同的是，Git 将此次三方合并的结果做了一个新的快照并且自动创建一个新的提交指向它。 这个被称作一次合并提交，它的特别之处在于他有不止一个父提交。\n\n\n# 遇到冲突时的分支合并\n\n如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没法干净的合并它们，就产生了冲突。\n\n合并过程中出现CONFLICT提升，表示有冲突\n\n$ git merge iss53\nAuto-merging index.html\nCONFLICT (content): Merge conflict in index.html\nAutomatic merge failed; fix conflicts and then commit the result.\n\n\n1\n2\n3\n4\n\n\n使用git status查看未合并状态。\n\n任何因包含合并冲突而有待解决的文件，都会以未合并状态标识出来。 Git 会在有冲突的文件中加入标准的冲突解决标记，这样你可以打开这些包含冲突的文件然后手动解决冲突。 出现冲突的文件会包含一些特殊区段，看起来像下面这个样子：\n\n<<<<<<< HEAD:index.html\n<div id=\"footer\">contact : email.support@github.com</div>\n=======\n<div id=\"footer\">\n please contact us at support@github.com\n</div>\n>>>>>>> iss53:index.html\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n你需要手动解决冲突，解决了所有文件里的冲突之后，对每个文件使用 git add 命令来将其标记为冲突已解决。 一旦暂存这些原本有冲突的文件，Git 就会将它们标记为冲突已解决。\n\n如果你对结果感到满意，并且确定之前有冲突的的文件都已经暂存了，这时你可以输入 git commit 来完成合并提交。",normalizedContent:"# git分支的新建与合并-分支操作\n\n文档：git 分支 - 分支的新建与合并\n\n\n# 创建分支并切换\n\n此时有一个需求需要在新的分支iss53上工作：\n\n$ git checkout -b iss53  # b表示branch\n\n\n1\n\n\n它是下面两条命令的简写：\n\n$ git branch iss53\n$ git checkout iss53\n\n\n1\n2\n\n\n\n# 切换分支\n\n突然有一个紧急问题要解决，需要在原来的master分支进行修复：\n\n$ git checkout master\n\n\n1\n\n\n在切换到master之前，需要iss53分支保持好一个干净的状态（修改都已提交）。\n\n注意：切换分支git 会重置你的工作目录。\n\n> checkout 中文含义 “检出”，checkout <branch> 检出分支 => 检出指定分支的代码 => 重置工作目录并切换分支。\n\n接下来，你要修复这个紧急问题。 建立一个 hotfix 分支，在该分支上工作直到问题解决：\n\n$ git checkout -b hotfix\n\n# 中间过程在hotfix上修改了代码并提交\n$ echo 'test' > ./hotfix.txt\n$ git add .\n$ git commit -m 'fixed'\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 合并分支\n\n$ git checkout master # 首先切回master分支\n$ git merge hotfix # 把 hotfix 分支合并过来\n\n\n1\n2\n\n\n\n# 删除分支\n\n$ git branch -d hotfix # d表示delete\n\n# 然后切回iss53继续工作\n$ git checkout iss53\n\n\n1\n2\n3\n4\n\n\n注意删除分支是在 branch 命令上\n\n\n# 多次提交之后合并分支\n\n假设你已经修正了 #53 问题，打算合并到master分支：\n\n$ git checkout master\n$ git merga iss53\n\n\n1\n2\n\n\n这看似和之前的合并区别不大。此时你的开发历史从一个更早的地方开始分叉开来（diverged）。 因为，master 分支所在提交并不是 iss53 分支所在提交的直接祖先，git 不得不做一些额外的工作。 出现这种情况的时候，git 会使用两个分支的末端所指的快照以及这两个分支的公共祖先，做一个简单的三方合并。\n\n和之前将分支指针向前推进所不同的是，git 将此次三方合并的结果做了一个新的快照并且自动创建一个新的提交指向它。 这个被称作一次合并提交，它的特别之处在于他有不止一个父提交。\n\n\n# 遇到冲突时的分支合并\n\n如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，git 就没法干净的合并它们，就产生了冲突。\n\n合并过程中出现conflict提升，表示有冲突\n\n$ git merge iss53\nauto-merging index.html\nconflict (content): merge conflict in index.html\nautomatic merge failed; fix conflicts and then commit the result.\n\n\n1\n2\n3\n4\n\n\n使用git status查看未合并状态。\n\n任何因包含合并冲突而有待解决的文件，都会以未合并状态标识出来。 git 会在有冲突的文件中加入标准的冲突解决标记，这样你可以打开这些包含冲突的文件然后手动解决冲突。 出现冲突的文件会包含一些特殊区段，看起来像下面这个样子：\n\n<<<<<<< head:index.html\n<div id=\"footer\">contact : email.support@github.com</div>\n=======\n<div id=\"footer\">\n please contact us at support@github.com\n</div>\n>>>>>>> iss53:index.html\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n你需要手动解决冲突，解决了所有文件里的冲突之后，对每个文件使用 git add 命令来将其标记为冲突已解决。 一旦暂存这些原本有冲突的文件，git 就会将它们标记为冲突已解决。\n\n如果你对结果感到满意，并且确定之前有冲突的的文件都已经暂存了，这时你可以输入 git commit 来完成合并提交。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支管理-查看分支",frontmatter:{title:"Git分支管理-查看分支",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/a399b3/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/40.Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86-%E6%9F%A5%E7%9C%8B%E5%88%86%E6%94%AF.html",relativePath:"《Git》学习笔记/20.文档笔记/40.Git分支管理-查看分支.md",key:"v-7ec0cbb8",path:"/pages/a399b3/",headers:[{level:3,title:"查看分支",slug:"查看分支",normalizedTitle:"查看分支",charIndex:10},{level:3,title:"查看每个分支的最后提交",slug:"查看每个分支的最后提交",normalizedTitle:"查看每个分支的最后提交",charIndex:152},{level:3,title:"查看已(未)合并的分支",slug:"查看已-未-合并的分支",normalizedTitle:"查看已(未)合并的分支",charIndex:297}],headersStr:"查看分支 查看每个分支的最后提交 查看已(未)合并的分支",content:"# Git分支管理-查看分支\n\n\n# 查看分支\n\n$ git branch\n  iss53\n* master  # 带星号*表示当前所在分支\n  testing\n\n\n1\n2\n3\n4\n\n\ngit branch 命令不只是可以创建与删除分支。 如果不加任何参数运行它，会得到当前所有分支的一个列表。\n\n\n# 查看每个分支的最后提交\n\n$ git branch -v\n  iss53   93b412c fix javascript issue\n* master  7a98805 Merge branch 'iss53'\n  testing 782fd34 test\n\n\n1\n2\n3\n4\n\n\n\n# 查看已(未)合并的分支\n\n--merged 与 --no-merged 这两个选项可以查看哪些分支已经合并或未合并到 当前 分支。\n\n$ git branch --merged # 查看已合并分支列表\n  iss53\n* master\n\n\n1\n2\n3\n\n\n上面列表中分支名字前没有 * 号的分支通常可以使用 git branch -d 删除掉；\n\n$ git branch --no-merged # 查看未合并的分支列表\n  testing\n\n\n1\n2\n\n\n上面显示未合并的分支，尝试使用 git branch -d 命令删除它时会失败：\n\n$ git branch -d testing\nerror: The branch 'testing' is not fully merged.\nIf you are sure you want to delete it, run 'git branch -D testing'.\n\n\n1\n2\n3\n\n\n强制删除未合并的分支:\n\n$ git branch -D testing\n\n\n1\n\n\n# 查看指定分支的已(未)合并的分支\n\n上面描述的选项 --merged 和 --no-merged 会在没有给定提交或分支名作为参数时， 分别列出已合并或未合并到 当前 分支的分支。\n\n你总是可以提供一个附加的参数来查看其它分支的合并状态而不必检出它们。 例如，尚未合并到 testing 分支的有哪些？\n\n$ git branch --no-merged testing\n  topicA\n  featureB\n\n\n1\n2\n3\n",normalizedContent:"# git分支管理-查看分支\n\n\n# 查看分支\n\n$ git branch\n  iss53\n* master  # 带星号*表示当前所在分支\n  testing\n\n\n1\n2\n3\n4\n\n\ngit branch 命令不只是可以创建与删除分支。 如果不加任何参数运行它，会得到当前所有分支的一个列表。\n\n\n# 查看每个分支的最后提交\n\n$ git branch -v\n  iss53   93b412c fix javascript issue\n* master  7a98805 merge branch 'iss53'\n  testing 782fd34 test\n\n\n1\n2\n3\n4\n\n\n\n# 查看已(未)合并的分支\n\n--merged 与 --no-merged 这两个选项可以查看哪些分支已经合并或未合并到 当前 分支。\n\n$ git branch --merged # 查看已合并分支列表\n  iss53\n* master\n\n\n1\n2\n3\n\n\n上面列表中分支名字前没有 * 号的分支通常可以使用 git branch -d 删除掉；\n\n$ git branch --no-merged # 查看未合并的分支列表\n  testing\n\n\n1\n2\n\n\n上面显示未合并的分支，尝试使用 git branch -d 命令删除它时会失败：\n\n$ git branch -d testing\nerror: the branch 'testing' is not fully merged.\nif you are sure you want to delete it, run 'git branch -d testing'.\n\n\n1\n2\n3\n\n\n强制删除未合并的分支:\n\n$ git branch -d testing\n\n\n1\n\n\n# 查看指定分支的已(未)合并的分支\n\n上面描述的选项 --merged 和 --no-merged 会在没有给定提交或分支名作为参数时， 分别列出已合并或未合并到 当前 分支的分支。\n\n你总是可以提供一个附加的参数来查看其它分支的合并状态而不必检出它们。 例如，尚未合并到 testing 分支的有哪些？\n\n$ git branch --no-merged testing\n  topica\n  featureb\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支开发工作流",frontmatter:{title:"Git分支开发工作流",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/49ee30/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/50.Git%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C%E6%B5%81.html",relativePath:"《Git》学习笔记/20.文档笔记/50.Git分支开发工作流.md",key:"v-6ee24692",path:"/pages/49ee30/",headers:[{level:3,title:"长期分支",slug:"长期分支",normalizedTitle:"长期分支",charIndex:32},{level:3,title:"主题分支 (短期分支)",slug:"主题分支-短期分支",normalizedTitle:"主题分支 (短期分支)",charIndex:625}],headersStr:"长期分支 主题分支 (短期分支)",content:"# Git分支开发工作流\n\n文档：Git分支开发工作流\n\n\n# 长期分支\n\n因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些主题分支合并入其他分支中。\n\n许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码，开发过程在dev分支，开发完成后并入test分支进行测试，通过测试的稳定代码才并入master分支中。\n\ndev和test分支不需要保持绝对稳定，但在test通过测试达到稳定状态，就可以被合并入master分支。\n\n事实上我们刚才讨论的，是随着你的提交而不断右移的指针。 稳定分支(master)的指针总是在提交历史中落后一大截，而前沿分支(dev或test)的指针往往比较靠前。\n\n你可以用这种方法维护不同层次的稳定性。 一些大型项目还有一个 proposed（建议） 或 pu: proposed updates（建议更新）分支，它可能因包含一些不成熟的内容而不能进入master 分支。 这么做的目的是使你的分支具有不同级别的稳定性；当它们具有一定程度的稳定性后，再把它们合并入具有更高级别稳定性的分支中。 再次强调一下，使用多个长期分支的方法并非必要，但是这么做通常很有帮助，尤其是当你在一个非常庞大或者复杂的项目中工作时。\n\n\n# 主题分支 (短期分支)\n\n主题分支对任何规模的项目都适用。 主题分支是一种短期分支，它被用来实现单一特性或其相关工作。\n\n你已经在上一节中你创建的 iss53 和 hotfix 主题分支中看到过这种用法。 你在上一节用到的主题分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在主题分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度。\n\n考虑这样一个例子，你在 master 分支上工作到 C1，这时为了解决一个问题而新建 iss91 分支，在 iss91 分支上工作到 C4，然而对于那个问题你又有了新的想法，于是你再新建一个 iss91v2 分支试图用另一种方法解决那个问题，接着你回到 master 分支工作了一会儿，你又冒出了一个不太确定的想法，你便在 C10 的时候新建一个 dumbidea 分支，并在上面做些实验。 你的提交历史看起来像下面这个样子：\n\n\n\n图1. 拥有多个主题分支的提交历史 ▲\n\n现在，我们假设两件事情：你决定使用第二个方案来解决那个问题，即使用在 iss91v2 分支中方案。 另外，你将 dumbidea 分支拿给你的同事看过之后，结果发现这是个惊人之举。 这时你可以抛弃 iss91 分支（即丢弃 C5 和 C6 提交），然后把另外两个分支合并入主干分支。 最终你的提交历史看起来像下面这个样子：\n\n\n\n图2. 合并了 dumbidea 和 iss91v2 分支之后的提交历史 ▲\n\n我们将会在 分布式 Git 中向你揭示更多有关分支工作流的细节， 因此，请确保你阅读完那个章节之后，再来决定你的下个项目要使用什么样的分支策略（branching scheme）。\n\n请牢记，当你做这么多操作的时候，这些分支全部都存于本地。 当你新建和合并分支的时候，所有这一切都只发生在你本地的 Git 版本库中 —— 没有与服务器发生交互。",normalizedContent:"# git分支开发工作流\n\n文档：git分支开发工作流\n\n\n# 长期分支\n\n因为 git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些主题分支合并入其他分支中。\n\n许多使用 git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码，开发过程在dev分支，开发完成后并入test分支进行测试，通过测试的稳定代码才并入master分支中。\n\ndev和test分支不需要保持绝对稳定，但在test通过测试达到稳定状态，就可以被合并入master分支。\n\n事实上我们刚才讨论的，是随着你的提交而不断右移的指针。 稳定分支(master)的指针总是在提交历史中落后一大截，而前沿分支(dev或test)的指针往往比较靠前。\n\n你可以用这种方法维护不同层次的稳定性。 一些大型项目还有一个 proposed（建议） 或 pu: proposed updates（建议更新）分支，它可能因包含一些不成熟的内容而不能进入master 分支。 这么做的目的是使你的分支具有不同级别的稳定性；当它们具有一定程度的稳定性后，再把它们合并入具有更高级别稳定性的分支中。 再次强调一下，使用多个长期分支的方法并非必要，但是这么做通常很有帮助，尤其是当你在一个非常庞大或者复杂的项目中工作时。\n\n\n# 主题分支 (短期分支)\n\n主题分支对任何规模的项目都适用。 主题分支是一种短期分支，它被用来实现单一特性或其相关工作。\n\n你已经在上一节中你创建的 iss53 和 hotfix 主题分支中看到过这种用法。 你在上一节用到的主题分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在主题分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度。\n\n考虑这样一个例子，你在 master 分支上工作到 c1，这时为了解决一个问题而新建 iss91 分支，在 iss91 分支上工作到 c4，然而对于那个问题你又有了新的想法，于是你再新建一个 iss91v2 分支试图用另一种方法解决那个问题，接着你回到 master 分支工作了一会儿，你又冒出了一个不太确定的想法，你便在 c10 的时候新建一个 dumbidea 分支，并在上面做些实验。 你的提交历史看起来像下面这个样子：\n\n\n\n图1. 拥有多个主题分支的提交历史 ▲\n\n现在，我们假设两件事情：你决定使用第二个方案来解决那个问题，即使用在 iss91v2 分支中方案。 另外，你将 dumbidea 分支拿给你的同事看过之后，结果发现这是个惊人之举。 这时你可以抛弃 iss91 分支（即丢弃 c5 和 c6 提交），然后把另外两个分支合并入主干分支。 最终你的提交历史看起来像下面这个样子：\n\n\n\n图2. 合并了 dumbidea 和 iss91v2 分支之后的提交历史 ▲\n\n我们将会在 分布式 git 中向你揭示更多有关分支工作流的细节， 因此，请确保你阅读完那个章节之后，再来决定你的下个项目要使用什么样的分支策略（branching scheme）。\n\n请牢记，当你做这么多操作的时候，这些分支全部都存于本地。 当你新建和合并分支的时候，所有这一切都只发生在你本地的 git 版本库中 —— 没有与服务器发生交互。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支-远程分支",frontmatter:{title:"Git分支-远程分支",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/574d62/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/60.Git%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF.html",relativePath:"《Git》学习笔记/20.文档笔记/60.Git分支-远程分支.md",key:"v-5424fbce",path:"/pages/574d62/",headers:[{level:3,title:"查看远程引用列表与信息",slug:"查看远程引用列表与信息",normalizedTitle:"查看远程引用列表与信息",charIndex:71},{level:3,title:"远程跟踪分支",slug:"远程跟踪分支",normalizedTitle:"远程跟踪分支",charIndex:184},{level:3,title:"推送",slug:"推送",normalizedTitle:"推送",charIndex:432},{level:3,title:"跟踪分支",slug:"跟踪分支",normalizedTitle:"跟踪分支",charIndex:186},{level:3,title:"查看跟踪分支",slug:"查看跟踪分支",normalizedTitle:"查看跟踪分支",charIndex:5263},{level:3,title:"拉取",slug:"拉取",normalizedTitle:"拉取",charIndex:605},{level:3,title:"删除远程分支",slug:"删除远程分支",normalizedTitle:"删除远程分支",charIndex:6361}],headersStr:"查看远程引用列表与信息 远程跟踪分支 推送 跟踪分支 查看跟踪分支 拉取 删除远程分支",content:"# Git分支-远程分支\n\n远程引用是对远程仓库的引用（指针），包括分支、标签等等。\n\n> 远程分支本质上也是一个指针，指向远程地址\n\n\n# 查看远程引用列表与信息\n\ngit ls-remote <remote> # 远程引用的完整列表\ngit remote show <remote> # 远程分支的更多信息\n\n\n1\n2\n\n\n上面两行命令比较少用，更常见的做法是利用远程跟踪分支。\n\n\n# 远程跟踪分支\n\n远程跟踪分支是远程分支状态的引用。它们是你无法移动的本地引用。一旦你进行了网络通信， Git 就会为你移动它们以精确反映远程仓库的状态。请将它们看做书签， 这样可以提醒你该分支在远程仓库中的位置就是你最后一次连接到它们的位置。\n\n它们以 <remote>/<branch> 的形式命名。 例如，如果你想要查看最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 origin/master 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支， 然而在服务器上的分支会以 origin/iss53 来表示。\n\n这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 Git 服务器。 如果你从这里克隆，Git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据， 创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。\n\n笔记：从远程克隆下来的仓库有一个叫origin/master的远程跟踪分支 和 一个本地的master分支\n\n> 笔记：“origin” 并无特殊含义远程仓库名字 “origin” 与分支名字 “master” 一样，在 Git 中并没有任何特别的含义一样。 同时 “master” 是当你运行 git init 时默认的起始分支名字，原因仅仅是它的广泛使用， “origin” 是当你运行 git clone 时默认的远程仓库名字。 如果你运行 git clone -o booyah，那么你默认的远程分支名字将会是 booyah/master。\n\n\n\n图1. 克隆之后的服务器与本地仓库 ▲\n\n如果你在本地的 master 分支做了一些工作，在同一段时间内有其他人推送提交到 git.ourcompany.com 并且更新了它的 master 分支，这就是说你们的提交历史已走向不同的方向。 即便这样，只要你保持不与 origin 服务器连接（并拉取数据），你的 origin/master 指针就不会移动。\n\n\n\n图2. 本地与远程的工作可以分叉 ▲\n\n如果要与给定的远程仓库同步数据，运行 git fetch <remote> 命令（在本例中为 git fetch origin）。 这个命令查找 “origin” 是哪一个服务器（在本例中，它是 git.ourcompany.com）， 从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针到更新之后的位置。\n\n\n\n图3. git fetch 更新你的远程跟踪分支 ▲\n\n笔记: 本地的 master 分支 可能 和 远程跟踪分支 origin/master 分叉\n\n为了演示有多个远程仓库与远程分支的情况，我们假定你有另一个内部 Git 服务器，仅服务于你的某个敏捷开发团队。 这个服务器位于 git.team1.ourcompany.com。 你可以运行 git remote add 命令添加一个新的远程仓库引用到当前的项目，这个命令我们会在 Git 基础 中详细说明。 将这个远程仓库命名为 teamone，将其作为完整 URL 的缩写。远程仓库名本质上是远程URL的缩写\n\n\n\n图4. 添加另一个远程仓库 ▲\n\n现在，可以运行 git fetch teamone 来抓取远程仓库 teamone 有而本地没有的数据。 因为那台服务器上现有的数据是 origin 服务器上的一个子集， 所以 Git 并不会抓取数据而是会设置远程跟踪分支 teamone/master 指向 teamone 的 master 分支。\n\n\n\n图5. 远程跟踪分支 teamone/master ▲\n\n\n# 推送\n\n当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步——你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。\n\n如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 git push <remote> <branch>:\n\n$ git push origin serverfix\nCounting objects: 24, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (15/15), done.\nWriting objects: 100% (24/24), 1.91 KiB | 0 bytes/s, done.\nTotal 24 (delta 2), reused 0 (delta 0)\nTo https://github.com/schacon/simplegit\n * [new branch]      serverfix -> serverfix\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这里有些工作被简化了。 Git 自动将 serverfix 分支名字展开为 refs/heads/serverfix:refs/heads/serverfix， 那意味着，“推送本地的 serverfix 分支来更新远程仓库上的 serverfix 分支。” 我们将会详细学习 Git 内部原理 的 refs/heads/ 部分， 但是现在可以先把它放在儿。你也可以运行 git push origin serverfix:serverfix， 它会做同样的事——也就是说“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。\n\n# 重命名远程仓库上的分支名\n\n如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。\n\nNOTE   如何避免每次输入密码如果你正在使用 HTTPS URL 来推送，GIT 服务器会询问用户名与密码。\n       默认情况下它会在终端中提示服务器是否允许你进行推送。如果不想在每一次推送时都输入用户名与密码，你可以设置一个\n       “CREDENTIAL CACHE”。 最简单的方式就是将其保存在内存中几分钟，可以简单地运行 GIT CONFIG\n       --GLOBAL CREDENTIAL.HELPER CACHE 来设置它。想要了解更多关于不同验证缓存的可用选项，查看\n       凭证存储。\n       \n\n下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用：\n\n$ git fetch origin\nremote: Counting objects: 7, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 3 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom https://github.com/schacon/simplegit\n * [new branch]      serverfix    -> origin/serverfix\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支——只有一个不可以修改的 origin/serverfix 指针。\n\n可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上：\n\n$ git checkout -b serverfix origin/serverfix\nBranch serverfix set up to track remote branch serverfix from origin.\nSwitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n这会给你一个用于工作的本地分支，并且起点位于 origin/serverfix。\n\n\n# 跟踪分支\n\n从一个远程跟踪分支检出一个本地分支会自动创建所谓的“跟踪分支”（它跟踪的分支叫做“上游分支”）。 跟踪分支是与远程分支有直接关系的本地分支。 如果在一个跟踪分支上输入 git pull，Git 能自动地识别去哪个服务器上抓取、合并到哪个分支。\n\n当克隆一个仓库时，它通常会自动地创建一个跟踪 origin/master 的 master 分支。 然而，如果你愿意的话可以设置其他的跟踪分支，或是一个在其他远程仓库上的跟踪分支，又或者不跟踪 master 分支。 最简单的实例就是像之前看到的那样，运行 git checkout -b <branch> <remote>/<branch>。 这是一个十分常用的操作所以 Git 提供了 --track 快捷方式：\n\n$ git checkout --track origin/serverfix\nBranch serverfix set up to track remote branch serverfix from origin.\nSwitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n由于这个操作太常用了，该捷径本身还有一个捷径。 如果你尝试检出的分支 (a) 不存在且 (b) 刚好只有一个名字与之匹配的远程分支，那么 Git 就会为你创建一个跟踪分支：\n\n$ git checkout serverfix\nBranch serverfix set up to track remote branch serverfix from origin.\nSwitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n如果想要将本地分支与远程分支设置为不同的名字，你可以轻松地使用上一个命令增加一个不同名字的本地分支：\n\n$ git checkout -b sf origin/serverfix\nBranch sf set up to track remote branch serverfix from origin.\nSwitched to a new branch 'sf'\n\n\n1\n2\n3\n\n\n现在，本地分支 sf 会自动从 origin/serverfix 拉取。\n\n设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支， 你可以在任意时间使用 -u 或 --set-upstream-to 选项运行 git branch 来显式地设置。\n\n$ git branch -u origin/serverfix\nBranch serverfix set up to track remote branch serverfix from origin.\n\n\n1\n2\n\n\nNOTE   上游快捷方式当设置好跟踪分支后，可以通过简写 @{UPSTREAM} 或 @{U} 来引用它的上游分支。 所以在\n       MASTER 分支时并且它正在跟踪 ORIGIN/MASTER 时，如果愿意的话可以使用 GIT MERGE @{U}\n       来取代 GIT MERGE ORIGIN/MASTER。\n       \n\n\n# 查看跟踪分支\n\n如果想要查看设置的所有跟踪分支，可以使用 git branch 的 -vv 选项。 这会将所有的本地分支列出来并且包含更多的信息，如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后或是都有。\n\n$ git branch -vv\n  iss53     7e424c3 [origin/iss53: ahead 2] forgot the brackets\n  master    1ae2a45 [origin/master] deploying index fix\n* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] this should do it\n  testing   5ea463a trying something new\n\n\n1\n2\n3\n4\n5\n\n\n这里可以看到 iss53 分支正在跟踪 origin/iss53 并且 “ahead” 是 2，意味着本地有两个提交还没有推送到服务器上。 也能看到 master 分支正在跟踪 origin/master 分支并且是最新的。 接下来可以看到 serverfix 分支正在跟踪 teamone 服务器上的 server-fix-good 分支并且领先 3 落后 1， 意味着服务器上有一次提交还没有合并入同时本地有三次提交还没有推送。 最后看到 testing 分支并没有跟踪任何远程分支。\n\n需要重点注意的一点是这些数字的值来自于你从每个服务器上最后一次抓取的数据。 这个命令并没有连接服务器，它只会告诉你关于本地缓存的服务器数据。 如果想要统计最新的领先与落后数字，需要在运行此命令前抓取所有的远程仓库。 可以像这样做：\n\n$ git fetch --all; git branch -vv\n\n\n1\n\n\n\n# 拉取\n\n当 git fetch 命令从服务器上抓取本地没有的数据时，它并不会修改工作目录中的内容。 它只会获取数据然后让你自己合并。 然而，有一个命令叫作 git pull 在大多数情况下它的含义是一个 git fetch 紧接着一个 git merge 命令。 如果有一个像之前章节中演示的设置好的跟踪分支，不管它是显式地设置还是通过 clone 或 checkout 命令为你创建的，git pull 都会查找当前分支所跟踪的服务器与分支， 从服务器上抓取数据然后尝试合并入那个远程分支。\n\n由于 git pull 的魔法经常令人困惑所以通常单独显式地使用 fetch 与 merge 命令会更好一些。\n\n\n# 删除远程分支\n\n假设你已经通过远程分支做完所有的工作了——也就是说你和你的协作者已经完成了一个特性， 并且将其合并到了远程仓库的 master 分支（或任何其他稳定代码分支）。 可以运行带有 --delete 选项的 git push 命令来删除一个远程分支。 如果想要从服务器上删除 serverfix 分支，运行下面的命令：\n\n$ git push origin --delete serverfix\nTo https://github.com/schacon/simplegit\n - [deleted]         serverfix\n\n\n1\n2\n3\n\n\n基本上这个命令做的只是从服务器上移除这个指针。 Git 服务器通常会保留数据一段时间直到垃圾回收运行，所以如果不小心删除掉了，通常是很容易恢复的。",normalizedContent:"# git分支-远程分支\n\n远程引用是对远程仓库的引用（指针），包括分支、标签等等。\n\n> 远程分支本质上也是一个指针，指向远程地址\n\n\n# 查看远程引用列表与信息\n\ngit ls-remote <remote> # 远程引用的完整列表\ngit remote show <remote> # 远程分支的更多信息\n\n\n1\n2\n\n\n上面两行命令比较少用，更常见的做法是利用远程跟踪分支。\n\n\n# 远程跟踪分支\n\n远程跟踪分支是远程分支状态的引用。它们是你无法移动的本地引用。一旦你进行了网络通信， git 就会为你移动它们以精确反映远程仓库的状态。请将它们看做书签， 这样可以提醒你该分支在远程仓库中的位置就是你最后一次连接到它们的位置。\n\n它们以 <remote>/<branch> 的形式命名。 例如，如果你想要查看最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 origin/master 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支， 然而在服务器上的分支会以 origin/iss53 来表示。\n\n这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 git 服务器。 如果你从这里克隆，git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据， 创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。\n\n笔记：从远程克隆下来的仓库有一个叫origin/master的远程跟踪分支 和 一个本地的master分支\n\n> 笔记：“origin” 并无特殊含义远程仓库名字 “origin” 与分支名字 “master” 一样，在 git 中并没有任何特别的含义一样。 同时 “master” 是当你运行 git init 时默认的起始分支名字，原因仅仅是它的广泛使用， “origin” 是当你运行 git clone 时默认的远程仓库名字。 如果你运行 git clone -o booyah，那么你默认的远程分支名字将会是 booyah/master。\n\n\n\n图1. 克隆之后的服务器与本地仓库 ▲\n\n如果你在本地的 master 分支做了一些工作，在同一段时间内有其他人推送提交到 git.ourcompany.com 并且更新了它的 master 分支，这就是说你们的提交历史已走向不同的方向。 即便这样，只要你保持不与 origin 服务器连接（并拉取数据），你的 origin/master 指针就不会移动。\n\n\n\n图2. 本地与远程的工作可以分叉 ▲\n\n如果要与给定的远程仓库同步数据，运行 git fetch <remote> 命令（在本例中为 git fetch origin）。 这个命令查找 “origin” 是哪一个服务器（在本例中，它是 git.ourcompany.com）， 从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针到更新之后的位置。\n\n\n\n图3. git fetch 更新你的远程跟踪分支 ▲\n\n笔记: 本地的 master 分支 可能 和 远程跟踪分支 origin/master 分叉\n\n为了演示有多个远程仓库与远程分支的情况，我们假定你有另一个内部 git 服务器，仅服务于你的某个敏捷开发团队。 这个服务器位于 git.team1.ourcompany.com。 你可以运行 git remote add 命令添加一个新的远程仓库引用到当前的项目，这个命令我们会在 git 基础 中详细说明。 将这个远程仓库命名为 teamone，将其作为完整 url 的缩写。远程仓库名本质上是远程url的缩写\n\n\n\n图4. 添加另一个远程仓库 ▲\n\n现在，可以运行 git fetch teamone 来抓取远程仓库 teamone 有而本地没有的数据。 因为那台服务器上现有的数据是 origin 服务器上的一个子集， 所以 git 并不会抓取数据而是会设置远程跟踪分支 teamone/master 指向 teamone 的 master 分支。\n\n\n\n图5. 远程跟踪分支 teamone/master ▲\n\n\n# 推送\n\n当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步——你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。\n\n如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 git push <remote> <branch>:\n\n$ git push origin serverfix\ncounting objects: 24, done.\ndelta compression using up to 8 threads.\ncompressing objects: 100% (15/15), done.\nwriting objects: 100% (24/24), 1.91 kib | 0 bytes/s, done.\ntotal 24 (delta 2), reused 0 (delta 0)\nto https://github.com/schacon/simplegit\n * [new branch]      serverfix -> serverfix\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这里有些工作被简化了。 git 自动将 serverfix 分支名字展开为 refs/heads/serverfix:refs/heads/serverfix， 那意味着，“推送本地的 serverfix 分支来更新远程仓库上的 serverfix 分支。” 我们将会详细学习 git 内部原理 的 refs/heads/ 部分， 但是现在可以先把它放在儿。你也可以运行 git push origin serverfix:serverfix， 它会做同样的事——也就是说“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。\n\n# 重命名远程仓库上的分支名\n\n如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。\n\nnote   如何避免每次输入密码如果你正在使用 https url 来推送，git 服务器会询问用户名与密码。\n       默认情况下它会在终端中提示服务器是否允许你进行推送。如果不想在每一次推送时都输入用户名与密码，你可以设置一个\n       “credential cache”。 最简单的方式就是将其保存在内存中几分钟，可以简单地运行 git config\n       --global credential.helper cache 来设置它。想要了解更多关于不同验证缓存的可用选项，查看\n       凭证存储。\n       \n\n下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用：\n\n$ git fetch origin\nremote: counting objects: 7, done.\nremote: compressing objects: 100% (2/2), done.\nremote: total 3 (delta 0), reused 3 (delta 0)\nunpacking objects: 100% (3/3), done.\nfrom https://github.com/schacon/simplegit\n * [new branch]      serverfix    -> origin/serverfix\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支——只有一个不可以修改的 origin/serverfix 指针。\n\n可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上：\n\n$ git checkout -b serverfix origin/serverfix\nbranch serverfix set up to track remote branch serverfix from origin.\nswitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n这会给你一个用于工作的本地分支，并且起点位于 origin/serverfix。\n\n\n# 跟踪分支\n\n从一个远程跟踪分支检出一个本地分支会自动创建所谓的“跟踪分支”（它跟踪的分支叫做“上游分支”）。 跟踪分支是与远程分支有直接关系的本地分支。 如果在一个跟踪分支上输入 git pull，git 能自动地识别去哪个服务器上抓取、合并到哪个分支。\n\n当克隆一个仓库时，它通常会自动地创建一个跟踪 origin/master 的 master 分支。 然而，如果你愿意的话可以设置其他的跟踪分支，或是一个在其他远程仓库上的跟踪分支，又或者不跟踪 master 分支。 最简单的实例就是像之前看到的那样，运行 git checkout -b <branch> <remote>/<branch>。 这是一个十分常用的操作所以 git 提供了 --track 快捷方式：\n\n$ git checkout --track origin/serverfix\nbranch serverfix set up to track remote branch serverfix from origin.\nswitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n由于这个操作太常用了，该捷径本身还有一个捷径。 如果你尝试检出的分支 (a) 不存在且 (b) 刚好只有一个名字与之匹配的远程分支，那么 git 就会为你创建一个跟踪分支：\n\n$ git checkout serverfix\nbranch serverfix set up to track remote branch serverfix from origin.\nswitched to a new branch 'serverfix'\n\n\n1\n2\n3\n\n\n如果想要将本地分支与远程分支设置为不同的名字，你可以轻松地使用上一个命令增加一个不同名字的本地分支：\n\n$ git checkout -b sf origin/serverfix\nbranch sf set up to track remote branch serverfix from origin.\nswitched to a new branch 'sf'\n\n\n1\n2\n3\n\n\n现在，本地分支 sf 会自动从 origin/serverfix 拉取。\n\n设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支， 你可以在任意时间使用 -u 或 --set-upstream-to 选项运行 git branch 来显式地设置。\n\n$ git branch -u origin/serverfix\nbranch serverfix set up to track remote branch serverfix from origin.\n\n\n1\n2\n\n\nnote   上游快捷方式当设置好跟踪分支后，可以通过简写 @{upstream} 或 @{u} 来引用它的上游分支。 所以在\n       master 分支时并且它正在跟踪 origin/master 时，如果愿意的话可以使用 git merge @{u}\n       来取代 git merge origin/master。\n       \n\n\n# 查看跟踪分支\n\n如果想要查看设置的所有跟踪分支，可以使用 git branch 的 -vv 选项。 这会将所有的本地分支列出来并且包含更多的信息，如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后或是都有。\n\n$ git branch -vv\n  iss53     7e424c3 [origin/iss53: ahead 2] forgot the brackets\n  master    1ae2a45 [origin/master] deploying index fix\n* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] this should do it\n  testing   5ea463a trying something new\n\n\n1\n2\n3\n4\n5\n\n\n这里可以看到 iss53 分支正在跟踪 origin/iss53 并且 “ahead” 是 2，意味着本地有两个提交还没有推送到服务器上。 也能看到 master 分支正在跟踪 origin/master 分支并且是最新的。 接下来可以看到 serverfix 分支正在跟踪 teamone 服务器上的 server-fix-good 分支并且领先 3 落后 1， 意味着服务器上有一次提交还没有合并入同时本地有三次提交还没有推送。 最后看到 testing 分支并没有跟踪任何远程分支。\n\n需要重点注意的一点是这些数字的值来自于你从每个服务器上最后一次抓取的数据。 这个命令并没有连接服务器，它只会告诉你关于本地缓存的服务器数据。 如果想要统计最新的领先与落后数字，需要在运行此命令前抓取所有的远程仓库。 可以像这样做：\n\n$ git fetch --all; git branch -vv\n\n\n1\n\n\n\n# 拉取\n\n当 git fetch 命令从服务器上抓取本地没有的数据时，它并不会修改工作目录中的内容。 它只会获取数据然后让你自己合并。 然而，有一个命令叫作 git pull 在大多数情况下它的含义是一个 git fetch 紧接着一个 git merge 命令。 如果有一个像之前章节中演示的设置好的跟踪分支，不管它是显式地设置还是通过 clone 或 checkout 命令为你创建的，git pull 都会查找当前分支所跟踪的服务器与分支， 从服务器上抓取数据然后尝试合并入那个远程分支。\n\n由于 git pull 的魔法经常令人困惑所以通常单独显式地使用 fetch 与 merge 命令会更好一些。\n\n\n# 删除远程分支\n\n假设你已经通过远程分支做完所有的工作了——也就是说你和你的协作者已经完成了一个特性， 并且将其合并到了远程仓库的 master 分支（或任何其他稳定代码分支）。 可以运行带有 --delete 选项的 git push 命令来删除一个远程分支。 如果想要从服务器上删除 serverfix 分支，运行下面的命令：\n\n$ git push origin --delete serverfix\nto https://github.com/schacon/simplegit\n - [deleted]         serverfix\n\n\n1\n2\n3\n\n\n基本上这个命令做的只是从服务器上移除这个指针。 git 服务器通常会保留数据一段时间直到垃圾回收运行，所以如果不小心删除掉了，通常是很容易恢复的。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git分支-变基",frontmatter:{title:"Git分支-变基",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/3a3247/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/70.Git%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA.html",relativePath:"《Git》学习笔记/20.文档笔记/70.Git分支-变基.md",key:"v-60ed664a",path:"/pages/3a3247/",headers:[{level:2,title:"变基的基本操作",slug:"变基的基本操作",normalizedTitle:"变基的基本操作",charIndex:117},{level:3,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:312},{level:3,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:728},{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:1138},{level:3,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:1701},{level:2,title:"更有趣的变基例子",slug:"更有趣的变基例子",normalizedTitle:"更有趣的变基例子",charIndex:1727},{level:3,title:"更有趣的变基例子",slug:"更有趣的变基例子-2",normalizedTitle:"更有趣的变基例子",charIndex:1727},{level:3,title:"--onto选项",slug:"onto选项",normalizedTitle:"--onto选项",charIndex:2530},{level:3,title:"省去先切换到源分支的步骤",slug:"省去先切换到源分支的步骤",normalizedTitle:"省去先切换到源分支的步骤",charIndex:2762},{level:2,title:"变基的风险",slug:"变基的风险",normalizedTitle:"变基的风险",charIndex:3415},{level:3,title:"金科玉律",slug:"金科玉律",normalizedTitle:"金科玉律",charIndex:3425},{level:3,title:"变基的实质",slug:"变基的实质",normalizedTitle:"变基的实质",charIndex:3615},{level:2,title:"用变基解决变基",slug:"用变基解决变基",normalizedTitle:"用变基解决变基",charIndex:4412},{level:2,title:"变基 vs. 合并",slug:"变基-vs-合并",normalizedTitle:"变基 vs. 合并",charIndex:5550}],headersStr:"变基的基本操作 概念 原理 步骤 优点 更有趣的变基例子 更有趣的变基例子 --onto选项 省去先切换到源分支的步骤 变基的风险 金科玉律 变基的实质 用变基解决变基 变基 vs. 合并",content:"# Git分支-变基\n\n在 Git 中整合来自不同分支的修改主要有两种方法：merge 以及 rebase。 在本节中我们将学习什么是“变基”，怎样使用“变基”，并将展示该操作的惊艳之处，以及指出在何种情况下你应避免使用它。\n\n\n# 变基的基本操作\n\n请回顾之前在 分支的合并 中的一个例子，你会看到开发任务分叉到两个不同分支，又各自提交了更新。\n\n\n\n图0. 分叉的提交历史 ▲\n\n之前介绍过，整合分支最容易的方法是 merge 命令。 它会把两个分支的最新快照（C3 和 C4）以及二者最近的共同祖先（C2）进行三方合并，合并的结果是生成一个新的快照（并提交）。\n\n\n\n图1. 通过合并操作来整合分叉的历史 ▲\n\n\n# 概念\n\n变基就是：将某一分支上的所有修改复制到另一分支上\n\n除了merge，还有一种方法：你可以提取在 C4 中引入的补丁和修改，然后在 C3 的基础上应用一次。 在 Git 中，这种操作就叫做 变基（rebase）。 你可以使用 rebase 命令将提交到某一分支上的所有修改都移到另一分支上，就好像“重新播放”一样。\n\n在这个例子中，你可以检出 experiment 分支，然后将它变基到 master 分支上：\n\n$ git checkout experiment\n$ git rebase master # 将experiment上的修改变基到master分支上（将experiment的提交移动到master上。）\nFirst, rewinding head to replay your work on top of it...\nApplying: added staged command\n\n\n1\n2\n3\n4\n\n\n它的原理是首先找到这两个分支（即当前分支 experiment、变基操作的目标基底分支 master） 的最近共同祖先 C2，然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件， 然后将当前分支指向目标基底 C3, 最后以此将之前另存为临时文件的修改依序应用。 （译注：写明了 commit id，以便理解，下同）\n\n\n# 原理\n\n 1. 找到当前分支和目标分支的最近共同祖先\n\n 2. 对比当前分支相对于该共同祖先的历次提交\n\n 3. 提取相应的修改并存为临时文件\n\n 4. 将当前分支指向目标分支\n\n 5. 将之前临时文件的修改依序应用\n\n\n\n图2.将 C4 中的修改变基到 C3 上 ▲\n\n现在回到 master 分支，进行一次快进合并。\n\n$ git checkout master\n$ git merge experiment\n\n\n1\n2\n\n\n\n\n图3.master 分支的快进合并 ▲\n\n\n# 步骤\n\n先检出源分支，将源分支的修改变基到目标分支。切回目标分支，进行一次快进合并\n\n# 示意：\ngit checkout <源分支>\ngit (源分支的修改)rebase(到) <目标分支>\ngit checkout <目标分支>\ngit merge <源分支>\n\n\n1\n2\n3\n4\n5\n\n\n此时，C4' 指向的快照就和 the merge example 中 C5 指向的快照一模一样了。 这两种整合方法的最终结果没有任何区别，但是 变基使得提交历史更加整洁。 你在查看一个经过变基的分支的历史记录时会发现，尽管实际的开发工作是并行的， 但它们看上去就像是串行的一样，提交历史是一条直线没有分叉。\n\n一般我们这样做的目的是为了确保在向远程分支推送时能保持提交历史的整洁——例如向某个其他人维护的项目贡献代码时。 在这种情况下，你首先在自己的分支里进行开发，当开发完成时你需要先将你的代码变基到 origin/master 上，然后再向主项目提交修改。 这样的话，该项目的维护者就不再需要进行整合工作，只需要快进合并便可。\n\n请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样的，只不过提交历史不同罢了。 变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。\n\n\n# 优点\n\n变基的优点： 使提交记录更加整洁。\n\n\n# 更有趣的变基例子\n\n在对两个分支进行变基时，所生成的“重放”并不一定要在目标分支上应用，你也可以指定另外的一个分支进行应用。 就像 从一个主题分支里再分出一个主题分支的提交历史 中的例子那样。 你创建了一个主题分支 server，为服务端添加了一些功能，提交了 C3 和 C4。 然后从 C3 上创建了主题分支 client，为客户端添加了一些功能，提交了 C8 和 C9。 最后，你回到 server 分支，又提交了 C10。\n\n\n# 更有趣的变基例子\n\n在对两个分支进行变基时，所生成的“重放”并不一定要在目标分支上应用，你也可以指定另外的一个分支进行应用。 就像 从一个主题分支里再分出一个主题分支的提交历史 中的例子那样。 你创建了一个主题分支 server，为服务端添加了一些功能，提交了 C3 和 C4。 然后从 C3 上创建了主题分支 client，为客户端添加了一些功能，提交了 C8 和 C9。 最后，你回到 server 分支，又提交了 C10。\n\n\n\n图4.从一个主题分支里再分出一个主题分支的提交历史 ▲\n\n假设你希望将 client 中的修改合并到主分支并发布，但暂时并不想合并 server 中的修改， 因为它们还需要经过更全面的测试。这时，你就可以使用 git rebase 命令的 --onto 选项， 选中在 client 分支里但不在 server 分支里的修改（即 C8 和 C9），将它们在 master 分支上重放：\n\n$ git rebase --onto master server client\n\n\n1\n\n\n以上命令的意思是：“取出 client 分支，找出它从 server 分支分歧之后的补丁， 然后把这些补丁在 master 分支上重放一遍，让 client 看起来像直接基于 master 修改一样”。这理解起来有一点复杂，不过效果非常酷。\n\n\n# --onto选项\n\n选中C分支中的但不在B分支里的修改，应用到A分支。\n\n\n\n图5.截取主题分支上的另一个主题分支，然后变基到其他分支 ▲\n\n现在可以快进合并 master 分支了。（如图 快进合并 master 分支，使之包含来自 client 分支的修改）：\n\n$ git checkout master\n$ git merge client\n\n\n1\n2\n\n\n\n\n图6.快进合并 `master` 分支，使之包含来自 `client` 分支的修改 ▲\n\n\n# 省去先切换到源分支的步骤\n\ngit rebase <目标(当前)分支> <源分支> # 将源分支变基到目标分支。执行此命令后会自动切换到源分支\ngit checkout <目标分支>\ngit merge <源分支>\n\n\n1\n2\n3\n\n\n注意：使用这个方法要确保源分支上的代码是最新的。\n\n接下来你决定将 server 分支中的修改也整合进来。 使用 git rebase <basebranch> <topicbranch> 命令可以直接将主题分支 （即本例中的 server）变基到目标分支（即 master）上。 这样做能省去你先切换到 server 分支，再对其执行变基命令的多个步骤。\n\n$ git rebase master server\n\n\n1\n\n\n如图 将 server 中的修改变基到 master 上 所示，server 中的代码被“续”到了 master 后面。\n\n\n\n图7.将 `server` 中的修改变基到 `master` 上 ▲\n\n然后就可以快进合并主分支 master 了：\n\n$ git checkout master\n$ git merge server\n\n\n1\n2\n\n\n至此，client 和 server 分支中的修改都已经整合到主分支里了， 你可以删除这两个分支，最终提交历史会变成图 最终的提交历史 中的样子：\n\n$ git branch -d client\n$ git branch -d server\n\n\n1\n2\n\n\n\n\n图8. 最终的提交历史 ▲\n\n\n# 变基的风险\n\n\n# 金科玉律\n\n呃，奇妙的变基也并非完美无缺，要用它得遵守一条准则：\n\n如果提交存在于你的仓库之外，而别人可能基于这些提交进行开发，那么不要执行变基。\n\n如果你遵循这条金科玉律，就不会出差错。 否则，人民群众会仇恨你，你的朋友和家人也会嘲笑你，唾弃你。\n\n提示\n\n例如：几个人同时在一个主题分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 如果你已经将提交推送至某个仓库，而其他人也已经从该仓库拉取提交并进行了后续工作，此时，如果你用 git rebase 命令重新整理了提交并再次推送，你的同伴因此将不得不再次将他们手头的工作与你的提交进行整合，如果接下来你还要拉取并整合他们修改过的提交，事情就会变得一团糟。\n\n让我们来看一个在公开的仓库上执行变基操作所带来的问题。 假设你从一个中央服务器克隆然后在它的基础上进行了一些开发。 你的提交历史如图所示：\n\n\n\n图9. 克隆一个仓库，然后在它的基础上进行了一些开发 ▲\n\n然后，某人又向中央服务器提交了一些修改，其中还包括一次合并。 你抓取了这些在远程分支上的修改，并将其合并到你本地的开发分支，然后你的提交历史就会变成这样：\n\n\n\n图10. 抓取别人的提交，合并到自己的开发分支 ▲\n\n接下来，这个人又决定把合并操作回滚，改用变基；继而又用 git push --force 命令覆盖了服务器上的提交历史。 之后你从服务器抓取更新，会发现多出来一些新的提交。\n\n\n\n图11. 有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交 ▲\n\n结果就是你们两人的处境都十分尴尬。 如果你执行 git pull 命令，你将合并来自两条提交历史的内容，生成一个新的合并提交，最终仓库会如图所示：\n\n\n\n图12. 你将相同的内容又合并了一次，生成了一个新的提交 ▲\n\n此时如果你执行 git log 命令，你会发现有两个提交的作者、日期、日志居然是一样的，这会令人感到混乱。 此外，如果你将这一堆又推送到服务器上，你实际上是将那些已经被变基抛弃的提交又找了回来，这会令人感到更加混乱。 很明显对方并不想在提交历史中看到 C4 和 C6，因为之前就是他把这两个提交通过变基丢弃的。\n\n\n# 用变基解决变基\n\n如果你 真的 遭遇了类似的处境，Git 还有一些高级魔法可以帮到你。 如果团队中的某人强制推送并覆盖了一些你所基于的提交，你需要做的就是检查你做了哪些修改，以及他们覆盖了哪些修改。\n\n实际上，Git 除了对整个提交计算 SHA-1 校验和以外，也对本次提交所引入的修改计算了校验和——即 “patch-id”。\n\n如果你拉取被覆盖过的更新并将你手头的工作基于此进行变基的话，一般情况下 Git 都能成功分辨出哪些是你的修改，并把它们应用到新分支上。\n\n举个例子，如果遇到前面提到的 有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交 那种情境，如果我们不是执行合并，而是执行 git rebase teamone/master, Git 将会：\n\n * 检查哪些提交是我们的分支上独有的（C2，C3，C4，C6，C7）\n * 检查其中哪些提交不是合并操作的结果（C2，C3，C4）\n * 检查哪些提交在对方覆盖更新时并没有被纳入目标分支（只有 C2 和 C3，因为 C4 其实就是 C4'）\n * 把查到的这些提交应用在 teamone/master 上面\n\n从而我们将得到与 你将相同的内容又合并了一次，生成了一个新的提交 中不同的结果，如图 在一个被变基然后强制推送的分支上再次执行变基 所示。\n\n\n\n图13. 在一个被变基然后强制推送的分支上再次执行变基 ▲\n\n要想上述方案有效，还需要对方在变基时确保 C4' 和 C4 是几乎一样的。 否则变基操作将无法识别，并新建另一个类似 C4 的补丁（而这个补丁很可能无法整洁的整合入历史，因为补丁中的修改已经存在于某个地方了）。\n\n在本例中另一种简单的方法是使用 git pull --rebase 命令而不是直接 git pull。 又或者你可以自己手动完成这个过程，先 git fetch，再 git rebase teamone/master。\n\n如果你习惯使用 git pull ，同时又希望默认使用选项 --rebase，你可以执行这条语句 git config --global pull.rebase true 来更改 pull.rebase 的默认配置。\n\n如果你只对不会离开你电脑的提交执行变基，那就不会有事。 如果你对已经推送过的提交执行变基，但别人没有基于它的提交，那么也不会有事。 如果你对已经推送至共用仓库的提交上执行变基命令，并因此丢失了一些别人的开发所基于的提交， 那你就有大麻烦了，你的同事也会因此鄙视你。\n\n如果你或你的同事在某些情形下决意要这么做，请一定要通知每个人执行 git pull --rebase 命令，这样尽管不能避免伤痛，但能有所缓解。\n\n\n# 变基 vs. 合并\n\n至此，你已在实战中学习了变基和合并的用法，你一定会想问，到底哪种方式更好。 在回答这个问题之前，让我们退后一步，想讨论一下提交历史到底意味着什么。\n\n有一种观点认为，仓库的提交历史即是 记录实际发生过什么。 它是针对历史的文档，本身就有价值，不能乱改。 从这个角度看来，改变提交历史是一种亵渎，你使用 谎言 掩盖了实际发生过的事情。 如果由合并产生的提交历史是一团糟怎么办？ 既然事实就是如此，那么这些痕迹就应该被保留下来，让后人能够查阅。\n\n另一种观点则正好相反，他们认为提交历史是 项目过程中发生的事。 没人会出版一本书的第一版草稿，软件维护手册也是需要反复修订才能方便使用。 持这一观点的人会使用 rebase 及 filter-branch 等工具来编写故事，怎么方便后来的读者就怎么写。\n\n现在，让我们回到之前的问题上来，到底合并还是变基好？希望你能明白，这并没有一个简单的答案。 Git 是一个非常强大的工具，它允许你对提交历史做许多事情，但每个团队、每个项目对此的需求并不相同。 既然你已经分别学习了两者的用法，相信你能够根据实际情况作出明智的选择。\n\n总的原则是，只对尚未推送或分享给别人的本地修改执行变基操作清理历史， 从不对已推送至别处的提交执行变基操作，这样，你才能享受到两种方式带来的便利。",normalizedContent:"# git分支-变基\n\n在 git 中整合来自不同分支的修改主要有两种方法：merge 以及 rebase。 在本节中我们将学习什么是“变基”，怎样使用“变基”，并将展示该操作的惊艳之处，以及指出在何种情况下你应避免使用它。\n\n\n# 变基的基本操作\n\n请回顾之前在 分支的合并 中的一个例子，你会看到开发任务分叉到两个不同分支，又各自提交了更新。\n\n\n\n图0. 分叉的提交历史 ▲\n\n之前介绍过，整合分支最容易的方法是 merge 命令。 它会把两个分支的最新快照（c3 和 c4）以及二者最近的共同祖先（c2）进行三方合并，合并的结果是生成一个新的快照（并提交）。\n\n\n\n图1. 通过合并操作来整合分叉的历史 ▲\n\n\n# 概念\n\n变基就是：将某一分支上的所有修改复制到另一分支上\n\n除了merge，还有一种方法：你可以提取在 c4 中引入的补丁和修改，然后在 c3 的基础上应用一次。 在 git 中，这种操作就叫做 变基（rebase）。 你可以使用 rebase 命令将提交到某一分支上的所有修改都移到另一分支上，就好像“重新播放”一样。\n\n在这个例子中，你可以检出 experiment 分支，然后将它变基到 master 分支上：\n\n$ git checkout experiment\n$ git rebase master # 将experiment上的修改变基到master分支上（将experiment的提交移动到master上。）\nfirst, rewinding head to replay your work on top of it...\napplying: added staged command\n\n\n1\n2\n3\n4\n\n\n它的原理是首先找到这两个分支（即当前分支 experiment、变基操作的目标基底分支 master） 的最近共同祖先 c2，然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件， 然后将当前分支指向目标基底 c3, 最后以此将之前另存为临时文件的修改依序应用。 （译注：写明了 commit id，以便理解，下同）\n\n\n# 原理\n\n 1. 找到当前分支和目标分支的最近共同祖先\n\n 2. 对比当前分支相对于该共同祖先的历次提交\n\n 3. 提取相应的修改并存为临时文件\n\n 4. 将当前分支指向目标分支\n\n 5. 将之前临时文件的修改依序应用\n\n\n\n图2.将 c4 中的修改变基到 c3 上 ▲\n\n现在回到 master 分支，进行一次快进合并。\n\n$ git checkout master\n$ git merge experiment\n\n\n1\n2\n\n\n\n\n图3.master 分支的快进合并 ▲\n\n\n# 步骤\n\n先检出源分支，将源分支的修改变基到目标分支。切回目标分支，进行一次快进合并\n\n# 示意：\ngit checkout <源分支>\ngit (源分支的修改)rebase(到) <目标分支>\ngit checkout <目标分支>\ngit merge <源分支>\n\n\n1\n2\n3\n4\n5\n\n\n此时，c4' 指向的快照就和 the merge example 中 c5 指向的快照一模一样了。 这两种整合方法的最终结果没有任何区别，但是 变基使得提交历史更加整洁。 你在查看一个经过变基的分支的历史记录时会发现，尽管实际的开发工作是并行的， 但它们看上去就像是串行的一样，提交历史是一条直线没有分叉。\n\n一般我们这样做的目的是为了确保在向远程分支推送时能保持提交历史的整洁——例如向某个其他人维护的项目贡献代码时。 在这种情况下，你首先在自己的分支里进行开发，当开发完成时你需要先将你的代码变基到 origin/master 上，然后再向主项目提交修改。 这样的话，该项目的维护者就不再需要进行整合工作，只需要快进合并便可。\n\n请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样的，只不过提交历史不同罢了。 变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。\n\n\n# 优点\n\n变基的优点： 使提交记录更加整洁。\n\n\n# 更有趣的变基例子\n\n在对两个分支进行变基时，所生成的“重放”并不一定要在目标分支上应用，你也可以指定另外的一个分支进行应用。 就像 从一个主题分支里再分出一个主题分支的提交历史 中的例子那样。 你创建了一个主题分支 server，为服务端添加了一些功能，提交了 c3 和 c4。 然后从 c3 上创建了主题分支 client，为客户端添加了一些功能，提交了 c8 和 c9。 最后，你回到 server 分支，又提交了 c10。\n\n\n# 更有趣的变基例子\n\n在对两个分支进行变基时，所生成的“重放”并不一定要在目标分支上应用，你也可以指定另外的一个分支进行应用。 就像 从一个主题分支里再分出一个主题分支的提交历史 中的例子那样。 你创建了一个主题分支 server，为服务端添加了一些功能，提交了 c3 和 c4。 然后从 c3 上创建了主题分支 client，为客户端添加了一些功能，提交了 c8 和 c9。 最后，你回到 server 分支，又提交了 c10。\n\n\n\n图4.从一个主题分支里再分出一个主题分支的提交历史 ▲\n\n假设你希望将 client 中的修改合并到主分支并发布，但暂时并不想合并 server 中的修改， 因为它们还需要经过更全面的测试。这时，你就可以使用 git rebase 命令的 --onto 选项， 选中在 client 分支里但不在 server 分支里的修改（即 c8 和 c9），将它们在 master 分支上重放：\n\n$ git rebase --onto master server client\n\n\n1\n\n\n以上命令的意思是：“取出 client 分支，找出它从 server 分支分歧之后的补丁， 然后把这些补丁在 master 分支上重放一遍，让 client 看起来像直接基于 master 修改一样”。这理解起来有一点复杂，不过效果非常酷。\n\n\n# --onto选项\n\n选中c分支中的但不在b分支里的修改，应用到a分支。\n\n\n\n图5.截取主题分支上的另一个主题分支，然后变基到其他分支 ▲\n\n现在可以快进合并 master 分支了。（如图 快进合并 master 分支，使之包含来自 client 分支的修改）：\n\n$ git checkout master\n$ git merge client\n\n\n1\n2\n\n\n\n\n图6.快进合并 `master` 分支，使之包含来自 `client` 分支的修改 ▲\n\n\n# 省去先切换到源分支的步骤\n\ngit rebase <目标(当前)分支> <源分支> # 将源分支变基到目标分支。执行此命令后会自动切换到源分支\ngit checkout <目标分支>\ngit merge <源分支>\n\n\n1\n2\n3\n\n\n注意：使用这个方法要确保源分支上的代码是最新的。\n\n接下来你决定将 server 分支中的修改也整合进来。 使用 git rebase <basebranch> <topicbranch> 命令可以直接将主题分支 （即本例中的 server）变基到目标分支（即 master）上。 这样做能省去你先切换到 server 分支，再对其执行变基命令的多个步骤。\n\n$ git rebase master server\n\n\n1\n\n\n如图 将 server 中的修改变基到 master 上 所示，server 中的代码被“续”到了 master 后面。\n\n\n\n图7.将 `server` 中的修改变基到 `master` 上 ▲\n\n然后就可以快进合并主分支 master 了：\n\n$ git checkout master\n$ git merge server\n\n\n1\n2\n\n\n至此，client 和 server 分支中的修改都已经整合到主分支里了， 你可以删除这两个分支，最终提交历史会变成图 最终的提交历史 中的样子：\n\n$ git branch -d client\n$ git branch -d server\n\n\n1\n2\n\n\n\n\n图8. 最终的提交历史 ▲\n\n\n# 变基的风险\n\n\n# 金科玉律\n\n呃，奇妙的变基也并非完美无缺，要用它得遵守一条准则：\n\n如果提交存在于你的仓库之外，而别人可能基于这些提交进行开发，那么不要执行变基。\n\n如果你遵循这条金科玉律，就不会出差错。 否则，人民群众会仇恨你，你的朋友和家人也会嘲笑你，唾弃你。\n\n提示\n\n例如：几个人同时在一个主题分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 如果你已经将提交推送至某个仓库，而其他人也已经从该仓库拉取提交并进行了后续工作，此时，如果你用 git rebase 命令重新整理了提交并再次推送，你的同伴因此将不得不再次将他们手头的工作与你的提交进行整合，如果接下来你还要拉取并整合他们修改过的提交，事情就会变得一团糟。\n\n让我们来看一个在公开的仓库上执行变基操作所带来的问题。 假设你从一个中央服务器克隆然后在它的基础上进行了一些开发。 你的提交历史如图所示：\n\n\n\n图9. 克隆一个仓库，然后在它的基础上进行了一些开发 ▲\n\n然后，某人又向中央服务器提交了一些修改，其中还包括一次合并。 你抓取了这些在远程分支上的修改，并将其合并到你本地的开发分支，然后你的提交历史就会变成这样：\n\n\n\n图10. 抓取别人的提交，合并到自己的开发分支 ▲\n\n接下来，这个人又决定把合并操作回滚，改用变基；继而又用 git push --force 命令覆盖了服务器上的提交历史。 之后你从服务器抓取更新，会发现多出来一些新的提交。\n\n\n\n图11. 有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交 ▲\n\n结果就是你们两人的处境都十分尴尬。 如果你执行 git pull 命令，你将合并来自两条提交历史的内容，生成一个新的合并提交，最终仓库会如图所示：\n\n\n\n图12. 你将相同的内容又合并了一次，生成了一个新的提交 ▲\n\n此时如果你执行 git log 命令，你会发现有两个提交的作者、日期、日志居然是一样的，这会令人感到混乱。 此外，如果你将这一堆又推送到服务器上，你实际上是将那些已经被变基抛弃的提交又找了回来，这会令人感到更加混乱。 很明显对方并不想在提交历史中看到 c4 和 c6，因为之前就是他把这两个提交通过变基丢弃的。\n\n\n# 用变基解决变基\n\n如果你 真的 遭遇了类似的处境，git 还有一些高级魔法可以帮到你。 如果团队中的某人强制推送并覆盖了一些你所基于的提交，你需要做的就是检查你做了哪些修改，以及他们覆盖了哪些修改。\n\n实际上，git 除了对整个提交计算 sha-1 校验和以外，也对本次提交所引入的修改计算了校验和——即 “patch-id”。\n\n如果你拉取被覆盖过的更新并将你手头的工作基于此进行变基的话，一般情况下 git 都能成功分辨出哪些是你的修改，并把它们应用到新分支上。\n\n举个例子，如果遇到前面提到的 有人推送了经过变基的提交，并丢弃了你的本地开发所基于的一些提交 那种情境，如果我们不是执行合并，而是执行 git rebase teamone/master, git 将会：\n\n * 检查哪些提交是我们的分支上独有的（c2，c3，c4，c6，c7）\n * 检查其中哪些提交不是合并操作的结果（c2，c3，c4）\n * 检查哪些提交在对方覆盖更新时并没有被纳入目标分支（只有 c2 和 c3，因为 c4 其实就是 c4'）\n * 把查到的这些提交应用在 teamone/master 上面\n\n从而我们将得到与 你将相同的内容又合并了一次，生成了一个新的提交 中不同的结果，如图 在一个被变基然后强制推送的分支上再次执行变基 所示。\n\n\n\n图13. 在一个被变基然后强制推送的分支上再次执行变基 ▲\n\n要想上述方案有效，还需要对方在变基时确保 c4' 和 c4 是几乎一样的。 否则变基操作将无法识别，并新建另一个类似 c4 的补丁（而这个补丁很可能无法整洁的整合入历史，因为补丁中的修改已经存在于某个地方了）。\n\n在本例中另一种简单的方法是使用 git pull --rebase 命令而不是直接 git pull。 又或者你可以自己手动完成这个过程，先 git fetch，再 git rebase teamone/master。\n\n如果你习惯使用 git pull ，同时又希望默认使用选项 --rebase，你可以执行这条语句 git config --global pull.rebase true 来更改 pull.rebase 的默认配置。\n\n如果你只对不会离开你电脑的提交执行变基，那就不会有事。 如果你对已经推送过的提交执行变基，但别人没有基于它的提交，那么也不会有事。 如果你对已经推送至共用仓库的提交上执行变基命令，并因此丢失了一些别人的开发所基于的提交， 那你就有大麻烦了，你的同事也会因此鄙视你。\n\n如果你或你的同事在某些情形下决意要这么做，请一定要通知每个人执行 git pull --rebase 命令，这样尽管不能避免伤痛，但能有所缓解。\n\n\n# 变基 vs. 合并\n\n至此，你已在实战中学习了变基和合并的用法，你一定会想问，到底哪种方式更好。 在回答这个问题之前，让我们退后一步，想讨论一下提交历史到底意味着什么。\n\n有一种观点认为，仓库的提交历史即是 记录实际发生过什么。 它是针对历史的文档，本身就有价值，不能乱改。 从这个角度看来，改变提交历史是一种亵渎，你使用 谎言 掩盖了实际发生过的事情。 如果由合并产生的提交历史是一团糟怎么办？ 既然事实就是如此，那么这些痕迹就应该被保留下来，让后人能够查阅。\n\n另一种观点则正好相反，他们认为提交历史是 项目过程中发生的事。 没人会出版一本书的第一版草稿，软件维护手册也是需要反复修订才能方便使用。 持这一观点的人会使用 rebase 及 filter-branch 等工具来编写故事，怎么方便后来的读者就怎么写。\n\n现在，让我们回到之前的问题上来，到底合并还是变基好？希望你能明白，这并没有一个简单的答案。 git 是一个非常强大的工具，它允许你对提交历史做许多事情，但每个团队、每个项目对此的需求并不相同。 既然你已经分别学习了两者的用法，相信你能够根据实际情况作出明智的选择。\n\n总的原则是，只对尚未推送或分享给别人的本地修改执行变基操作清理历史， 从不对已推送至别处的提交执行变基操作，这样，你才能享受到两种方式带来的便利。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git工具-查看修订版本",frontmatter:{title:"Git工具-查看修订版本",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/c984d1/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/80.Git%E5%B7%A5%E5%85%B7-%E6%9F%A5%E7%9C%8B%E4%BF%AE%E8%AE%A2%E7%89%88%E6%9C%AC.html",relativePath:"《Git》学习笔记/20.文档笔记/80.Git工具-查看修订版本.md",key:"v-03a9a258",path:"/pages/c984d1/",headers:[{level:2,title:"单个修订版本",slug:"单个修订版本",normalizedTitle:"单个修订版本",charIndex:91},{level:2,title:"简短的 SHA-1",slug:"简短的-sha-1",normalizedTitle:"简短的 sha-1",charIndex:181},{level:3,title:"查看给定SHA-1值的提交",slug:"查看给定sha-1值的提交",normalizedTitle:"查看给定sha-1值的提交",charIndex:956},{level:2,title:"分支引用",slug:"分支引用",normalizedTitle:"分支引用",charIndex:2177},{level:3,title:"查看最后一次提交",slug:"查看最后一次提交",normalizedTitle:"查看最后一次提交",charIndex:2252},{level:2,title:"引用日志",slug:"引用日志",normalizedTitle:"引用日志",charIndex:2696},{level:3,title:"HEAD的指向历史",slug:"head的指向历史",normalizedTitle:"head的指向历史",charIndex:2705},{level:2,title:"祖先引用",slug:"祖先引用",normalizedTitle:"祖先引用",charIndex:4613},{level:2,title:"提交区间",slug:"提交区间",normalizedTitle:"提交区间",charIndex:6634},{level:3,title:"双点",slug:"双点",normalizedTitle:"双点",charIndex:6735},{level:3,title:"多点",slug:"多点",normalizedTitle:"多点",charIndex:7606},{level:3,title:"三点",slug:"三点",normalizedTitle:"三点",charIndex:8032}],headersStr:"单个修订版本 简短的 SHA-1 查看给定SHA-1值的提交 分支引用 查看最后一次提交 引用日志 HEAD的指向历史 祖先引用 提交区间 双点 多点 三点",content:"# Git工具-查看修订版本\n\nGit 能够以多种方式来指定单个提交、一组提交、或者一定范围内的提交。 了解它们并不是必需的，但是了解一下总没坏处。\n\n修订版本指的是：提交\n\n\n# 单个修订版本\n\n你可以通过任意一个提交的 40 个字符的完整 SHA-1 散列值来指定它， 不过还有很多更人性化的方式来做同样的事情。本节将会介绍获取单个提交的多种方法。\n\n\n# 简短的 SHA-1\n\nGit 十分智能，你只需要提供 SHA-1 的前几个字符就可以获得对应的那次提交， 当然你提供的 SHA-1 字符数量不得少于 4 个，并且没有歧义——也就是说， 当前对象数据库中没有其它对象以这段 SHA-1 开头。\n\n例如，要查看你知道其中添加了某个功能的提交，首先运行 git log 命令来定位该提交：\n\n$ git log\ncommit 734713bc047d87bf7eac9674765ae793478c50d3\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Fri Jan 2 18:32:33 2009 -0800\n\n    fixed refs handling, added gc auto, updated tests\n\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nMerge: 1c002dd... 35cfb2b...\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Thu Dec 11 15:08:43 2008 -0800\n\n    Merge commit 'phedders/rdocs'\n\ncommit 1c002dd4b536e7479fe34593e72e6c6c1819e53b\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Thu Dec 11 14:58:32 2008 -0800\n\n    added some blame and merge stuff\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 查看给定SHA-1值的提交\n\n在本例中，假设你想要的提交其 SHA-1 以 1c002dd.... 开头， 那么你可以用如下几种 git show 的变体来检视该提交（假设简短的版本没有歧义）：\n\n$ git show 1c002dd4b536e7479fe34593e72e6c6c1819e53b\n$ git show 1c002dd4b536e7479f\n$ git show 1c002d\n\n\n1\n2\n3\n\n\nGit 可以为 SHA-1 值生成出简短且唯一的缩写。 如果你在 git log 后加上 --abbrev-commit 参数，输出结果里就会显示简短且唯一的值； 默认使用七个字符，不过有时为了避免 SHA-1 的歧义，会增加字符数：\n\n$ git log --abbrev-commit --pretty=oneline\nca82a6d changed the version number\n085bb3b removed unnecessary test code\na11bef0 first commit\n\n\n1\n2\n3\n4\n\n\n通常 8 到 10 个字符就已经足够在一个项目中避免 SHA-1 的歧义。 例如，到 2019 年 2 月为止，Linux 内核这个相当大的 Git 项目， 其对象数据库中有超过 875,000 个提交，包含七百万个对象，也只需要前 12 个字符就能保证唯一性。\n\nNOTE   关于 SHA-1 的简短说明许多人觉得他们的仓库里有可能出现两个不同的对象其 SHA-1 值相同。\n       然后呢？如果你真的向仓库里提交了一个对象，它跟之前的某个 不同 对象的 SHA-1 值相同， GIT\n       会发现该对象的散列值已经存在于仓库里了，于是就会认为该对象被写入，然后直接使用它。\n       如果之后你想检出那个对象时，你将得到先前那个对象的数据。但是这种情况发生的概率十分渺小。 SHA-1 摘要长度是 20\n       字节，也就是 160 位。 2^80 个随机哈希对象才有 50% 的概率出现一次冲突 （计算冲突机率的公式是 P =\n       (N(N-1)/2) * (1/2^160)) ）。 2^80 是 1.2 X\n       10^24，也就是一亿亿亿，这是地球上沙粒总数的 1200 倍。举例说一下怎样才能产生一次 SHA-1 冲突。\n       如果地球上 65 亿个人类都在编程，每人每秒都在产生等价于整个 LINUX 内核历史（650 万个 GIT\n       对象）的代码， 并将之提交到一个巨大的 GIT 仓库里面，这样持续两年的时间才会产生足够的对象， 使其拥有 50%\n       的概率产生一次 SHA-1 对象冲突， 这比你编程团队的成员同一个晚上在互不相干的意外中被狼袭击并杀死的机率还要小。\n       \n\n\n# 分支引用\n\n引用特定提交的一种直接方法是，若它是一个分支的顶端的提交， 那么可以在任何需要引用该提交的 Git 命令中直接使用该分支的名称。\n\n\n# 查看最后一次提交\n\n例如，你想要查看一个分支的最后一次提交的对象，假设 topic1 分支指向提交 ca82a6d... ， 那么以下的命令是等价的：\n\n$ git show ca82a6dff817ec66f44342007202690a93763949\n$ git show topic1  # topic1是分支名\n\n\n1\n2\n\n\n如果你想知道某个分支指向哪个特定的 SHA-1，或者想看任何一个例子中被简写的 SHA-1， 你可以使用一个叫做 rev-parse 的 Git 探测工具。 你可以在 Git 内部原理 中查看更多关于探测工具的信息。 简单来说，rev-parse 是为了底层操作而不是日常操作设计的。 不过，有时你想看 Git 现在到底处于什么状态时，它可能会很有用。 你可以在你的分支上执行 rev-parse\n\n$ git rev-parse topic1\nca82a6dff817ec66f44342007202690a93763949\n\n\n1\n2\n\n\n\n# 引用日志\n\n\n# HEAD的指向历史\n\n当你在工作时， Git 会在后台保存一个引用日志（reflog）， 引用日志记录了最近几个月你的 HEAD 和分支引用所指向的历史。\n\n你可以使用 git reflog 来查看引用日志\n\n$ git reflog\n734713b HEAD@{0}: commit: fixed refs handling, added gc auto, updated\nd921970 HEAD@{1}: merge phedders/rdocs: Merge made by the 'recursive' strategy.\n1c002dd HEAD@{2}: commit: added some blame and merge stuff\n1c36188 HEAD@{3}: rebase -i (squash): updating HEAD\n95df984 HEAD@{4}: commit: # This is a combination of two commits.\n1c36188 HEAD@{5}: rebase -i (squash): updating HEAD\n7e05da5 HEAD@{6}: rebase -i (pick): updating HEAD\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n每当你的 HEAD 所指向的位置发生了变化，Git 就会将这个信息存储到引用日志这个历史记录里。 你也可以通过 reflog 数据来获取之前的提交历史。 如果你想查看仓库中 HEAD 在五次前的所指向的提交，你可以使用 @{n} 来引用 reflog 中输出的提交记录。\n\n$ git show HEAD@{5}\n\n\n1\n\n\n你同样可以使用这个语法来查看某个分支在一定时间前的位置。 例如，查看你的 master 分支在昨天的时候指向了哪个提交，你可以输入\n\n$ git show master@{yesterday}\n\n\n1\n\n\n就会显示昨天 master 分支的顶端指向了哪个提交。 这个方法只对还在你引用日志里的数据有用，所以不能用来查好几个月之前的提交。\n\n可以运行 git log -g 来查看类似于 git log 输出格式的引用日志信息：\n\n$ git log -g master\ncommit 734713bc047d87bf7eac9674765ae793478c50d3\nReflog: master@{0} (Scott Chacon <schacon@gmail.com>)\nReflog message: commit: fixed refs handling, added gc auto, updated\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Fri Jan 2 18:32:33 2009 -0800\n\n    fixed refs handling, added gc auto, updated tests\n\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nReflog: master@{1} (Scott Chacon <schacon@gmail.com>)\nReflog message: merge phedders/rdocs: Merge made by recursive.\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Thu Dec 11 15:08:43 2008 -0800\n\n    Merge commit 'phedders/rdocs'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n值得注意的是，引用日志只存在于本地仓库，它只是一个记录你在 自己 的仓库里做过什么的日志。 其他人拷贝的仓库里的引用日志不会和你的相同，而你新克隆一个仓库的时候，引用日志是空的，因为你在仓库里还没有操作。 git show HEAD@{2.months.ago} 这条命令只有在你克隆了一个项目至少两个月时才会显示匹配的提交—— 如果你刚刚克隆了仓库，那么它将不会有任何结果返回。\n\nTIP   将引用日志想作 GIT 版的 SHELL 历史记录如果你有 UNIX 或者 LINUX 的背景，不妨将引用日志想作\n      GIT 版的 SHELL 历史记录， 重点在于仅与你和你的会话相关，而与他人无关。\n      \n\n\n# 祖先引用\n\n祖先引用是另一种指明一个提交的方式。 如果你在引用的尾部加上一个 ^（脱字符）， Git 会将其解析为该引用的上一个提交。 假设你的提交历史是：\n\n$ git log --pretty=format:'%h %s' --graph\n* 734713b fixed refs handling, added gc auto, updated tests\n*   d921970 Merge commit 'phedders/rdocs'\n|\\\n| * 35cfb2b Some rdoc changes\n* | 1c002dd added some blame and merge stuff\n|/\n* 1c36188 ignore *.gem\n* 9b29157 add open3_detach to gemspec file list\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n你可以使用 HEAD^ 来查看上一个提交，也就是 “HEAD 的父提交”：\n\n$ git show HEAD^\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nMerge: 1c002dd... 35cfb2b...\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Thu Dec 11 15:08:43 2008 -0800\n\n    Merge commit 'phedders/rdocs'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nNOTE   在 WINDOWS 上转义脱字符在 WINDOWS 的 CMD.EXE 中，^ 是一个特殊字符，因此需要区别对待。\n       你可以双写它或者将提交引用放在引号中：$ GIT SHOW HEAD^ # 在 WINDOWS 上无法工作 $ GIT\n       SHOW HEAD^^ # 可以 $ GIT SHOW \"HEAD^\" # 可以\n       \n\n你也可以在 ^ 后面添加一个数字来指明想要 哪一个 父提交——例如 d921970^2 代表 “d921970 的第二父提交” 这个语法只适用于合并的提交，因为合并提交会有多个父提交。 合并提交的第一父提交是你合并时所在分支（通常为 master），而第二父提交是你所合并的分支（例如 topic）：\n\n$ git show d921970^\ncommit 1c002dd4b536e7479fe34593e72e6c6c1819e53b\nAuthor: Scott Chacon <schacon@gmail.com>\nDate:   Thu Dec 11 14:58:32 2008 -0800\n\n    added some blame and merge stuff\n\n$ git show d921970^2\ncommit 35cfb2b795a55793d7cc56a6cc2060b4bb732548\nAuthor: Paul Hedderly <paul+git@mjr.org>\nDate:   Wed Dec 10 22:22:03 2008 +0000\n\n    Some rdoc changes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n另一种指明祖先提交的方法是 ~（波浪号）。 同样是指向第一父提交，因此 HEAD~ 和 HEAD^ 是等价的。 而区别在于你在后面加数字的时候。 HEAD~2 代表“第一父提交的第一父提交”，也就是“祖父提交”——Git 会根据你指定的次数获取对应的第一父提交。 例如，在之前的列出的提交历史中，HEAD~3 就是\n\n$ git show HEAD~3\ncommit 1c3618887afb5fbcbea25b7c013f4e2114448b8d\nAuthor: Tom Preston-Werner <tom@mojombo.com>\nDate:   Fri Nov 7 13:47:59 2008 -0500\n\n    ignore *.gem\n\n\n1\n2\n3\n4\n5\n6\n\n\n也可以写成 HEAD~~~，也是第一父提交的第一父提交的第一父提交：\n\n$ git show HEAD~~~\ncommit 1c3618887afb5fbcbea25b7c013f4e2114448b8d\nAuthor: Tom Preston-Werner <tom@mojombo.com>\nDate:   Fri Nov 7 13:47:59 2008 -0500\n\n    ignore *.gem\n\n\n1\n2\n3\n4\n5\n6\n\n\n你也可以组合使用这两个语法——你可以通过 HEAD~3^2 来取得之前引用的第二父提交（假设它是一个合并提交）。\n\n\n# 提交区间\n\n你已经学会如何单次的提交，现在来看看如何指明一定区间的提交。 当你有很多分支时，这对管理你的分支时十分有用， 你可以用提交区间来解决“这个分支还有哪些提交尚未合并到主分支？”的问题\n\n\n# 双点\n\n最常用的指明提交区间语法是双点。 这种语法可以让 Git 选出在一个分支中而不在另一个分支中的提交。 例如，你有如下的提交历史 Example history for range selection.\n\n\n\nFigure 137. Example history for range selection.\n\n你想要查看 experiment 分支中还有哪些提交尚未被合并入 master 分支。 你可以使用 master..experiment 来让 Git 显示这些提交。也就是“在 experiment 分支中而不在 master 分支中的提交”。 为了使例子简单明了，我使用了示意图中提交对象的字母来代替真实日志的输出，所以会显示：\n\n$ git log master..experiment\nD\nC\n\n\n1\n2\n3\n\n\n反过来，如果你想查看在 master 分支中而不在 experiment 分支中的提交，你只要交换分支名即可。 experiment..master 会显示在 master 分支中而不在 experiment 分支中的提交：\n\n$ git log experiment..master\nF\nE\n\n\n1\n2\n3\n\n\n# 查看即将推送到远端的内容\n\n这可以让你保持 experiment 分支跟随最新的进度以及查看你即将合并的内容。 另一个常用的场景是查看你即将推送到远端的内容：\n\n$ git log origin/master..HEAD\n\n\n1\n\n\n这个命令会输出在你当前分支中而不在远程 origin 中的提交。 如果你执行 git push 并且你的当前分支正在跟踪 origin/master，由 git log origin/master..HEAD 所输出的提交就是会被传输到远端服务器的提交。如果你留空了其中的一边， Git 会默认为 HEAD。 例如， git log origin/master.. 将会输出与之前例子相同的结果 —— Git 使用 HEAD 来代替留空的一边。\n\n\n# 多点\n\n双点语法很好用，但有时候你可能需要两个以上的分支才能确定你所需要的修订， 比如查看哪些提交是被包含在某些分支中的一个，但是不在你当前的分支上。 Git 允许你在任意引用前加上 ^ 字符或者 --not 来指明你不希望提交被包含其中的分支。 因此下列三个命令是等价的：\n\n$ git log refA..refB\n$ git log ^refA refB\n$ git log refB --not refA\n\n\n1\n2\n3\n\n\n这个语法很好用，因为你可以在查询中指定超过两个的引用，这是双点语法无法实现的。 比如，你想查看所有被 refA 或 refB 包含的但是不被 refC 包含的提交，你可以使用以下任意一个命令：\n\n$ git log refA refB ^refC\n$ git log refA refB --not refC\n\n\n1\n2\n\n\n这就构成了一个十分强大的修订查询系统，你可以通过它来查看你的分支里包含了哪些东西。\n\n\n# 三点\n\n最后一种主要的区间选择语法是三点，这个语法可以选择出被两个引用 之一 包含但又不被两者同时包含的提交。 再看看之前双点例子中的提交历史。 如果你想看 master 或者 experiment 中包含的但不是两者共有的提交，你可以执行：\n\n$ git log master...experiment\nF\nE\nD\nC\n\n\n1\n2\n3\n4\n5\n\n\n这和通常 log 按日期排序的输出一样，仅仅给出了4个提交的信息。\n\n这种情形下，log 命令的一个常用参数是 --left-right，它会显示每个提交到底处于哪一侧的分支。 这会让输出数据更加清晰。\n\n$ git log --left-right master...experiment\n< F\n< E\n> D\n> C\n\n\n1\n2\n3\n4\n5\n\n\n有了这些工具，你就可以十分方便地查看你 Git 仓库中的提交。",normalizedContent:"# git工具-查看修订版本\n\ngit 能够以多种方式来指定单个提交、一组提交、或者一定范围内的提交。 了解它们并不是必需的，但是了解一下总没坏处。\n\n修订版本指的是：提交\n\n\n# 单个修订版本\n\n你可以通过任意一个提交的 40 个字符的完整 sha-1 散列值来指定它， 不过还有很多更人性化的方式来做同样的事情。本节将会介绍获取单个提交的多种方法。\n\n\n# 简短的 sha-1\n\ngit 十分智能，你只需要提供 sha-1 的前几个字符就可以获得对应的那次提交， 当然你提供的 sha-1 字符数量不得少于 4 个，并且没有歧义——也就是说， 当前对象数据库中没有其它对象以这段 sha-1 开头。\n\n例如，要查看你知道其中添加了某个功能的提交，首先运行 git log 命令来定位该提交：\n\n$ git log\ncommit 734713bc047d87bf7eac9674765ae793478c50d3\nauthor: scott chacon <schacon@gmail.com>\ndate:   fri jan 2 18:32:33 2009 -0800\n\n    fixed refs handling, added gc auto, updated tests\n\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nmerge: 1c002dd... 35cfb2b...\nauthor: scott chacon <schacon@gmail.com>\ndate:   thu dec 11 15:08:43 2008 -0800\n\n    merge commit 'phedders/rdocs'\n\ncommit 1c002dd4b536e7479fe34593e72e6c6c1819e53b\nauthor: scott chacon <schacon@gmail.com>\ndate:   thu dec 11 14:58:32 2008 -0800\n\n    added some blame and merge stuff\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 查看给定sha-1值的提交\n\n在本例中，假设你想要的提交其 sha-1 以 1c002dd.... 开头， 那么你可以用如下几种 git show 的变体来检视该提交（假设简短的版本没有歧义）：\n\n$ git show 1c002dd4b536e7479fe34593e72e6c6c1819e53b\n$ git show 1c002dd4b536e7479f\n$ git show 1c002d\n\n\n1\n2\n3\n\n\ngit 可以为 sha-1 值生成出简短且唯一的缩写。 如果你在 git log 后加上 --abbrev-commit 参数，输出结果里就会显示简短且唯一的值； 默认使用七个字符，不过有时为了避免 sha-1 的歧义，会增加字符数：\n\n$ git log --abbrev-commit --pretty=oneline\nca82a6d changed the version number\n085bb3b removed unnecessary test code\na11bef0 first commit\n\n\n1\n2\n3\n4\n\n\n通常 8 到 10 个字符就已经足够在一个项目中避免 sha-1 的歧义。 例如，到 2019 年 2 月为止，linux 内核这个相当大的 git 项目， 其对象数据库中有超过 875,000 个提交，包含七百万个对象，也只需要前 12 个字符就能保证唯一性。\n\nnote   关于 sha-1 的简短说明许多人觉得他们的仓库里有可能出现两个不同的对象其 sha-1 值相同。\n       然后呢？如果你真的向仓库里提交了一个对象，它跟之前的某个 不同 对象的 sha-1 值相同， git\n       会发现该对象的散列值已经存在于仓库里了，于是就会认为该对象被写入，然后直接使用它。\n       如果之后你想检出那个对象时，你将得到先前那个对象的数据。但是这种情况发生的概率十分渺小。 sha-1 摘要长度是 20\n       字节，也就是 160 位。 2^80 个随机哈希对象才有 50% 的概率出现一次冲突 （计算冲突机率的公式是 p =\n       (n(n-1)/2) * (1/2^160)) ）。 2^80 是 1.2 x\n       10^24，也就是一亿亿亿，这是地球上沙粒总数的 1200 倍。举例说一下怎样才能产生一次 sha-1 冲突。\n       如果地球上 65 亿个人类都在编程，每人每秒都在产生等价于整个 linux 内核历史（650 万个 git\n       对象）的代码， 并将之提交到一个巨大的 git 仓库里面，这样持续两年的时间才会产生足够的对象， 使其拥有 50%\n       的概率产生一次 sha-1 对象冲突， 这比你编程团队的成员同一个晚上在互不相干的意外中被狼袭击并杀死的机率还要小。\n       \n\n\n# 分支引用\n\n引用特定提交的一种直接方法是，若它是一个分支的顶端的提交， 那么可以在任何需要引用该提交的 git 命令中直接使用该分支的名称。\n\n\n# 查看最后一次提交\n\n例如，你想要查看一个分支的最后一次提交的对象，假设 topic1 分支指向提交 ca82a6d... ， 那么以下的命令是等价的：\n\n$ git show ca82a6dff817ec66f44342007202690a93763949\n$ git show topic1  # topic1是分支名\n\n\n1\n2\n\n\n如果你想知道某个分支指向哪个特定的 sha-1，或者想看任何一个例子中被简写的 sha-1， 你可以使用一个叫做 rev-parse 的 git 探测工具。 你可以在 git 内部原理 中查看更多关于探测工具的信息。 简单来说，rev-parse 是为了底层操作而不是日常操作设计的。 不过，有时你想看 git 现在到底处于什么状态时，它可能会很有用。 你可以在你的分支上执行 rev-parse\n\n$ git rev-parse topic1\nca82a6dff817ec66f44342007202690a93763949\n\n\n1\n2\n\n\n\n# 引用日志\n\n\n# head的指向历史\n\n当你在工作时， git 会在后台保存一个引用日志（reflog）， 引用日志记录了最近几个月你的 head 和分支引用所指向的历史。\n\n你可以使用 git reflog 来查看引用日志\n\n$ git reflog\n734713b head@{0}: commit: fixed refs handling, added gc auto, updated\nd921970 head@{1}: merge phedders/rdocs: merge made by the 'recursive' strategy.\n1c002dd head@{2}: commit: added some blame and merge stuff\n1c36188 head@{3}: rebase -i (squash): updating head\n95df984 head@{4}: commit: # this is a combination of two commits.\n1c36188 head@{5}: rebase -i (squash): updating head\n7e05da5 head@{6}: rebase -i (pick): updating head\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n每当你的 head 所指向的位置发生了变化，git 就会将这个信息存储到引用日志这个历史记录里。 你也可以通过 reflog 数据来获取之前的提交历史。 如果你想查看仓库中 head 在五次前的所指向的提交，你可以使用 @{n} 来引用 reflog 中输出的提交记录。\n\n$ git show head@{5}\n\n\n1\n\n\n你同样可以使用这个语法来查看某个分支在一定时间前的位置。 例如，查看你的 master 分支在昨天的时候指向了哪个提交，你可以输入\n\n$ git show master@{yesterday}\n\n\n1\n\n\n就会显示昨天 master 分支的顶端指向了哪个提交。 这个方法只对还在你引用日志里的数据有用，所以不能用来查好几个月之前的提交。\n\n可以运行 git log -g 来查看类似于 git log 输出格式的引用日志信息：\n\n$ git log -g master\ncommit 734713bc047d87bf7eac9674765ae793478c50d3\nreflog: master@{0} (scott chacon <schacon@gmail.com>)\nreflog message: commit: fixed refs handling, added gc auto, updated\nauthor: scott chacon <schacon@gmail.com>\ndate:   fri jan 2 18:32:33 2009 -0800\n\n    fixed refs handling, added gc auto, updated tests\n\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nreflog: master@{1} (scott chacon <schacon@gmail.com>)\nreflog message: merge phedders/rdocs: merge made by recursive.\nauthor: scott chacon <schacon@gmail.com>\ndate:   thu dec 11 15:08:43 2008 -0800\n\n    merge commit 'phedders/rdocs'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n值得注意的是，引用日志只存在于本地仓库，它只是一个记录你在 自己 的仓库里做过什么的日志。 其他人拷贝的仓库里的引用日志不会和你的相同，而你新克隆一个仓库的时候，引用日志是空的，因为你在仓库里还没有操作。 git show head@{2.months.ago} 这条命令只有在你克隆了一个项目至少两个月时才会显示匹配的提交—— 如果你刚刚克隆了仓库，那么它将不会有任何结果返回。\n\ntip   将引用日志想作 git 版的 shell 历史记录如果你有 unix 或者 linux 的背景，不妨将引用日志想作\n      git 版的 shell 历史记录， 重点在于仅与你和你的会话相关，而与他人无关。\n      \n\n\n# 祖先引用\n\n祖先引用是另一种指明一个提交的方式。 如果你在引用的尾部加上一个 ^（脱字符）， git 会将其解析为该引用的上一个提交。 假设你的提交历史是：\n\n$ git log --pretty=format:'%h %s' --graph\n* 734713b fixed refs handling, added gc auto, updated tests\n*   d921970 merge commit 'phedders/rdocs'\n|\\\n| * 35cfb2b some rdoc changes\n* | 1c002dd added some blame and merge stuff\n|/\n* 1c36188 ignore *.gem\n* 9b29157 add open3_detach to gemspec file list\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n你可以使用 head^ 来查看上一个提交，也就是 “head 的父提交”：\n\n$ git show head^\ncommit d921970aadf03b3cf0e71becdaab3147ba71cdef\nmerge: 1c002dd... 35cfb2b...\nauthor: scott chacon <schacon@gmail.com>\ndate:   thu dec 11 15:08:43 2008 -0800\n\n    merge commit 'phedders/rdocs'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nnote   在 windows 上转义脱字符在 windows 的 cmd.exe 中，^ 是一个特殊字符，因此需要区别对待。\n       你可以双写它或者将提交引用放在引号中：$ git show head^ # 在 windows 上无法工作 $ git\n       show head^^ # 可以 $ git show \"head^\" # 可以\n       \n\n你也可以在 ^ 后面添加一个数字来指明想要 哪一个 父提交——例如 d921970^2 代表 “d921970 的第二父提交” 这个语法只适用于合并的提交，因为合并提交会有多个父提交。 合并提交的第一父提交是你合并时所在分支（通常为 master），而第二父提交是你所合并的分支（例如 topic）：\n\n$ git show d921970^\ncommit 1c002dd4b536e7479fe34593e72e6c6c1819e53b\nauthor: scott chacon <schacon@gmail.com>\ndate:   thu dec 11 14:58:32 2008 -0800\n\n    added some blame and merge stuff\n\n$ git show d921970^2\ncommit 35cfb2b795a55793d7cc56a6cc2060b4bb732548\nauthor: paul hedderly <paul+git@mjr.org>\ndate:   wed dec 10 22:22:03 2008 +0000\n\n    some rdoc changes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n另一种指明祖先提交的方法是 ~（波浪号）。 同样是指向第一父提交，因此 head~ 和 head^ 是等价的。 而区别在于你在后面加数字的时候。 head~2 代表“第一父提交的第一父提交”，也就是“祖父提交”——git 会根据你指定的次数获取对应的第一父提交。 例如，在之前的列出的提交历史中，head~3 就是\n\n$ git show head~3\ncommit 1c3618887afb5fbcbea25b7c013f4e2114448b8d\nauthor: tom preston-werner <tom@mojombo.com>\ndate:   fri nov 7 13:47:59 2008 -0500\n\n    ignore *.gem\n\n\n1\n2\n3\n4\n5\n6\n\n\n也可以写成 head~~~，也是第一父提交的第一父提交的第一父提交：\n\n$ git show head~~~\ncommit 1c3618887afb5fbcbea25b7c013f4e2114448b8d\nauthor: tom preston-werner <tom@mojombo.com>\ndate:   fri nov 7 13:47:59 2008 -0500\n\n    ignore *.gem\n\n\n1\n2\n3\n4\n5\n6\n\n\n你也可以组合使用这两个语法——你可以通过 head~3^2 来取得之前引用的第二父提交（假设它是一个合并提交）。\n\n\n# 提交区间\n\n你已经学会如何单次的提交，现在来看看如何指明一定区间的提交。 当你有很多分支时，这对管理你的分支时十分有用， 你可以用提交区间来解决“这个分支还有哪些提交尚未合并到主分支？”的问题\n\n\n# 双点\n\n最常用的指明提交区间语法是双点。 这种语法可以让 git 选出在一个分支中而不在另一个分支中的提交。 例如，你有如下的提交历史 example history for range selection.\n\n\n\nfigure 137. example history for range selection.\n\n你想要查看 experiment 分支中还有哪些提交尚未被合并入 master 分支。 你可以使用 master..experiment 来让 git 显示这些提交。也就是“在 experiment 分支中而不在 master 分支中的提交”。 为了使例子简单明了，我使用了示意图中提交对象的字母来代替真实日志的输出，所以会显示：\n\n$ git log master..experiment\nd\nc\n\n\n1\n2\n3\n\n\n反过来，如果你想查看在 master 分支中而不在 experiment 分支中的提交，你只要交换分支名即可。 experiment..master 会显示在 master 分支中而不在 experiment 分支中的提交：\n\n$ git log experiment..master\nf\ne\n\n\n1\n2\n3\n\n\n# 查看即将推送到远端的内容\n\n这可以让你保持 experiment 分支跟随最新的进度以及查看你即将合并的内容。 另一个常用的场景是查看你即将推送到远端的内容：\n\n$ git log origin/master..head\n\n\n1\n\n\n这个命令会输出在你当前分支中而不在远程 origin 中的提交。 如果你执行 git push 并且你的当前分支正在跟踪 origin/master，由 git log origin/master..head 所输出的提交就是会被传输到远端服务器的提交。如果你留空了其中的一边， git 会默认为 head。 例如， git log origin/master.. 将会输出与之前例子相同的结果 —— git 使用 head 来代替留空的一边。\n\n\n# 多点\n\n双点语法很好用，但有时候你可能需要两个以上的分支才能确定你所需要的修订， 比如查看哪些提交是被包含在某些分支中的一个，但是不在你当前的分支上。 git 允许你在任意引用前加上 ^ 字符或者 --not 来指明你不希望提交被包含其中的分支。 因此下列三个命令是等价的：\n\n$ git log refa..refb\n$ git log ^refa refb\n$ git log refb --not refa\n\n\n1\n2\n3\n\n\n这个语法很好用，因为你可以在查询中指定超过两个的引用，这是双点语法无法实现的。 比如，你想查看所有被 refa 或 refb 包含的但是不被 refc 包含的提交，你可以使用以下任意一个命令：\n\n$ git log refa refb ^refc\n$ git log refa refb --not refc\n\n\n1\n2\n\n\n这就构成了一个十分强大的修订查询系统，你可以通过它来查看你的分支里包含了哪些东西。\n\n\n# 三点\n\n最后一种主要的区间选择语法是三点，这个语法可以选择出被两个引用 之一 包含但又不被两者同时包含的提交。 再看看之前双点例子中的提交历史。 如果你想看 master 或者 experiment 中包含的但不是两者共有的提交，你可以执行：\n\n$ git log master...experiment\nf\ne\nd\nc\n\n\n1\n2\n3\n4\n5\n\n\n这和通常 log 按日期排序的输出一样，仅仅给出了4个提交的信息。\n\n这种情形下，log 命令的一个常用参数是 --left-right，它会显示每个提交到底处于哪一侧的分支。 这会让输出数据更加清晰。\n\n$ git log --left-right master...experiment\n< f\n< e\n> d\n> c\n\n\n1\n2\n3\n4\n5\n\n\n有了这些工具，你就可以十分方便地查看你 git 仓库中的提交。",charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3},{title:"Git工具-交互式暂存",frontmatter:{title:"Git工具-交互式暂存",date:"2020-11-18T17:43:57.000Z",permalink:"/pages/76d859/",categories:["《Git》学习笔记"],tags:["Git"]},regularPath:"/%E3%80%8AGit%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/90.Git%E5%B7%A5%E5%85%B7-%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98.html",relativePath:"《Git》学习笔记/20.文档笔记/90.Git工具-交互式暂存.md",key:"v-a682effa",path:"/pages/76d859/",headers:[{level:2,title:"暂存与取消暂存文件",slug:"暂存与取消暂存文件",normalizedTitle:"暂存与取消暂存文件",charIndex:751},{level:2,title:"暂存补丁",slug:"暂存补丁",normalizedTitle:"暂存补丁",charIndex:3468}],headersStr:"暂存与取消暂存文件 暂存补丁",content:'# Git工具-交互式暂存\n\n本节中的几个交互式 Git 命令可以帮助你将文件的特定部分组合成提交。 当你在修改了大量文件后，希望这些改动能拆分为若干提交而不是混杂在一起成为一个提交时，这几个工具会非常有用。 通过这种方式，可以确保提交是逻辑上独立的变更集，同时也会使其他开发者在与你工作时很容易地审核。 如果运行 git add 时使用 -i 或者 --interactive 选项，Git 将会进入一个交互式终端模式，显示类似下面的东西：\n\n$ git add -i\n           staged     unstaged path\n  1:    unchanged        +0/-1 TODO\n  2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n*** Commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nWhat now>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n可以看到这个命令以和平时非常不同的视图显示了暂存区——基本上与 git status 是相同的信息，但是更简明扼要一些。 它将暂存的修改列在左侧，未暂存的修改列在右侧。\n\n在这块区域后是“Commands”命令区域。 在这里你可以做一些工作，包括暂存文件、取消暂存文件、暂存文件的一部分、添加未被追踪的文件、显示暂存内容的区别。\n\n\n# 暂存与取消暂存文件\n\n如果在 What now> 提示符后键入 u 或 2（更新），它会问你想要暂存哪个文件：\n\nWhat now> u\n           staged     unstaged path\n  1:    unchanged        +0/-1 TODO\n  2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nUpdate>>\n\n\n1\n2\n3\n4\n5\n6\n\n\n要暂存 TODO 和 index.html 文件，可以输入数字：\n\nUpdate>> 1,2\n           staged     unstaged path\n* 1:    unchanged        +0/-1 TODO\n* 2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nUpdate>>\n\n\n1\n2\n3\n4\n5\n6\n\n\n每个文件前面的 * 意味着选中的文件将会被暂存。 如果在 Update>> 提示符后不输入任何东西并直接按回车，Git 将会暂存之前选择的文件：\n\nUpdate>>\nupdated 2 paths\n\n*** Commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nWhat now> s\n           staged     unstaged path\n  1:        +0/-1      nothing TODO\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在可以看到 TODO 与 index.html 文件已经被暂存而 simplegit.rb 文件还未被暂存。 如果这时想要取消暂存 TODO 文件，使用 r 或 3（撤消）选项：\n\n*** Commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nWhat now> r\n           staged     unstaged path\n  1:        +0/-1      nothing TODO\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nRevert>> 1\n           staged     unstaged path\n* 1:        +0/-1      nothing TODO\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nRevert>> [enter]\nreverted one path\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n再次查看 Git 状态，可以看到已经取消暂存 TODO 文件：\n\n*** Commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nWhat now> s\n           staged     unstaged path\n  1:    unchanged        +0/-1 TODO\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果想要查看已暂存内容的区别，可以使用 d 或 6（区别）命令。 它会显示暂存文件的一个列表，可以从中选择想要查看的暂存区别。 这跟你在命令行指定 git diff --cached 非常相似：\n\n*** Commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nWhat now> d\n           staged     unstaged path\n  1:        +1/-1      nothing index.html\nReview diff>> 1\ndiff --git a/index.html b/index.html\nindex 4d07108..4335f49 100644\n--- a/index.html\n+++ b/index.html\n@@ -16,7 +16,7 @@ Date Finder\n\n <p id="out">...</p>\n\n-<div id="footer">contact : support@github.com</div>\n+<div id="footer">contact : email.support@github.com</div>\n\n <script type="text/javascript">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n通过这些基本命令，可以使用交互式添加模式来轻松地处理暂存区。\n\n\n# 暂存补丁\n\nGit 也可以暂存文件的特定部分。 例如，如果在 simplegit.rb 文件中做了两处修改，但只想要暂存其中的一个而不是另一个，Git 会帮你轻松地完成。 在和上一节一样的交互式提示符中，输入 p 或 5（补丁）。 Git 会询问你想要部分暂存哪些文件；然后，对已选择文件的每一个部分，它都会一个个地显示文件区别并询问你是否想要暂存它们：\n\ndiff --git a/lib/simplegit.rb b/lib/simplegit.rb\nindex dd5ecc4..57399e0 100644\n--- a/lib/simplegit.rb\n+++ b/lib/simplegit.rb\n@@ -22,7 +22,7 @@ class SimpleGit\n   end\n\n   def log(treeish = \'master\')\n-    command("git log -n 25 #{treeish}")\n+    command("git log -n 30 #{treeish}")\n   end\n\n   def blame(path)\nStage this hunk [y,n,a,d,/,j,J,g,e,?]?\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n这时有很多选项。 输入 ? 显示所有可以使用的命令列表：\n\nStage this hunk [y,n,a,d,/,j,J,g,e,?]? ?\ny - stage this hunk\nn - do not stage this hunk\na - stage this and all the remaining hunks in the file\nd - do not stage this hunk nor any of the remaining hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n通常情况下可以输入 y 或 n 来选择是否要暂存每一个区块， 当然，暂存特定文件中的所有部分或为之后的选择跳过一个区块也是非常有用的。 如果你只暂存文件的一部分，状态输出可能会像下面这样：\n\nWhat now> 1\n           staged     unstaged path\n  1:    unchanged        +0/-1 TODO\n  2:        +1/-1      nothing index.html\n  3:        +1/-1        +4/-0 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n\n\nsimplegit.rb 文件的状态很有趣。 它显示出若干行被暂存与若干行未被暂存。 已经部分地暂存了这个文件。 在这时，可以退出交互式添加脚本并且运行 git commit 来提交部分暂存的文件。\n\n也可以不必在交互式添加模式中做部分文件暂存——可以在命令行中使用 git add -p 或 git add --patch 来启动同样的脚本。\n\n更进一步地，可以使用 git reset --patch 命令的补丁模式来部分重置文件， 通过 git checkout --patch 命令来部分检出文件与 git stash save --patch 命令来部分暂存文件。 我们将会在接触这些命令的高级使用方法时了解更多详细信息。',normalizedContent:'# git工具-交互式暂存\n\n本节中的几个交互式 git 命令可以帮助你将文件的特定部分组合成提交。 当你在修改了大量文件后，希望这些改动能拆分为若干提交而不是混杂在一起成为一个提交时，这几个工具会非常有用。 通过这种方式，可以确保提交是逻辑上独立的变更集，同时也会使其他开发者在与你工作时很容易地审核。 如果运行 git add 时使用 -i 或者 --interactive 选项，git 将会进入一个交互式终端模式，显示类似下面的东西：\n\n$ git add -i\n           staged     unstaged path\n  1:    unchanged        +0/-1 todo\n  2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n*** commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nwhat now>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n可以看到这个命令以和平时非常不同的视图显示了暂存区——基本上与 git status 是相同的信息，但是更简明扼要一些。 它将暂存的修改列在左侧，未暂存的修改列在右侧。\n\n在这块区域后是“commands”命令区域。 在这里你可以做一些工作，包括暂存文件、取消暂存文件、暂存文件的一部分、添加未被追踪的文件、显示暂存内容的区别。\n\n\n# 暂存与取消暂存文件\n\n如果在 what now> 提示符后键入 u 或 2（更新），它会问你想要暂存哪个文件：\n\nwhat now> u\n           staged     unstaged path\n  1:    unchanged        +0/-1 todo\n  2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nupdate>>\n\n\n1\n2\n3\n4\n5\n6\n\n\n要暂存 todo 和 index.html 文件，可以输入数字：\n\nupdate>> 1,2\n           staged     unstaged path\n* 1:    unchanged        +0/-1 todo\n* 2:    unchanged        +1/-1 index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nupdate>>\n\n\n1\n2\n3\n4\n5\n6\n\n\n每个文件前面的 * 意味着选中的文件将会被暂存。 如果在 update>> 提示符后不输入任何东西并直接按回车，git 将会暂存之前选择的文件：\n\nupdate>>\nupdated 2 paths\n\n*** commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nwhat now> s\n           staged     unstaged path\n  1:        +0/-1      nothing todo\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n现在可以看到 todo 与 index.html 文件已经被暂存而 simplegit.rb 文件还未被暂存。 如果这时想要取消暂存 todo 文件，使用 r 或 3（撤消）选项：\n\n*** commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nwhat now> r\n           staged     unstaged path\n  1:        +0/-1      nothing todo\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nrevert>> 1\n           staged     unstaged path\n* 1:        +0/-1      nothing todo\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\nrevert>> [enter]\nreverted one path\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n再次查看 git 状态，可以看到已经取消暂存 todo 文件：\n\n*** commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nwhat now> s\n           staged     unstaged path\n  1:    unchanged        +0/-1 todo\n  2:        +1/-1      nothing index.html\n  3:    unchanged        +5/-1 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果想要查看已暂存内容的区别，可以使用 d 或 6（区别）命令。 它会显示暂存文件的一个列表，可以从中选择想要查看的暂存区别。 这跟你在命令行指定 git diff --cached 非常相似：\n\n*** commands ***\n  1: [s]tatus     2: [u]pdate      3: [r]evert     4: [a]dd untracked\n  5: [p]atch      6: [d]iff        7: [q]uit       8: [h]elp\nwhat now> d\n           staged     unstaged path\n  1:        +1/-1      nothing index.html\nreview diff>> 1\ndiff --git a/index.html b/index.html\nindex 4d07108..4335f49 100644\n--- a/index.html\n+++ b/index.html\n@@ -16,7 +16,7 @@ date finder\n\n <p id="out">...</p>\n\n-<div id="footer">contact : support@github.com</div>\n+<div id="footer">contact : email.support@github.com</div>\n\n <script type="text/javascript">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n通过这些基本命令，可以使用交互式添加模式来轻松地处理暂存区。\n\n\n# 暂存补丁\n\ngit 也可以暂存文件的特定部分。 例如，如果在 simplegit.rb 文件中做了两处修改，但只想要暂存其中的一个而不是另一个，git 会帮你轻松地完成。 在和上一节一样的交互式提示符中，输入 p 或 5（补丁）。 git 会询问你想要部分暂存哪些文件；然后，对已选择文件的每一个部分，它都会一个个地显示文件区别并询问你是否想要暂存它们：\n\ndiff --git a/lib/simplegit.rb b/lib/simplegit.rb\nindex dd5ecc4..57399e0 100644\n--- a/lib/simplegit.rb\n+++ b/lib/simplegit.rb\n@@ -22,7 +22,7 @@ class simplegit\n   end\n\n   def log(treeish = \'master\')\n-    command("git log -n 25 #{treeish}")\n+    command("git log -n 30 #{treeish}")\n   end\n\n   def blame(path)\nstage this hunk [y,n,a,d,/,j,j,g,e,?]?\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n这时有很多选项。 输入 ? 显示所有可以使用的命令列表：\n\nstage this hunk [y,n,a,d,/,j,j,g,e,?]? ?\ny - stage this hunk\nn - do not stage this hunk\na - stage this and all the remaining hunks in the file\nd - do not stage this hunk nor any of the remaining hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nj - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nk - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n通常情况下可以输入 y 或 n 来选择是否要暂存每一个区块， 当然，暂存特定文件中的所有部分或为之后的选择跳过一个区块也是非常有用的。 如果你只暂存文件的一部分，状态输出可能会像下面这样：\n\nwhat now> 1\n           staged     unstaged path\n  1:    unchanged        +0/-1 todo\n  2:        +1/-1      nothing index.html\n  3:        +1/-1        +4/-0 lib/simplegit.rb\n\n\n1\n2\n3\n4\n5\n\n\nsimplegit.rb 文件的状态很有趣。 它显示出若干行被暂存与若干行未被暂存。 已经部分地暂存了这个文件。 在这时，可以退出交互式添加脚本并且运行 git commit 来提交部分暂存的文件。\n\n也可以不必在交互式添加模式中做部分文件暂存——可以在命令行中使用 git add -p 或 git add --patch 来启动同样的脚本。\n\n更进一步地，可以使用 git reset --patch 命令的补丁模式来部分重置文件， 通过 git checkout --patch 命令来部分检出文件与 git stash save --patch 命令来部分暂存文件。 我们将会在接触这些命令的高级使用方法时了解更多详细信息。',charsets:{cjk:!0},lastUpdated:"2022/05/15, 11:41:27",lastUpdatedTimestamp:1652614887e3}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"后端",link:"/backend/",items:[{text:"Java文章",items:[{text:"toString()、String.valueOf、(String)强转",link:"/pages/a61298/"}]},{text:"系统设计",items:[{text:"RESTful API",link:"/pages/83965d/"}]},{text:"学习笔记",items:[{text:"《Git》",link:"/note/git/"}]}]},{text:"算法",link:"/acm/",items:[{text:"题解",link:"/solution/"}]},{text:"技术",link:"/technology/",items:[{text:"技术文档",link:"/pages/9a7ee40fc232253e/"},{text:"GitHub技巧",link:"/pages/4c778760be26d8b3/"},{text:"Nodejs",link:"/pages/117708e0af7f0bd9/"},{text:"博客搭建",link:"/pages/41f87d890d0a02af/"}]},{text:"更多",link:"/more/",items:[{text:"学习",link:"/pages/f2a556/"},{text:"面试",link:"/pages/aea6571b7a8bae86/"},{text:"心情杂货",link:"/pages/2d615df9a36a98ed/"},{text:"实用技巧",link:"/pages/baaa02/"},{text:"友情链接",link:"/friends/"}]},{text:"关于",link:"/about/"},{text:"收藏",link:"/pages/beb6c0bd8a66cea6/"},{text:"索引",link:"/archives/",items:[{text:"分类",link:"/categories/"},{text:"标签",link:"/tags/"},{text:"归档",link:"/archives/"}]}],sidebarDepth:2,logo:"/img/logo.png",repo:"studentcui/blog",searchMaxSuggestions:10,lastUpdated:"上次更新",docsDir:"docs",docsBranch:"main",editLinks:!0,editLinkText:"编辑",sidebar:{"/00.目录页/":[["01.后端.md","后端","/backend"],["02.算法.md","算法","/acm"],["03.技术.md","技术","/technology"],["04.更多.md","更多","/more"],["05.题解.md","题解","/solution"]],catalogue:{"后端":"/backend","算法":"/acm","技术":"/technology","更多":"/more","题解":"/solution","《Git》学习笔记":"/note/git"},"/01.后端/":[{title:"Java文章",collapsable:!0,children:[["25.Java文章/10.toString()、String valueOf、(String)强转区别.md","面试被问：toString()、String.valueOf、(String)强转，有啥区别？","/pages/a61298/"]]},{title:"MySQL",collapsable:!0,children:[["30.MySQL/10.like结果包含反斜杠需要替换成四个反斜杠.md","Mysql like结果包含反斜杠\\，需替换成四个反斜杠\\\\\\\\","/pages/56cd49/","转载"]]},{title:"系统设计",collapsable:!0,children:[["35.系统设计/30.RESTful API.md","RESTful API","/pages/83965d/"]]},{title:"学习笔记",collapsable:!0,children:[["40.学习笔记/33.《Git》学习笔记.md","《Git》学习笔记","/note/git"]]}],"/02.算法/":[{title:"题解",collapsable:!0,children:[["25.题解/25.LeetCode 433 最小基因变化 图论 最短路问题.md","LeetCode 433.最小基因变化 图论 最短路问题","/pages/b57980/"]]}],"/03.技术/":[{title:"技术文档",collapsable:!0,children:[["01.技术文档/01.Git使用手册.md","Git使用手册","/pages/9a7ee40fc232253e"],["01.技术文档/02.Markdown使用教程.md","Markdown使用教程","/pages/ad247c4332211551"],["01.技术文档/03.npm常用命令.md","npm常用命令","/pages/61f2f95fd7da14fd"],["01.技术文档/10.npm packageJson属性详解.md","npm packageJson属性详解","/pages/dec4f3f00e71a312"],["01.技术文档/15.yaml语言教程.md","yaml语言教程","/pages/4e8444e2d534d14f"]]},{title:"GitHub技巧",collapsable:!0,children:[["02.GitHub技巧/01.GitHub高级搜索技巧.md","GitHub高级搜索技巧","/pages/4c778760be26d8b3"],["02.GitHub技巧/02.GitHub Actions 实现自动部署静态博客.md","GitHub Actions 实现自动部署静态博客","/pages/6b9d359ec5aa5019"],["02.GitHub技巧/03.GitHub Actions 定时运行代码：每天定时百度链接推送.md","GitHub Actions 定时运行代码：每天定时百度链接推送","/pages/f44d2f9ad04ab8d3"],["02.GitHub技巧/10.GitHub加速下载项目的方法.md","GitHub加速下载项目的方法","/pages/95331c6a9613faf8"]]},{title:"Nodejs",collapsable:!0,children:[["03.Nodejs/01.nodejs递归读取所有文件.md","nodejs递归读取所有文件","/pages/117708e0af7f0bd9"]]},{title:"博客搭建",collapsable:!0,children:[["04.博客搭建/01.解决百度无法收录搭建在GitHub上的个人博客的问题.md","解决百度无法收录搭建在GitHub上的个人博客的问题","/pages/41f87d890d0a02af"],["04.博客搭建/02.使用Gitalk实现静态博客无后台评论系统.md","使用Gitalk实现静态博客无后台评论系统","/pages/1da0bf9a988eafe5"],["04.博客搭建/03.GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床.md","GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床","/pages/a5f73af5185fdf0a"],["04.博客搭建/10.vdoing主题效果图.md","vdoing主题效果图","/pages/d557b9a89a215d2e"]]}],"/04.更多/":[{title:"学习",collapsable:!0,children:[["01.学习/00.费曼学习法.md","费曼学习法","/pages/f2a556/"],["01.学习/01.笔记方法.md","笔记方法","/pages/e60c81/"],["01.学习/02.提高学习效率的策略.md","提高学习效率的策略","/pages/a8692ab3bdcb4588"],["01.学习/03.提高记忆的技巧.md","提高记忆的技巧","/pages/996822b2a2ca6e3b"],["01.学习/04.自律小建议.md","自律小建议","/pages/c3f302a03c8daf79"],["01.学习/05.处理问题的思路.md","处理问题的思路","/pages/9ba2b8fb13de1957"],["01.学习/10.搜索引擎使用技巧.md","搜索引擎使用技巧","/pages/ce818a"]]},{title:"面试",collapsable:!0,children:[["03.面试/01.面试问题集锦.md","面试问题集锦","/pages/aea6571b7a8bae86"]]},{title:"心情杂货",collapsable:!0,children:[["05.心情杂货/01.一个完美主义者的自我救赎.md","一个完美主义者的自我救赎","/pages/2d615df9a36a98ed"],["05.心情杂货/10.反向拆解让人上瘾的套路，找回自律.md","反向拆解让人上瘾的套路，找回自律","/pages/d6d331/"]]},{title:"实用技巧",collapsable:!0,children:[["10.实用技巧/01.2分钟规则.md","2分钟规则","/pages/baaa02/"],["10.实用技巧/10.一行代码“黑”掉任意网站.md","一行代码“黑”掉任意网站","/pages/dcebaf/","转载"]]},["99.友情链接.md","友情链接","/friends"]],"/05.关于/":[["01.关于.md","关于","/about"]],"/06.收藏夹/":[["01.网站.md","网站","/pages/beb6c0bd8a66cea6"]],"/《Git》学习笔记/":[{title:"手册",collapsable:!0,children:[["10.手册/00.常用Git命令清单.md","常用Git命令清单","/pages/8292d8/"],["10.手册/03.Git变基合并.md","Git变基合并","/pages/c10281/"],["10.手册/06.Git命令思维导图.md","Git命令思维导图","/pages/4cbc21/"]]},{title:"文档笔记",collapsable:!0,children:[["20.文档笔记/10.Git基础与命令.md","Git基础与命令","/pages/635088/"],["20.文档笔记/20.Git分支-分支原理.md","Git分支-分支原理","/pages/4bef1a/"],["20.文档笔记/30.Git分支的新建与合并-分支操作.md","Git分支的新建与合并-分支操作","/pages/ea5a8c/"],["20.文档笔记/40.Git分支管理-查看分支.md","Git分支管理-查看分支","/pages/a399b3/"],["20.文档笔记/50.Git分支开发工作流.md","Git分支开发工作流","/pages/49ee30/"],["20.文档笔记/60.Git分支-远程分支.md","Git分支-远程分支","/pages/574d62/"],["20.文档笔记/70.Git分支-变基.md","Git分支-变基","/pages/3a3247/"],["20.文档笔记/80.Git工具-查看修订版本.md","Git工具-查看修订版本","/pages/c984d1/"],["20.文档笔记/90.Git工具-交互式暂存.md","Git工具-交互式暂存","/pages/76d859/"],["20.文档笔记/100.Git工具-重写历史.md","Git工具-重写历史","/pages/1832fe/"],["20.文档笔记/110.Git工具-重置揭密.md","Git工具-重置揭密","/pages/d9e9c6/"]]}]},author:{name:"Yao",link:"https://github.com/studentcui"},blogger:{avatar:"https://avatars.githubusercontent.com/u/51188442",name:"Yao",slogan:"后端界的小学生"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:83663028@qq.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/studentcui"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/playlist?id=504067897&userid=357886654"}]},footer:{createYear:2022,copyrightInfo:'Yao | <a href="https://github.com/studentcui/blog/blob/main/vdoing/LICENSE" target="_blank">MIT License</a>'},htmlModules:{homeSidebarB:'<div style="padding: 0.95rem">\n    <p style="\n      color: var(--textColor);\n      opacity: 0.9;\n      font-size: 20px;\n      font-weight: bold;\n      margin: 0 0 8px 0;\n    ">小霸王游戏机</p>\n    <p>\n    <a href="https://game.xugaoyi.com" arget="_blank" > FC在线模拟器(小霸王) <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>，还有更多好玩的等着你去探索~\n    </br></br>\n    </p>\n    </div>'}},locales:{"/":{lang:"zh-CN",title:"Yao's blog",description:"web前端技术博客,专注web前端学习与总结。JavaScript,js,ES6,TypeScript,vue,React,python,css3,html5,Node,git,github等技术文章。",path:"/"}}},cc=(t(155),t(214),t(143),t(224)),lc=t(225),uc=(t(391),t(240),t(42));var dc={computed:{$filterPosts:function(){return this.$site.pages.filter((function(n){var e=n.frontmatter,t=e.pageComponent,r=e.article,i=e.home;return!(t||!1===r||!0===i)}))},$sortPosts:function(){return(n=this.$filterPosts).sort((function(n,e){var t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(uc.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(uc.a)(n,e)})),n;var n},$sortPostsByDate:function(){return(n=this.$filterPosts).sort((function(n,e){return Object(uc.a)(n,e)})),n;var n},$groupPosts:function(){return function(n){for(var e={},t={},r=function(r,i){var a=n[r].frontmatter,o=a.categories,s=a.tags;"array"===Object(uc.n)(o)&&o.forEach((function(t){t&&(e[t]||(e[t]=[]),e[t].push(n[r]))})),"array"===Object(uc.n)(s)&&s.forEach((function(e){e&&(t[e]||(t[e]=[]),t[e].push(n[r]))}))},i=0,a=n.length;i<a;i++)r(i);return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags:function(){return function(n){var e=[],t=[];for(var r in n.categories)e.push({key:r,length:n.categories[r].length});for(var i in n.tags)t.push({key:i,length:n.tags[i].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Oi.component(cc.default),Oi.component(lc.default);function pc(n){return n.toString().padStart(2,"0")}t(395);Oi.component("Badge",(function(){return Promise.all([t.e(0),t.e(3)]).then(t.bind(null,555))})),Oi.component("CodeBlock",(function(){return Promise.resolve().then(t.bind(null,224))})),Oi.component("CodeGroup",(function(){return Promise.resolve().then(t.bind(null,225))}));t(396);var hc=[function(n){n.Vue,n.options,n.router,n.siteData},function(n){var e=n.Vue,t=(n.options,n.router,n.siteData);t.pages.map((function(n){var e=n.frontmatter,r=e.date,i=e.author;"string"==typeof r&&"Z"===r.charAt(r.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return"".concat(n.getUTCFullYear(),"-").concat(pc(n.getUTCMonth()+1),"-").concat(pc(n.getUTCDate())," ").concat(pc(n.getUTCHours()),":").concat(pc(n.getUTCMinutes()),":").concat(pc(n.getUTCSeconds()))}(r)),i?n.author=i:t.themeConfig.author&&(n.author=t.themeConfig.author)})),e.mixin(dc)},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(n){n.router;"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},function(n){var e=n.router;"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?503f098e7e5b3a5b5d8c5fc2938af002";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),e.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))}],mc=[];t(217);function gc(n,e){return(gc=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(218),t(219);function fc(n){return(fc=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function vc(n,e){if(e&&("object"===To(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function bc(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=fc(n);if(e){var i=fc(this).constructor;t=Reflect.construct(r,arguments,i)}else t=r.apply(this,arguments);return vc(this,t)}}var yc=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&gc(n,e)}(t,n);var e=bc(t);function t(){return ls(this,t),e.apply(this,arguments)}return ds(t)}(function(){function n(){ls(this,n),this.store=new Oi({data:{state:{}}})}return ds(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){Oi.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(yc.prototype,{getPageAsyncComponent:No,getLayoutAsyncComponent:Fo,getAsyncComponent:Uo,getVueComponent:qo});var xc={install:function(n){var e=new yc;n.$vuepress=e,n.prototype.$vuepress=e}};function kc(n){n.beforeEach((function(e,t,r){if(wc(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var i=e.path.replace(/\/$/,"")+".html";wc(n,i)?r(i):r()}else r();else{var a=e.path+"/",o=e.path+".html";wc(n,o)?r(o):wc(n,a)?r(a):r()}}))}function wc(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var Ec={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Wo("pageKey",e),Oi.component(e)||Oi.component(e,No(e)),Oi.component(e)?n(e):n("")}},Ac={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},_c={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Tc=(t(397),t(398),Object(ic.a)(_c,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function jc(){return(jc=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,i,a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:sc.routerBase||sc.base,kc(r=new Ao({base:t,mode:"history",fallback:!1,routes:oc,scrollBehavior:function(n,e,t){return t||(n.hash?!Oi.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),i={},n.prev=4,n.next=7,Promise.all(hc.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Oi,options:i,router:r,siteData:sc,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return a=new Oi(Object.assign(i,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},mc.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:a,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Oi.config.productionTip=!1,Oi.use(Ao),Oi.use(xc),Oi.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Oi;_o(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),i=new r,a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(i)),o={};return Object.keys(a).reduce((function(n,e){return e.startsWith("$")&&(n[e]=a[e].get),n}),o),{computed:o}}((function(n){return function(){function e(){ls(this,e)}return ds(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var i in r)"/"===i?e=r[i]:0===this.$page.path.indexOf(i)&&(n=r[i]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),sc)),Oi.component("Content",Ec),Oi.component("ContentSlotsDistributor",Ac),Oi.component("OutboundLink",Tc),Oi.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Oi.component("Layout",Fo("Layout")),Oi.component("NotFound",Fo("NotFound")),Oi.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.5",hash:"a503319"},function(n){return jc.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);