(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{479:function(t,a,s){"use strict";s.r(a);var n=s(29),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),s("p",[t._v("相信大家在日常开发中这三种方法用到的应该很多，尤其是前两种，经常在开发的时候，随心所欲，想用哪个用哪个，既然存在，那就应该有它存在的道理，那么什么情况下用哪个呢？")]),t._v(" "),s("h2",{attrs:{id:"二、代码实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、代码实例"}},[t._v("#")]),t._v(" 二、代码实例")]),t._v(" "),s("h3",{attrs:{id:"_1、基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本类型"}},[t._v("#")]),t._v(" 1、基本类型")]),t._v(" "),s("p",[t._v("（1）基本类型没有toString()方法")]),t._v(" "),s("p",[t._v("（2）推荐使用")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("（3）无法强转")]),t._v(" "),s("p",[t._v("（String）是标准的类型转换，将Object类型转为String类型，使用(String)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出ClassCastException异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。")]),t._v(" "),s("h3",{attrs:{id:"_2、封装类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、封装类型"}},[t._v("#")]),t._v(" 2、封装类型")]),t._v(" "),s("p",[t._v("（1）toString ok")]),t._v(" "),s("p",[t._v("（2）String.valueOf()")]),t._v(" "),s("p",[t._v("自然也是可以的。")]),t._v(" "),s("p",[t._v("（3）封装类型也无法强转")]),t._v(" "),s("h3",{attrs:{id:"_3、null值问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、null值问题"}},[t._v("#")]),t._v(" 3、null值问题")]),t._v(" "),s("p",[t._v("（1）toString()报空指针异常")]),t._v(" "),s("p",[t._v("（2）String.valueOf()返回字符串“null”")]),t._v(" "),s("p",[t._v("（3）null值强转成功")]),t._v(" "),s("h2",{attrs:{id:"三、源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、源码分析"}},[t._v("#")]),t._v(" 三、源码分析")]),t._v(" "),s("h3",{attrs:{id:"_1、tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、tostring"}},[t._v("#")]),t._v(" 1、toString()")]),t._v(" "),s("h3",{attrs:{id:"_2、string-valueof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、string-valueof"}},[t._v("#")]),t._v(" 2、String.valueOf()")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"null"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("String.valueOf()比toString多了一个非空判断。")]),t._v(" "),s("h2",{attrs:{id:"四、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、总结"}},[t._v("#")]),t._v(" 四、总结")]),t._v(" "),s("p",[t._v("1、toString()，可能会抛空指针异常\n在这种使用方法中，因为java.lang.Object类里已有public方法.toString()，所以java对象都可以调用此方法。但在使用时要注意，必须保证object不是null值，否则将抛出NullPointerException异常。采用这种方法时，通常派生类会覆盖Object里的toString()方法。")]),t._v(" "),s("p",[t._v("2、String.valueOf()，推荐使用，返回字符串“null”\nString.valueOf()方法是小编推荐使用的，因为它不会出现空指针异常，而且是静态的方法，直接通过String调用即可，只是有一点需要注意，就是上面提到的，如果为null，String.valueOf()返回结果是字符串“null”。而不是null。")]),t._v(" "),s("p",[t._v("3、(String)强转，不推荐使用\n（String）是标准的类型转换，将Object类型转为String类型，使用(String)强转时，最好使用instanceof做一个类型检查，以判断是否可以进行强转，否则容易抛出ClassCastException异常。需要注意的是编写的时候，编译器并不会提示有语法错误，所以这个方法要谨慎的使用。")]),t._v(" "),s("blockquote",[s("p",[t._v("作者：哪 吒\n链接：https://blog.csdn.net/guorui_java/article/details/117935620")])])])}),[],!1,null,null,null);a.default=r.exports}}]);